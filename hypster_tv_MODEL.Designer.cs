//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("hypster_tv_Model", "FK_pl_photos_pl_member", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(hypster_tv_DAL.Member), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(hypster_tv_DAL.Photo), true)]
[assembly: EdmRelationshipAttribute("hypster_tv_Model", "FK_pl_playlists_pl_member", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(hypster_tv_DAL.Member), "Playlist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(hypster_tv_DAL.Playlist), true)]
[assembly: EdmRelationshipAttribute("hypster_tv_Model", "FK_ArtistCategories_ArtistCategories", "ArtistCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(hypster_tv_DAL.ArtistCategory), "ArtistCategory1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(hypster_tv_DAL.ArtistCategory), true)]

#endregion

namespace hypster_tv_DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Hypster_Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Hypster_Entities object using the connection string found in the 'Hypster_Entities' section of the application configuration file.
        /// </summary>
        public Hypster_Entities() : base("name=Hypster_Entities", "Hypster_Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Hypster_Entities object.
        /// </summary>
        public Hypster_Entities(string connectionString) : base(connectionString, "Hypster_Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Hypster_Entities object.
        /// </summary>
        public Hypster_Entities(EntityConnection connection) : base(connection, "Hypster_Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionCrossover> SessionCrossovers
        {
            get
            {
                if ((_SessionCrossovers == null))
                {
                    _SessionCrossovers = base.CreateObjectSet<SessionCrossover>("SessionCrossovers");
                }
                return _SessionCrossovers;
            }
        }
        private ObjectSet<SessionCrossover> _SessionCrossovers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<videoFeatured> videoFeatureds
        {
            get
            {
                if ((_videoFeatureds == null))
                {
                    _videoFeatureds = base.CreateObjectSet<videoFeatured>("videoFeatureds");
                }
                return _videoFeatureds;
            }
        }
        private ObjectSet<videoFeatured> _videoFeatureds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<videoClip> videoClips
        {
            get
            {
                if ((_videoClips == null))
                {
                    _videoClips = base.CreateObjectSet<videoClip>("videoClips");
                }
                return _videoClips;
            }
        }
        private ObjectSet<videoClip> _videoClips;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeActivated> DeActivateds
        {
            get
            {
                if ((_DeActivateds == null))
                {
                    _DeActivateds = base.CreateObjectSet<DeActivated>("DeActivateds");
                }
                return _DeActivateds;
            }
        }
        private ObjectSet<DeActivated> _DeActivateds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<newsPost> newsPosts
        {
            get
            {
                if ((_newsPosts == null))
                {
                    _newsPosts = base.CreateObjectSet<newsPost>("newsPosts");
                }
                return _newsPosts;
            }
        }
        private ObjectSet<newsPost> _newsPosts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<newsComment> newsComments
        {
            get
            {
                if ((_newsComments == null))
                {
                    _newsComments = base.CreateObjectSet<newsComment>("newsComments");
                }
                return _newsComments;
            }
        }
        private ObjectSet<newsComment> _newsComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<videoComment> videoComments
        {
            get
            {
                if ((_videoComments == null))
                {
                    _videoComments = base.CreateObjectSet<videoComment>("videoComments");
                }
                return _videoComments;
            }
        }
        private ObjectSet<videoComment> _videoComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<userContact> userContacts
        {
            get
            {
                if ((_userContacts == null))
                {
                    _userContacts = base.CreateObjectSet<userContact>("userContacts");
                }
                return _userContacts;
            }
        }
        private ObjectSet<userContact> _userContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlaylistData> PlaylistDatas
        {
            get
            {
                if ((_PlaylistDatas == null))
                {
                    _PlaylistDatas = base.CreateObjectSet<PlaylistData>("PlaylistDatas");
                }
                return _PlaylistDatas;
            }
        }
        private ObjectSet<PlaylistData> _PlaylistDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Playlist> Playlists
        {
            get
            {
                if ((_Playlists == null))
                {
                    _Playlists = base.CreateObjectSet<Playlist>("Playlists");
                }
                return _Playlists;
            }
        }
        private ObjectSet<Playlist> _Playlists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Follower> Followers
        {
            get
            {
                if ((_Followers == null))
                {
                    _Followers = base.CreateObjectSet<Follower>("Followers");
                }
                return _Followers;
            }
        }
        private ObjectSet<Follower> _Followers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Photo> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photo>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photo> _Photos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Song> Songs
        {
            get
            {
                if ((_Songs == null))
                {
                    _Songs = base.CreateObjectSet<Song>("Songs");
                }
                return _Songs;
            }
        }
        private ObjectSet<Song> _Songs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MusicGenre> MusicGenres
        {
            get
            {
                if ((_MusicGenres == null))
                {
                    _MusicGenres = base.CreateObjectSet<MusicGenre>("MusicGenres");
                }
                return _MusicGenres;
            }
        }
        private ObjectSet<MusicGenre> _MusicGenres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MemberMusicGenre> MemberMusicGenres
        {
            get
            {
                if ((_MemberMusicGenres == null))
                {
                    _MemberMusicGenres = base.CreateObjectSet<MemberMusicGenre>("MemberMusicGenres");
                }
                return _MemberMusicGenres;
            }
        }
        private ObjectSet<MemberMusicGenre> _MemberMusicGenres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HypException> HypExceptions
        {
            get
            {
                if ((_HypExceptions == null))
                {
                    _HypExceptions = base.CreateObjectSet<HypException>("HypExceptions");
                }
                return _HypExceptions;
            }
        }
        private ObjectSet<HypException> _HypExceptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VisualSearch> VisualSearches
        {
            get
            {
                if ((_VisualSearches == null))
                {
                    _VisualSearches = base.CreateObjectSet<VisualSearch>("VisualSearches");
                }
                return _VisualSearches;
            }
        }
        private ObjectSet<VisualSearch> _VisualSearches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RadioStation> RadioStations
        {
            get
            {
                if ((_RadioStations == null))
                {
                    _RadioStations = base.CreateObjectSet<RadioStation>("RadioStations");
                }
                return _RadioStations;
            }
        }
        private ObjectSet<RadioStation> _RadioStations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<songComment> songComments
        {
            get
            {
                if ((_songComments == null))
                {
                    _songComments = base.CreateObjectSet<songComment>("songComments");
                }
                return _songComments;
            }
        }
        private ObjectSet<songComment> _songComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<newsCeleb> newsCelebs
        {
            get
            {
                if ((_newsCelebs == null))
                {
                    _newsCelebs = base.CreateObjectSet<newsCeleb>("newsCelebs");
                }
                return _newsCelebs;
            }
        }
        private ObjectSet<newsCeleb> _newsCelebs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlaylistLike> PlaylistLikes
        {
            get
            {
                if ((_PlaylistLikes == null))
                {
                    _PlaylistLikes = base.CreateObjectSet<PlaylistLike>("PlaylistLikes");
                }
                return _PlaylistLikes;
            }
        }
        private ObjectSet<PlaylistLike> _PlaylistLikes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Chart> Charts
        {
            get
            {
                if ((_Charts == null))
                {
                    _Charts = base.CreateObjectSet<Chart>("Charts");
                }
                return _Charts;
            }
        }
        private ObjectSet<Chart> _Charts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Festival> Festivals
        {
            get
            {
                if ((_Festivals == null))
                {
                    _Festivals = base.CreateObjectSet<Festival>("Festivals");
                }
                return _Festivals;
            }
        }
        private ObjectSet<Festival> _Festivals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Manual> Manuals
        {
            get
            {
                if ((_Manuals == null))
                {
                    _Manuals = base.CreateObjectSet<Manual>("Manuals");
                }
                return _Manuals;
            }
        }
        private ObjectSet<Manual> _Manuals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Manual_Slide> Manual_Slide
        {
            get
            {
                if ((_Manual_Slide == null))
                {
                    _Manual_Slide = base.CreateObjectSet<Manual_Slide>("Manual_Slide");
                }
                return _Manual_Slide;
            }
        }
        private ObjectSet<Manual_Slide> _Manual_Slide;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<homeSlideshow> homeSlideshows
        {
            get
            {
                if ((_homeSlideshows == null))
                {
                    _homeSlideshows = base.CreateObjectSet<homeSlideshow>("homeSlideshows");
                }
                return _homeSlideshows;
            }
        }
        private ObjectSet<homeSlideshow> _homeSlideshows;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MemberPublicPage> MemberPublicPages
        {
            get
            {
                if ((_MemberPublicPages == null))
                {
                    _MemberPublicPages = base.CreateObjectSet<MemberPublicPage>("MemberPublicPages");
                }
                return _MemberPublicPages;
            }
        }
        private ObjectSet<MemberPublicPage> _MemberPublicPages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CaptchaLog> CaptchaLogs
        {
            get
            {
                if ((_CaptchaLogs == null))
                {
                    _CaptchaLogs = base.CreateObjectSet<CaptchaLog>("CaptchaLogs");
                }
                return _CaptchaLogs;
            }
        }
        private ObjectSet<CaptchaLog> _CaptchaLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Mix_Mobile> Mix_Mobile
        {
            get
            {
                if ((_Mix_Mobile == null))
                {
                    _Mix_Mobile = base.CreateObjectSet<Mix_Mobile>("Mix_Mobile");
                }
                return _Mix_Mobile;
            }
        }
        private ObjectSet<Mix_Mobile> _Mix_Mobile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Radio_Usage> Radio_Usage
        {
            get
            {
                if ((_Radio_Usage == null))
                {
                    _Radio_Usage = base.CreateObjectSet<Radio_Usage>("Radio_Usage");
                }
                return _Radio_Usage;
            }
        }
        private ObjectSet<Radio_Usage> _Radio_Usage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VoteForSong> VoteForSongs
        {
            get
            {
                if ((_VoteForSongs == null))
                {
                    _VoteForSongs = base.CreateObjectSet<VoteForSong>("VoteForSongs");
                }
                return _VoteForSongs;
            }
        }
        private ObjectSet<VoteForSong> _VoteForSongs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackLogin> TrackLogins
        {
            get
            {
                if ((_TrackLogins == null))
                {
                    _TrackLogins = base.CreateObjectSet<TrackLogin>("TrackLogins");
                }
                return _TrackLogins;
            }
        }
        private ObjectSet<TrackLogin> _TrackLogins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CoverContest> CoverContests
        {
            get
            {
                if ((_CoverContests == null))
                {
                    _CoverContests = base.CreateObjectSet<CoverContest>("CoverContests");
                }
                return _CoverContests;
            }
        }
        private ObjectSet<CoverContest> _CoverContests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CoverContestVote> CoverContestVotes
        {
            get
            {
                if ((_CoverContestVotes == null))
                {
                    _CoverContestVotes = base.CreateObjectSet<CoverContestVote>("CoverContestVotes");
                }
                return _CoverContestVotes;
            }
        }
        private ObjectSet<CoverContestVote> _CoverContestVotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturedPlaylist> FeaturedPlaylists
        {
            get
            {
                if ((_FeaturedPlaylists == null))
                {
                    _FeaturedPlaylists = base.CreateObjectSet<FeaturedPlaylist>("FeaturedPlaylists");
                }
                return _FeaturedPlaylists;
            }
        }
        private ObjectSet<FeaturedPlaylist> _FeaturedPlaylists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DynamicContent> DynamicContents
        {
            get
            {
                if ((_DynamicContents == null))
                {
                    _DynamicContents = base.CreateObjectSet<DynamicContent>("DynamicContents");
                }
                return _DynamicContents;
            }
        }
        private ObjectSet<DynamicContent> _DynamicContents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackWebsite> TrackWebsites
        {
            get
            {
                if ((_TrackWebsites == null))
                {
                    _TrackWebsites = base.CreateObjectSet<TrackWebsite>("TrackWebsites");
                }
                return _TrackWebsites;
            }
        }
        private ObjectSet<TrackWebsite> _TrackWebsites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Banner> Banners
        {
            get
            {
                if ((_Banners == null))
                {
                    _Banners = base.CreateObjectSet<Banner>("Banners");
                }
                return _Banners;
            }
        }
        private ObjectSet<Banner> _Banners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlockedTerm> BlockedTerms
        {
            get
            {
                if ((_BlockedTerms == null))
                {
                    _BlockedTerms = base.CreateObjectSet<BlockedTerm>("BlockedTerms");
                }
                return _BlockedTerms;
            }
        }
        private ObjectSet<BlockedTerm> _BlockedTerms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag_Playlist> Tag_Playlist
        {
            get
            {
                if ((_Tag_Playlist == null))
                {
                    _Tag_Playlist = base.CreateObjectSet<Tag_Playlist>("Tag_Playlist");
                }
                return _Tag_Playlist;
            }
        }
        private ObjectSet<Tag_Playlist> _Tag_Playlist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag_News> Tag_News
        {
            get
            {
                if ((_Tag_News == null))
                {
                    _Tag_News = base.CreateObjectSet<Tag_News>("Tag_News");
                }
                return _Tag_News;
            }
        }
        private ObjectSet<Tag_News> _Tag_News;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturedContent> FeaturedContents
        {
            get
            {
                if ((_FeaturedContents == null))
                {
                    _FeaturedContents = base.CreateObjectSet<FeaturedContent>("FeaturedContents");
                }
                return _FeaturedContents;
            }
        }
        private ObjectSet<FeaturedContent> _FeaturedContents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> Members
        {
            get
            {
                if ((_Members == null))
                {
                    _Members = base.CreateObjectSet<Member>("Members");
                }
                return _Members;
            }
        }
        private ObjectSet<Member> _Members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dead_Link> Dead_Link
        {
            get
            {
                if ((_Dead_Link == null))
                {
                    _Dead_Link = base.CreateObjectSet<Dead_Link>("Dead_Link");
                }
                return _Dead_Link;
            }
        }
        private ObjectSet<Dead_Link> _Dead_Link;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ArtistCategory> ArtistCategories
        {
            get
            {
                if ((_ArtistCategories == null))
                {
                    _ArtistCategories = base.CreateObjectSet<ArtistCategory>("ArtistCategories");
                }
                return _ArtistCategories;
            }
        }
        private ObjectSet<ArtistCategory> _ArtistCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MemberSongSkip> MemberSongSkips
        {
            get
            {
                if ((_MemberSongSkips == null))
                {
                    _MemberSongSkips = base.CreateObjectSet<MemberSongSkip>("MemberSongSkips");
                }
                return _MemberSongSkips;
            }
        }
        private ObjectSet<MemberSongSkip> _MemberSongSkips;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListenHistory> ListenHistories
        {
            get
            {
                if ((_ListenHistories == null))
                {
                    _ListenHistories = base.CreateObjectSet<ListenHistory>("ListenHistories");
                }
                return _ListenHistories;
            }
        }
        private ObjectSet<ListenHistory> _ListenHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sitemap_Content> Sitemap_Content
        {
            get
            {
                if ((_Sitemap_Content == null))
                {
                    _Sitemap_Content = base.CreateObjectSet<Sitemap_Content>("Sitemap_Content");
                }
                return _Sitemap_Content;
            }
        }
        private ObjectSet<Sitemap_Content> _Sitemap_Content;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScheduledPost> ScheduledPost
        {
            get
            {
                if ((_ScheduledPost == null))
                {
                    _ScheduledPost = base.CreateObjectSet<ScheduledPost>("ScheduledPost");
                }
                return _ScheduledPost;
            }
        }
        private ObjectSet<ScheduledPost> _ScheduledPost;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionCrossovers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionCrossovers(SessionCrossover sessionCrossover)
        {
            base.AddObject("SessionCrossovers", sessionCrossover);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the videoFeatureds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovideoFeatureds(videoFeatured videoFeatured)
        {
            base.AddObject("videoFeatureds", videoFeatured);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the videoClips EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovideoClips(videoClip videoClip)
        {
            base.AddObject("videoClips", videoClip);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeActivateds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeActivateds(DeActivated deActivated)
        {
            base.AddObject("DeActivateds", deActivated);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the newsPosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTonewsPosts(newsPost newsPost)
        {
            base.AddObject("newsPosts", newsPost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the newsComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTonewsComments(newsComment newsComment)
        {
            base.AddObject("newsComments", newsComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the videoComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovideoComments(videoComment videoComment)
        {
            base.AddObject("videoComments", videoComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the userContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouserContacts(userContact userContact)
        {
            base.AddObject("userContacts", userContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlaylistDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlaylistDatas(PlaylistData playlistData)
        {
            base.AddObject("PlaylistDatas", playlistData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Playlists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlaylists(Playlist playlist)
        {
            base.AddObject("Playlists", playlist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Followers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFollowers(Follower follower)
        {
            base.AddObject("Followers", follower);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Photos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotos(Photo photo)
        {
            base.AddObject("Photos", photo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Songs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSongs(Song song)
        {
            base.AddObject("Songs", song);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MusicGenres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMusicGenres(MusicGenre musicGenre)
        {
            base.AddObject("MusicGenres", musicGenre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MemberMusicGenres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberMusicGenres(MemberMusicGenre memberMusicGenre)
        {
            base.AddObject("MemberMusicGenres", memberMusicGenre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HypExceptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHypExceptions(HypException hypException)
        {
            base.AddObject("HypExceptions", hypException);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VisualSearches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVisualSearches(VisualSearch visualSearch)
        {
            base.AddObject("VisualSearches", visualSearch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RadioStations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRadioStations(RadioStation radioStation)
        {
            base.AddObject("RadioStations", radioStation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the songComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosongComments(songComment songComment)
        {
            base.AddObject("songComments", songComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the newsCelebs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTonewsCelebs(newsCeleb newsCeleb)
        {
            base.AddObject("newsCelebs", newsCeleb);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlaylistLikes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlaylistLikes(PlaylistLike playlistLike)
        {
            base.AddObject("PlaylistLikes", playlistLike);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Charts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCharts(Chart chart)
        {
            base.AddObject("Charts", chart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Festivals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFestivals(Festival festival)
        {
            base.AddObject("Festivals", festival);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Manuals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManuals(Manual manual)
        {
            base.AddObject("Manuals", manual);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Manual_Slide EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManual_Slide(Manual_Slide manual_Slide)
        {
            base.AddObject("Manual_Slide", manual_Slide);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the homeSlideshows EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTohomeSlideshows(homeSlideshow homeSlideshow)
        {
            base.AddObject("homeSlideshows", homeSlideshow);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MemberPublicPages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberPublicPages(MemberPublicPage memberPublicPage)
        {
            base.AddObject("MemberPublicPages", memberPublicPage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CaptchaLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCaptchaLogs(CaptchaLog captchaLog)
        {
            base.AddObject("CaptchaLogs", captchaLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Mix_Mobile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMix_Mobile(Mix_Mobile mix_Mobile)
        {
            base.AddObject("Mix_Mobile", mix_Mobile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Radio_Usage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRadio_Usage(Radio_Usage radio_Usage)
        {
            base.AddObject("Radio_Usage", radio_Usage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VoteForSongs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVoteForSongs(VoteForSong voteForSong)
        {
            base.AddObject("VoteForSongs", voteForSong);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackLogins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackLogins(TrackLogin trackLogin)
        {
            base.AddObject("TrackLogins", trackLogin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CoverContests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoverContests(CoverContest coverContest)
        {
            base.AddObject("CoverContests", coverContest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CoverContestVotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoverContestVotes(CoverContestVote coverContestVote)
        {
            base.AddObject("CoverContestVotes", coverContestVote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturedPlaylists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturedPlaylists(FeaturedPlaylist featuredPlaylist)
        {
            base.AddObject("FeaturedPlaylists", featuredPlaylist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DynamicContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDynamicContents(DynamicContent dynamicContent)
        {
            base.AddObject("DynamicContents", dynamicContent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackWebsites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackWebsites(TrackWebsite trackWebsite)
        {
            base.AddObject("TrackWebsites", trackWebsite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Banners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBanners(Banner banner)
        {
            base.AddObject("Banners", banner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlockedTerms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlockedTerms(BlockedTerm blockedTerm)
        {
            base.AddObject("BlockedTerms", blockedTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tag_Playlist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTag_Playlist(Tag_Playlist tag_Playlist)
        {
            base.AddObject("Tag_Playlist", tag_Playlist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tag_News EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTag_News(Tag_News tag_News)
        {
            base.AddObject("Tag_News", tag_News);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturedContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturedContents(FeaturedContent featuredContent)
        {
            base.AddObject("FeaturedContents", featuredContent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembers(Member member)
        {
            base.AddObject("Members", member);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dead_Link EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDead_Link(Dead_Link dead_Link)
        {
            base.AddObject("Dead_Link", dead_Link);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ArtistCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArtistCategories(ArtistCategory artistCategory)
        {
            base.AddObject("ArtistCategories", artistCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MemberSongSkips EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberSongSkips(MemberSongSkip memberSongSkip)
        {
            base.AddObject("MemberSongSkips", memberSongSkip);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListenHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListenHistories(ListenHistory listenHistory)
        {
            base.AddObject("ListenHistories", listenHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sitemap_Content EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSitemap_Content(Sitemap_Content sitemap_Content)
        {
            base.AddObject("Sitemap_Content", sitemap_Content);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScheduledPost EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScheduledPost(ScheduledPost scheduledPost)
        {
            base.AddObject("ScheduledPost", scheduledPost);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_getMemberByID(Nullable<global::System.Int32> p_member_id)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_getMemberByID", p_member_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_getMemberByID(Nullable<global::System.Int32> p_member_id, MergeOption mergeOption)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_getMemberByID", mergeOption, p_member_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_username">No Metadata Documentation available.</param>
        /// <param name="p_password">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_ValidateMember(global::System.String p_username, global::System.String p_password)
        {
            ObjectParameter p_usernameParameter;
            if (p_username != null)
            {
                p_usernameParameter = new ObjectParameter("p_username", p_username);
            }
            else
            {
                p_usernameParameter = new ObjectParameter("p_username", typeof(global::System.String));
            }
    
            ObjectParameter p_passwordParameter;
            if (p_password != null)
            {
                p_passwordParameter = new ObjectParameter("p_password", p_password);
            }
            else
            {
                p_passwordParameter = new ObjectParameter("p_password", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_ValidateMember", p_usernameParameter, p_passwordParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_username">No Metadata Documentation available.</param>
        /// <param name="p_password">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_ValidateMember(global::System.String p_username, global::System.String p_password, MergeOption mergeOption)
        {
            ObjectParameter p_usernameParameter;
            if (p_username != null)
            {
                p_usernameParameter = new ObjectParameter("p_username", p_username);
            }
            else
            {
                p_usernameParameter = new ObjectParameter("p_username", typeof(global::System.String));
            }
    
            ObjectParameter p_passwordParameter;
            if (p_password != null)
            {
                p_passwordParameter = new ObjectParameter("p_password", p_password);
            }
            else
            {
                p_passwordParameter = new ObjectParameter("p_password", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_ValidateMember", mergeOption, p_usernameParameter, p_passwordParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_session_id">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_getMemberBySessionID(global::System.String p_session_id)
        {
            ObjectParameter p_session_idParameter;
            if (p_session_id != null)
            {
                p_session_idParameter = new ObjectParameter("p_session_id", p_session_id);
            }
            else
            {
                p_session_idParameter = new ObjectParameter("p_session_id", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_getMemberBySessionID", p_session_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_session_id">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_getMemberBySessionID(global::System.String p_session_id, MergeOption mergeOption)
        {
            ObjectParameter p_session_idParameter;
            if (p_session_id != null)
            {
                p_session_idParameter = new ObjectParameter("p_session_id", p_session_id);
            }
            else
            {
                p_session_idParameter = new ObjectParameter("p_session_id", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_getMemberBySessionID", mergeOption, p_session_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Int32>> sp_videoClips_getNumberOfVideoClips()
        {
            return base.ExecuteFunction<Nullable<global::System.Int32>>("sp_videoClips_getNumberOfVideoClips");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<videoFeaturedSlideshow> sp_videoFeatured_getFeaturedVideos()
        {
            return base.ExecuteFunction<videoFeaturedSlideshow>("sp_videoFeatured_getFeaturedVideos");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_numOfVideos">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClips_getNewVideos(Nullable<global::System.Int32> p_numOfVideos)
        {
            ObjectParameter p_numOfVideosParameter;
            if (p_numOfVideos.HasValue)
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", p_numOfVideos);
            }
            else
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClips_getNewVideos", p_numOfVideosParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_numOfVideos">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClips_getNewVideos(Nullable<global::System.Int32> p_numOfVideos, MergeOption mergeOption)
        {
            ObjectParameter p_numOfVideosParameter;
            if (p_numOfVideos.HasValue)
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", p_numOfVideos);
            }
            else
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClips_getNewVideos", mergeOption, p_numOfVideosParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_numOfVideos">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClips_getTopRatedVideos(Nullable<global::System.Int32> p_numOfVideos)
        {
            ObjectParameter p_numOfVideosParameter;
            if (p_numOfVideos.HasValue)
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", p_numOfVideos);
            }
            else
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClips_getTopRatedVideos", p_numOfVideosParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_numOfVideos">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClips_getTopRatedVideos(Nullable<global::System.Int32> p_numOfVideos, MergeOption mergeOption)
        {
            ObjectParameter p_numOfVideosParameter;
            if (p_numOfVideos.HasValue)
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", p_numOfVideos);
            }
            else
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClips_getTopRatedVideos", mergeOption, p_numOfVideosParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_videoClipGUID">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClip_getVideoByGUID(global::System.String p_videoClipGUID)
        {
            ObjectParameter p_videoClipGUIDParameter;
            if (p_videoClipGUID != null)
            {
                p_videoClipGUIDParameter = new ObjectParameter("p_videoClipGUID", p_videoClipGUID);
            }
            else
            {
                p_videoClipGUIDParameter = new ObjectParameter("p_videoClipGUID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClip_getVideoByGUID", p_videoClipGUIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_videoClipGUID">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClip_getVideoByGUID(global::System.String p_videoClipGUID, MergeOption mergeOption)
        {
            ObjectParameter p_videoClipGUIDParameter;
            if (p_videoClipGUID != null)
            {
                p_videoClipGUIDParameter = new ObjectParameter("p_videoClipGUID", p_videoClipGUID);
            }
            else
            {
                p_videoClipGUIDParameter = new ObjectParameter("p_videoClipGUID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClip_getVideoByGUID", mergeOption, p_videoClipGUIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_videoClip_ID">No Metadata Documentation available.</param>
        /// <param name="p_ViewsNum">No Metadata Documentation available.</param>
        public int sp_videoClips_AddVideoView(Nullable<global::System.Int32> p_videoClip_ID, Nullable<global::System.Int32> p_ViewsNum)
        {
            ObjectParameter p_videoClip_IDParameter;
            if (p_videoClip_ID.HasValue)
            {
                p_videoClip_IDParameter = new ObjectParameter("p_videoClip_ID", p_videoClip_ID);
            }
            else
            {
                p_videoClip_IDParameter = new ObjectParameter("p_videoClip_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_ViewsNumParameter;
            if (p_ViewsNum.HasValue)
            {
                p_ViewsNumParameter = new ObjectParameter("p_ViewsNum", p_ViewsNum);
            }
            else
            {
                p_ViewsNumParameter = new ObjectParameter("p_ViewsNum", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_videoClips_AddVideoView", p_videoClip_IDParameter, p_ViewsNumParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_post_id">No Metadata Documentation available.</param>
        public ObjectResult<newsPost> sp_newsPost_GetPostByID(Nullable<global::System.Int32> p_post_id)
        {
            ObjectParameter p_post_idParameter;
            if (p_post_id.HasValue)
            {
                p_post_idParameter = new ObjectParameter("p_post_id", p_post_id);
            }
            else
            {
                p_post_idParameter = new ObjectParameter("p_post_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsPost>("sp_newsPost_GetPostByID", p_post_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_post_id">No Metadata Documentation available.</param>
        public ObjectResult<newsPost> sp_newsPost_GetPostByID(Nullable<global::System.Int32> p_post_id, MergeOption mergeOption)
        {
            ObjectParameter p_post_idParameter;
            if (p_post_id.HasValue)
            {
                p_post_idParameter = new ObjectParameter("p_post_id", p_post_id);
            }
            else
            {
                p_post_idParameter = new ObjectParameter("p_post_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsPost>("sp_newsPost_GetPostByID", mergeOption, p_post_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_post_guid">No Metadata Documentation available.</param>
        public ObjectResult<newsPost> sp_newsPost_GetPostByGUID(global::System.String p_post_guid)
        {
            ObjectParameter p_post_guidParameter;
            if (p_post_guid != null)
            {
                p_post_guidParameter = new ObjectParameter("p_post_guid", p_post_guid);
            }
            else
            {
                p_post_guidParameter = new ObjectParameter("p_post_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<newsPost>("sp_newsPost_GetPostByGUID", p_post_guidParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_post_guid">No Metadata Documentation available.</param>
        public ObjectResult<newsPost> sp_newsPost_GetPostByGUID(global::System.String p_post_guid, MergeOption mergeOption)
        {
            ObjectParameter p_post_guidParameter;
            if (p_post_guid != null)
            {
                p_post_guidParameter = new ObjectParameter("p_post_guid", p_post_guid);
            }
            else
            {
                p_post_guidParameter = new ObjectParameter("p_post_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<newsPost>("sp_newsPost_GetPostByGUID", mergeOption, p_post_guidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_videoFeatured_ID">No Metadata Documentation available.</param>
        public ObjectResult<videoFeaturedSlideshow> sp_videoFeatured_getFeaturedVideoByID(Nullable<global::System.Int32> p_videoFeatured_ID)
        {
            ObjectParameter p_videoFeatured_IDParameter;
            if (p_videoFeatured_ID.HasValue)
            {
                p_videoFeatured_IDParameter = new ObjectParameter("p_videoFeatured_ID", p_videoFeatured_ID);
            }
            else
            {
                p_videoFeatured_IDParameter = new ObjectParameter("p_videoFeatured_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoFeaturedSlideshow>("sp_videoFeatured_getFeaturedVideoByID", p_videoFeatured_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_videoFeatured_ID">No Metadata Documentation available.</param>
        public int sp_videoFeatured_DeleteFeaturedVideo(Nullable<global::System.Int32> p_videoFeatured_ID)
        {
            ObjectParameter p_videoFeatured_IDParameter;
            if (p_videoFeatured_ID.HasValue)
            {
                p_videoFeatured_IDParameter = new ObjectParameter("p_videoFeatured_ID", p_videoFeatured_ID);
            }
            else
            {
                p_videoFeatured_IDParameter = new ObjectParameter("p_videoFeatured_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_videoFeatured_DeleteFeaturedVideo", p_videoFeatured_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_numOfVideos">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClips_getNewVideos_Admin(Nullable<global::System.Int32> p_numOfVideos)
        {
            ObjectParameter p_numOfVideosParameter;
            if (p_numOfVideos.HasValue)
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", p_numOfVideos);
            }
            else
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClips_getNewVideos_Admin", p_numOfVideosParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_numOfVideos">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClips_getNewVideos_Admin(Nullable<global::System.Int32> p_numOfVideos, MergeOption mergeOption)
        {
            ObjectParameter p_numOfVideosParameter;
            if (p_numOfVideos.HasValue)
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", p_numOfVideos);
            }
            else
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClips_getNewVideos_Admin", mergeOption, p_numOfVideosParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_numOfVideos">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClips_getTopRatedVideos_Admin(Nullable<global::System.Int32> p_numOfVideos)
        {
            ObjectParameter p_numOfVideosParameter;
            if (p_numOfVideos.HasValue)
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", p_numOfVideos);
            }
            else
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClips_getTopRatedVideos_Admin", p_numOfVideosParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_numOfVideos">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClips_getTopRatedVideos_Admin(Nullable<global::System.Int32> p_numOfVideos, MergeOption mergeOption)
        {
            ObjectParameter p_numOfVideosParameter;
            if (p_numOfVideos.HasValue)
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", p_numOfVideos);
            }
            else
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClips_getTopRatedVideos_Admin", mergeOption, p_numOfVideosParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Int32>> sp_videoClips_getNumberOfVideoClips_Admin()
        {
            return base.ExecuteFunction<Nullable<global::System.Int32>>("sp_videoClips_getNumberOfVideoClips_Admin");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_numOfPosts">No Metadata Documentation available.</param>
        public ObjectResult<newsPost> sp_newsPost_GetLatestNews(Nullable<global::System.Int32> p_numOfPosts)
        {
            ObjectParameter p_numOfPostsParameter;
            if (p_numOfPosts.HasValue)
            {
                p_numOfPostsParameter = new ObjectParameter("p_numOfPosts", p_numOfPosts);
            }
            else
            {
                p_numOfPostsParameter = new ObjectParameter("p_numOfPosts", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsPost>("sp_newsPost_GetLatestNews", p_numOfPostsParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_numOfPosts">No Metadata Documentation available.</param>
        public ObjectResult<newsPost> sp_newsPost_GetLatestNews(Nullable<global::System.Int32> p_numOfPosts, MergeOption mergeOption)
        {
            ObjectParameter p_numOfPostsParameter;
            if (p_numOfPosts.HasValue)
            {
                p_numOfPostsParameter = new ObjectParameter("p_numOfPosts", p_numOfPosts);
            }
            else
            {
                p_numOfPostsParameter = new ObjectParameter("p_numOfPosts", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsPost>("sp_newsPost_GetLatestNews", mergeOption, p_numOfPostsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_username">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_getMemberByUserName(global::System.String p_username)
        {
            ObjectParameter p_usernameParameter;
            if (p_username != null)
            {
                p_usernameParameter = new ObjectParameter("p_username", p_username);
            }
            else
            {
                p_usernameParameter = new ObjectParameter("p_username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_getMemberByUserName", p_usernameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_username">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_getMemberByUserName(global::System.String p_username, MergeOption mergeOption)
        {
            ObjectParameter p_usernameParameter;
            if (p_username != null)
            {
                p_usernameParameter = new ObjectParameter("p_username", p_username);
            }
            else
            {
                p_usernameParameter = new ObjectParameter("p_username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_getMemberByUserName", mergeOption, p_usernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_post_id">No Metadata Documentation available.</param>
        public ObjectResult<newsComment> sp_newsComment_GetPostComments(Nullable<global::System.Int32> p_post_id)
        {
            ObjectParameter p_post_idParameter;
            if (p_post_id.HasValue)
            {
                p_post_idParameter = new ObjectParameter("p_post_id", p_post_id);
            }
            else
            {
                p_post_idParameter = new ObjectParameter("p_post_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsComment>("sp_newsComment_GetPostComments", p_post_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_post_id">No Metadata Documentation available.</param>
        public ObjectResult<newsComment> sp_newsComment_GetPostComments(Nullable<global::System.Int32> p_post_id, MergeOption mergeOption)
        {
            ObjectParameter p_post_idParameter;
            if (p_post_id.HasValue)
            {
                p_post_idParameter = new ObjectParameter("p_post_id", p_post_id);
            }
            else
            {
                p_post_idParameter = new ObjectParameter("p_post_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsComment>("sp_newsComment_GetPostComments", mergeOption, p_post_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_video_id">No Metadata Documentation available.</param>
        public ObjectResult<videoComment> sp_videoComment_GetVideoComments(Nullable<global::System.Int32> p_video_id)
        {
            ObjectParameter p_video_idParameter;
            if (p_video_id.HasValue)
            {
                p_video_idParameter = new ObjectParameter("p_video_id", p_video_id);
            }
            else
            {
                p_video_idParameter = new ObjectParameter("p_video_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoComment>("sp_videoComment_GetVideoComments", p_video_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_video_id">No Metadata Documentation available.</param>
        public ObjectResult<videoComment> sp_videoComment_GetVideoComments(Nullable<global::System.Int32> p_video_id, MergeOption mergeOption)
        {
            ObjectParameter p_video_idParameter;
            if (p_video_id.HasValue)
            {
                p_video_idParameter = new ObjectParameter("p_video_id", p_video_id);
            }
            else
            {
                p_video_idParameter = new ObjectParameter("p_video_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoComment>("sp_videoComment_GetVideoComments", mergeOption, p_video_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_email">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_getMemberByEmail(global::System.String p_email)
        {
            ObjectParameter p_emailParameter;
            if (p_email != null)
            {
                p_emailParameter = new ObjectParameter("p_email", p_email);
            }
            else
            {
                p_emailParameter = new ObjectParameter("p_email", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_getMemberByEmail", p_emailParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_email">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_getMemberByEmail(global::System.String p_email, MergeOption mergeOption)
        {
            ObjectParameter p_emailParameter;
            if (p_email != null)
            {
                p_emailParameter = new ObjectParameter("p_email", p_email);
            }
            else
            {
                p_emailParameter = new ObjectParameter("p_email", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_getMemberByEmail", mergeOption, p_emailParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_id">No Metadata Documentation available.</param>
        /// <param name="p_password">No Metadata Documentation available.</param>
        public int sp_Members_updateMemberPassword(Nullable<global::System.Int32> p_id, global::System.String p_password)
        {
            ObjectParameter p_idParameter;
            if (p_id.HasValue)
            {
                p_idParameter = new ObjectParameter("p_id", p_id);
            }
            else
            {
                p_idParameter = new ObjectParameter("p_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_passwordParameter;
            if (p_password != null)
            {
                p_passwordParameter = new ObjectParameter("p_password", p_password);
            }
            else
            {
                p_passwordParameter = new ObjectParameter("p_password", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_Members_updateMemberPassword", p_idParameter, p_passwordParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_id">No Metadata Documentation available.</param>
        public ObjectResult<userContact> sp_userContact_Get_UserContactUs_byID(Nullable<global::System.Int32> p_id)
        {
            ObjectParameter p_idParameter;
            if (p_id.HasValue)
            {
                p_idParameter = new ObjectParameter("p_id", p_id);
            }
            else
            {
                p_idParameter = new ObjectParameter("p_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<userContact>("sp_userContact_Get_UserContactUs_byID", p_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_id">No Metadata Documentation available.</param>
        public ObjectResult<userContact> sp_userContact_Get_UserContactUs_byID(Nullable<global::System.Int32> p_id, MergeOption mergeOption)
        {
            ObjectParameter p_idParameter;
            if (p_id.HasValue)
            {
                p_idParameter = new ObjectParameter("p_id", p_id);
            }
            else
            {
                p_idParameter = new ObjectParameter("p_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<userContact>("sp_userContact_Get_UserContactUs_byID", mergeOption, p_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<userContact> sp_userContact_Get_ActiveUserContactUs()
        {
            return base.ExecuteFunction<userContact>("sp_userContact_Get_ActiveUserContactUs");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<userContact> sp_userContact_Get_ActiveUserContactUs(MergeOption mergeOption)
        {
            return base.ExecuteFunction<userContact>("sp_userContact_Get_ActiveUserContactUs", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_id">No Metadata Documentation available.</param>
        public int sp_userContact_Deactivate_UserContactUs(Nullable<global::System.Int32> p_id)
        {
            ObjectParameter p_idParameter;
            if (p_id.HasValue)
            {
                p_idParameter = new ObjectParameter("p_id", p_id);
            }
            else
            {
                p_idParameter = new ObjectParameter("p_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_userContact_Deactivate_UserContactUs", p_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_numOfMembers">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_GetMembersRandom(Nullable<global::System.Int32> p_numOfMembers)
        {
            ObjectParameter p_numOfMembersParameter;
            if (p_numOfMembers.HasValue)
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", p_numOfMembers);
            }
            else
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_GetMembersRandom", p_numOfMembersParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_numOfMembers">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_GetMembersRandom(Nullable<global::System.Int32> p_numOfMembers, MergeOption mergeOption)
        {
            ObjectParameter p_numOfMembersParameter;
            if (p_numOfMembers.HasValue)
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", p_numOfMembers);
            }
            else
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_GetMembersRandom", mergeOption, p_numOfMembersParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_song_guid">No Metadata Documentation available.</param>
        public ObjectResult<Song> sp_Song_GetSongByID(global::System.String p_song_guid)
        {
            ObjectParameter p_song_guidParameter;
            if (p_song_guid != null)
            {
                p_song_guidParameter = new ObjectParameter("p_song_guid", p_song_guid);
            }
            else
            {
                p_song_guidParameter = new ObjectParameter("p_song_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Song>("sp_Song_GetSongByID", p_song_guidParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_song_guid">No Metadata Documentation available.</param>
        public ObjectResult<Song> sp_Song_GetSongByID(global::System.String p_song_guid, MergeOption mergeOption)
        {
            ObjectParameter p_song_guidParameter;
            if (p_song_guid != null)
            {
                p_song_guidParameter = new ObjectParameter("p_song_guid", p_song_guid);
            }
            else
            {
                p_song_guidParameter = new ObjectParameter("p_song_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Song>("sp_Song_GetSongByID", mergeOption, p_song_guidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public int sp_Members_SetUserDefaultPlaylist(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Members_SetUserDefaultPlaylist", p_user_idParameter, p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Playlist> sp_Playlist_GetUserPlaylists(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetUserPlaylists", p_user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Playlist> sp_Playlist_GetUserPlaylists(Nullable<global::System.Int32> p_user_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetUserPlaylists", mergeOption, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> sp_Followers_GetNumberOfMembersIFollow(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("sp_Followers_GetNumberOfMembersIFollow", p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_id">No Metadata Documentation available.</param>
        /// <param name="p_name">No Metadata Documentation available.</param>
        /// <param name="p_AutoshareEnabled">No Metadata Documentation available.</param>
        /// <param name="p_birth">No Metadata Documentation available.</param>
        /// <param name="p_city">No Metadata Documentation available.</param>
        /// <param name="p_country">No Metadata Documentation available.</param>
        /// <param name="p_zipcode">No Metadata Documentation available.</param>
        /// <param name="p_sex">No Metadata Documentation available.</param>
        public int sp_Members_UpdateMemberProfileDetails(Nullable<global::System.Int32> p_id, global::System.String p_name, Nullable<global::System.Boolean> p_AutoshareEnabled, Nullable<global::System.DateTime> p_birth, global::System.String p_city, global::System.String p_country, global::System.String p_zipcode, Nullable<global::System.Byte> p_sex)
        {
            ObjectParameter p_idParameter;
            if (p_id.HasValue)
            {
                p_idParameter = new ObjectParameter("p_id", p_id);
            }
            else
            {
                p_idParameter = new ObjectParameter("p_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_nameParameter;
            if (p_name != null)
            {
                p_nameParameter = new ObjectParameter("p_name", p_name);
            }
            else
            {
                p_nameParameter = new ObjectParameter("p_name", typeof(global::System.String));
            }
    
            ObjectParameter p_AutoshareEnabledParameter;
            if (p_AutoshareEnabled.HasValue)
            {
                p_AutoshareEnabledParameter = new ObjectParameter("p_AutoshareEnabled", p_AutoshareEnabled);
            }
            else
            {
                p_AutoshareEnabledParameter = new ObjectParameter("p_AutoshareEnabled", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_birthParameter;
            if (p_birth.HasValue)
            {
                p_birthParameter = new ObjectParameter("p_birth", p_birth);
            }
            else
            {
                p_birthParameter = new ObjectParameter("p_birth", typeof(global::System.DateTime));
            }
    
            ObjectParameter p_cityParameter;
            if (p_city != null)
            {
                p_cityParameter = new ObjectParameter("p_city", p_city);
            }
            else
            {
                p_cityParameter = new ObjectParameter("p_city", typeof(global::System.String));
            }
    
            ObjectParameter p_countryParameter;
            if (p_country != null)
            {
                p_countryParameter = new ObjectParameter("p_country", p_country);
            }
            else
            {
                p_countryParameter = new ObjectParameter("p_country", typeof(global::System.String));
            }
    
            ObjectParameter p_zipcodeParameter;
            if (p_zipcode != null)
            {
                p_zipcodeParameter = new ObjectParameter("p_zipcode", p_zipcode);
            }
            else
            {
                p_zipcodeParameter = new ObjectParameter("p_zipcode", typeof(global::System.String));
            }
    
            ObjectParameter p_sexParameter;
            if (p_sex.HasValue)
            {
                p_sexParameter = new ObjectParameter("p_sex", p_sex);
            }
            else
            {
                p_sexParameter = new ObjectParameter("p_sex", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction("sp_Members_UpdateMemberProfileDetails", p_idParameter, p_nameParameter, p_AutoshareEnabledParameter, p_birthParameter, p_cityParameter, p_countryParameter, p_zipcodeParameter, p_sexParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Followers_GetMyFollowers(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Followers_GetMyFollowers", p_user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Followers_GetMyFollowers(Nullable<global::System.Int32> p_user_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Followers_GetMyFollowers", mergeOption, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Followers_GetMembersIFollow(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Followers_GetMembersIFollow", p_user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Followers_GetMembersIFollow(Nullable<global::System.Int32> p_user_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Followers_GetMembersIFollow", mergeOption, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public int sp_Playlist_Delete_Playlist(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Playlist_Delete_Playlist", p_user_idParameter, p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        /// <param name="p_name">No Metadata Documentation available.</param>
        public int sp_Playlist_Edit_Playlist(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_playlist_id, global::System.String p_name)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_nameParameter;
            if (p_name != null)
            {
                p_nameParameter = new ObjectParameter("p_name", p_name);
            }
            else
            {
                p_nameParameter = new ObjectParameter("p_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_Playlist_Edit_Playlist", p_user_idParameter, p_playlist_idParameter, p_nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Photo> sp_Photo_GetUserPhotos(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Photo>("sp_Photo_GetUserPhotos", p_user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Photo> sp_Photo_GetUserPhotos(Nullable<global::System.Int32> p_user_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Photo>("sp_Photo_GetUserPhotos", mergeOption, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_caption">No Metadata Documentation available.</param>
        /// <param name="p_new_id">No Metadata Documentation available.</param>
        public int sp_Photo_AddUserPhoto(Nullable<global::System.Int32> p_user_id, global::System.String p_caption, ObjectParameter p_new_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_captionParameter;
            if (p_caption != null)
            {
                p_captionParameter = new ObjectParameter("p_caption", p_caption);
            }
            else
            {
                p_captionParameter = new ObjectParameter("p_caption", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_Photo_AddUserPhoto", p_user_idParameter, p_captionParameter, p_new_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Song> sp_Songs_Get_MostPopularSong_Random()
        {
            return base.ExecuteFunction<Song>("sp_Songs_Get_MostPopularSong_Random");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Song> sp_Songs_Get_MostPopularSong_Random(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Song>("sp_Songs_Get_MostPopularSong_Random", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Player> sp_Player_GetUserPlayersList(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Player>("sp_Player_GetUserPlayersList", p_user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Player> sp_Player_GetUserPlayersList(Nullable<global::System.Int32> p_user_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Player>("sp_Player_GetUserPlayersList", mergeOption, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_player_id">No Metadata Documentation available.</param>
        public ObjectResult<Player> sp_Player_GetPlayerByID(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_player_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_player_idParameter;
            if (p_player_id.HasValue)
            {
                p_player_idParameter = new ObjectParameter("p_player_id", p_player_id);
            }
            else
            {
                p_player_idParameter = new ObjectParameter("p_player_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Player>("sp_Player_GetPlayerByID", p_user_idParameter, p_player_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_player_id">No Metadata Documentation available.</param>
        public ObjectResult<Player> sp_Player_GetPlayerByID(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_player_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_player_idParameter;
            if (p_player_id.HasValue)
            {
                p_player_idParameter = new ObjectParameter("p_player_id", p_player_id);
            }
            else
            {
                p_player_idParameter = new ObjectParameter("p_player_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Player>("sp_Player_GetPlayerByID", mergeOption, p_user_idParameter, p_player_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_player_ID">No Metadata Documentation available.</param>
        /// <param name="p_player_Name">No Metadata Documentation available.</param>
        /// <param name="p_playlist_ID">No Metadata Documentation available.</param>
        /// <param name="p_BAR_autostart">No Metadata Documentation available.</param>
        /// <param name="p_BAR_shufflePlayback">No Metadata Documentation available.</param>
        /// <param name="p_BAR_placementOfThePlayer">No Metadata Documentation available.</param>
        /// <param name="p_BAR_showPlaylistByDefault">No Metadata Documentation available.</param>
        /// <param name="p_BAR_playerSkin">No Metadata Documentation available.</param>
        /// <param name="p_CLASSIC_autostart">No Metadata Documentation available.</param>
        /// <param name="p_CLASSIC_shufflePlayback">No Metadata Documentation available.</param>
        /// <param name="p_CLASSIC_playerSkin">No Metadata Documentation available.</param>
        /// <param name="p_RADIO_autostart">No Metadata Documentation available.</param>
        /// <param name="p_RADIO_Genre">No Metadata Documentation available.</param>
        /// <param name="p_RADIO_Genre_ID">No Metadata Documentation available.</param>
        public int sp_Player_EditPlayer(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_player_ID, global::System.String p_player_Name, Nullable<global::System.Int32> p_playlist_ID, Nullable<global::System.Boolean> p_BAR_autostart, Nullable<global::System.Boolean> p_BAR_shufflePlayback, global::System.String p_BAR_placementOfThePlayer, Nullable<global::System.Boolean> p_BAR_showPlaylistByDefault, global::System.String p_BAR_playerSkin, Nullable<global::System.Boolean> p_CLASSIC_autostart, Nullable<global::System.Boolean> p_CLASSIC_shufflePlayback, global::System.String p_CLASSIC_playerSkin, Nullable<global::System.Boolean> p_RADIO_autostart, global::System.String p_RADIO_Genre, Nullable<global::System.Int32> p_RADIO_Genre_ID)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_player_IDParameter;
            if (p_player_ID.HasValue)
            {
                p_player_IDParameter = new ObjectParameter("p_player_ID", p_player_ID);
            }
            else
            {
                p_player_IDParameter = new ObjectParameter("p_player_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_player_NameParameter;
            if (p_player_Name != null)
            {
                p_player_NameParameter = new ObjectParameter("p_player_Name", p_player_Name);
            }
            else
            {
                p_player_NameParameter = new ObjectParameter("p_player_Name", typeof(global::System.String));
            }
    
            ObjectParameter p_playlist_IDParameter;
            if (p_playlist_ID.HasValue)
            {
                p_playlist_IDParameter = new ObjectParameter("p_playlist_ID", p_playlist_ID);
            }
            else
            {
                p_playlist_IDParameter = new ObjectParameter("p_playlist_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_BAR_autostartParameter;
            if (p_BAR_autostart.HasValue)
            {
                p_BAR_autostartParameter = new ObjectParameter("p_BAR_autostart", p_BAR_autostart);
            }
            else
            {
                p_BAR_autostartParameter = new ObjectParameter("p_BAR_autostart", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_BAR_shufflePlaybackParameter;
            if (p_BAR_shufflePlayback.HasValue)
            {
                p_BAR_shufflePlaybackParameter = new ObjectParameter("p_BAR_shufflePlayback", p_BAR_shufflePlayback);
            }
            else
            {
                p_BAR_shufflePlaybackParameter = new ObjectParameter("p_BAR_shufflePlayback", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_BAR_placementOfThePlayerParameter;
            if (p_BAR_placementOfThePlayer != null)
            {
                p_BAR_placementOfThePlayerParameter = new ObjectParameter("p_BAR_placementOfThePlayer", p_BAR_placementOfThePlayer);
            }
            else
            {
                p_BAR_placementOfThePlayerParameter = new ObjectParameter("p_BAR_placementOfThePlayer", typeof(global::System.String));
            }
    
            ObjectParameter p_BAR_showPlaylistByDefaultParameter;
            if (p_BAR_showPlaylistByDefault.HasValue)
            {
                p_BAR_showPlaylistByDefaultParameter = new ObjectParameter("p_BAR_showPlaylistByDefault", p_BAR_showPlaylistByDefault);
            }
            else
            {
                p_BAR_showPlaylistByDefaultParameter = new ObjectParameter("p_BAR_showPlaylistByDefault", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_BAR_playerSkinParameter;
            if (p_BAR_playerSkin != null)
            {
                p_BAR_playerSkinParameter = new ObjectParameter("p_BAR_playerSkin", p_BAR_playerSkin);
            }
            else
            {
                p_BAR_playerSkinParameter = new ObjectParameter("p_BAR_playerSkin", typeof(global::System.String));
            }
    
            ObjectParameter p_CLASSIC_autostartParameter;
            if (p_CLASSIC_autostart.HasValue)
            {
                p_CLASSIC_autostartParameter = new ObjectParameter("p_CLASSIC_autostart", p_CLASSIC_autostart);
            }
            else
            {
                p_CLASSIC_autostartParameter = new ObjectParameter("p_CLASSIC_autostart", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_CLASSIC_shufflePlaybackParameter;
            if (p_CLASSIC_shufflePlayback.HasValue)
            {
                p_CLASSIC_shufflePlaybackParameter = new ObjectParameter("p_CLASSIC_shufflePlayback", p_CLASSIC_shufflePlayback);
            }
            else
            {
                p_CLASSIC_shufflePlaybackParameter = new ObjectParameter("p_CLASSIC_shufflePlayback", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_CLASSIC_playerSkinParameter;
            if (p_CLASSIC_playerSkin != null)
            {
                p_CLASSIC_playerSkinParameter = new ObjectParameter("p_CLASSIC_playerSkin", p_CLASSIC_playerSkin);
            }
            else
            {
                p_CLASSIC_playerSkinParameter = new ObjectParameter("p_CLASSIC_playerSkin", typeof(global::System.String));
            }
    
            ObjectParameter p_RADIO_autostartParameter;
            if (p_RADIO_autostart.HasValue)
            {
                p_RADIO_autostartParameter = new ObjectParameter("p_RADIO_autostart", p_RADIO_autostart);
            }
            else
            {
                p_RADIO_autostartParameter = new ObjectParameter("p_RADIO_autostart", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_RADIO_GenreParameter;
            if (p_RADIO_Genre != null)
            {
                p_RADIO_GenreParameter = new ObjectParameter("p_RADIO_Genre", p_RADIO_Genre);
            }
            else
            {
                p_RADIO_GenreParameter = new ObjectParameter("p_RADIO_Genre", typeof(global::System.String));
            }
    
            ObjectParameter p_RADIO_Genre_IDParameter;
            if (p_RADIO_Genre_ID.HasValue)
            {
                p_RADIO_Genre_IDParameter = new ObjectParameter("p_RADIO_Genre_ID", p_RADIO_Genre_ID);
            }
            else
            {
                p_RADIO_Genre_IDParameter = new ObjectParameter("p_RADIO_Genre_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Player_EditPlayer", p_user_idParameter, p_player_IDParameter, p_player_NameParameter, p_playlist_IDParameter, p_BAR_autostartParameter, p_BAR_shufflePlaybackParameter, p_BAR_placementOfThePlayerParameter, p_BAR_showPlaylistByDefaultParameter, p_BAR_playerSkinParameter, p_CLASSIC_autostartParameter, p_CLASSIC_shufflePlaybackParameter, p_CLASSIC_playerSkinParameter, p_RADIO_autostartParameter, p_RADIO_GenreParameter, p_RADIO_Genre_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_player_id">No Metadata Documentation available.</param>
        public int sp_Player_DeletePlayer(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_player_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_player_idParameter;
            if (p_player_id.HasValue)
            {
                p_player_idParameter = new ObjectParameter("p_player_id", p_player_id);
            }
            else
            {
                p_player_idParameter = new ObjectParameter("p_player_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Player_DeletePlayer", p_user_idParameter, p_player_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_User_ID">No Metadata Documentation available.</param>
        /// <param name="p_Follower_ID">No Metadata Documentation available.</param>
        public ObjectResult<Follower> sp_Followers_CheckIfAlreadyFollow(Nullable<global::System.Int32> p_User_ID, Nullable<global::System.Int32> p_Follower_ID)
        {
            ObjectParameter p_User_IDParameter;
            if (p_User_ID.HasValue)
            {
                p_User_IDParameter = new ObjectParameter("p_User_ID", p_User_ID);
            }
            else
            {
                p_User_IDParameter = new ObjectParameter("p_User_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Follower_IDParameter;
            if (p_Follower_ID.HasValue)
            {
                p_Follower_IDParameter = new ObjectParameter("p_Follower_ID", p_Follower_ID);
            }
            else
            {
                p_Follower_IDParameter = new ObjectParameter("p_Follower_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Follower>("sp_Followers_CheckIfAlreadyFollow", p_User_IDParameter, p_Follower_IDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_User_ID">No Metadata Documentation available.</param>
        /// <param name="p_Follower_ID">No Metadata Documentation available.</param>
        public ObjectResult<Follower> sp_Followers_CheckIfAlreadyFollow(Nullable<global::System.Int32> p_User_ID, Nullable<global::System.Int32> p_Follower_ID, MergeOption mergeOption)
        {
            ObjectParameter p_User_IDParameter;
            if (p_User_ID.HasValue)
            {
                p_User_IDParameter = new ObjectParameter("p_User_ID", p_User_ID);
            }
            else
            {
                p_User_IDParameter = new ObjectParameter("p_User_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Follower_IDParameter;
            if (p_Follower_ID.HasValue)
            {
                p_Follower_IDParameter = new ObjectParameter("p_Follower_ID", p_Follower_ID);
            }
            else
            {
                p_Follower_IDParameter = new ObjectParameter("p_Follower_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Follower>("sp_Followers_CheckIfAlreadyFollow", mergeOption, p_User_IDParameter, p_Follower_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_photo_id">No Metadata Documentation available.</param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public int sp_Photo_DeleteUserPhoto(Nullable<global::System.Int32> p_photo_id, Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_photo_idParameter;
            if (p_photo_id.HasValue)
            {
                p_photo_idParameter = new ObjectParameter("p_photo_id", p_photo_id);
            }
            else
            {
                p_photo_idParameter = new ObjectParameter("p_photo_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Photo_DeleteUserPhoto", p_photo_idParameter, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_picture_id">No Metadata Documentation available.</param>
        public int sp_Members_UpdateMemberProfilePicture(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_picture_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_picture_idParameter;
            if (p_picture_id.HasValue)
            {
                p_picture_idParameter = new ObjectParameter("p_picture_id", p_picture_id);
            }
            else
            {
                p_picture_idParameter = new ObjectParameter("p_picture_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Members_UpdateMemberProfilePicture", p_user_idParameter, p_picture_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        /// <param name="p_LastActivityDate">No Metadata Documentation available.</param>
        /// <param name="p_LastActivityIp">No Metadata Documentation available.</param>
        public int sp_Members_UpdateMemberActivityData(Nullable<global::System.Int32> p_member_id, Nullable<global::System.DateTime> p_LastActivityDate, global::System.String p_LastActivityIp)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_LastActivityDateParameter;
            if (p_LastActivityDate.HasValue)
            {
                p_LastActivityDateParameter = new ObjectParameter("p_LastActivityDate", p_LastActivityDate);
            }
            else
            {
                p_LastActivityDateParameter = new ObjectParameter("p_LastActivityDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter p_LastActivityIpParameter;
            if (p_LastActivityIp != null)
            {
                p_LastActivityIpParameter = new ObjectParameter("p_LastActivityIp", p_LastActivityIp);
            }
            else
            {
                p_LastActivityIpParameter = new ObjectParameter("p_LastActivityIp", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_Members_UpdateMemberActivityData", p_member_idParameter, p_LastActivityDateParameter, p_LastActivityIpParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_User_ID">No Metadata Documentation available.</param>
        /// <param name="p_Member_ID">No Metadata Documentation available.</param>
        public int sp_Followers_Delete_MemberIFollow(Nullable<global::System.Int32> p_User_ID, Nullable<global::System.Int32> p_Member_ID)
        {
            ObjectParameter p_User_IDParameter;
            if (p_User_ID.HasValue)
            {
                p_User_IDParameter = new ObjectParameter("p_User_ID", p_User_ID);
            }
            else
            {
                p_User_IDParameter = new ObjectParameter("p_User_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Member_IDParameter;
            if (p_Member_ID.HasValue)
            {
                p_Member_IDParameter = new ObjectParameter("p_Member_ID", p_Member_ID);
            }
            else
            {
                p_Member_IDParameter = new ObjectParameter("p_Member_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Followers_Delete_MemberIFollow", p_User_IDParameter, p_Member_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_User_ID">No Metadata Documentation available.</param>
        /// <param name="p_Member_ID">No Metadata Documentation available.</param>
        public int sp_Followers_Delete_MyFollower(Nullable<global::System.Int32> p_User_ID, Nullable<global::System.Int32> p_Member_ID)
        {
            ObjectParameter p_User_IDParameter;
            if (p_User_ID.HasValue)
            {
                p_User_IDParameter = new ObjectParameter("p_User_ID", p_User_ID);
            }
            else
            {
                p_User_IDParameter = new ObjectParameter("p_User_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Member_IDParameter;
            if (p_Member_ID.HasValue)
            {
                p_Member_IDParameter = new ObjectParameter("p_Member_ID", p_Member_ID);
            }
            else
            {
                p_Member_IDParameter = new ObjectParameter("p_Member_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Followers_Delete_MyFollower", p_User_IDParameter, p_Member_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<PlaylistData_Song> sp_Playlist_GetSongsForPlayList(Nullable<global::System.Int32> p_playlist_id, Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PlaylistData_Song>("sp_Playlist_GetSongsForPlayList", p_playlist_idParameter, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_song_id">No Metadata Documentation available.</param>
        /// <param name="p_sortid">No Metadata Documentation available.</param>
        public int sp_Playlist_EditPlaylistSongOrder(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_song_id, Nullable<global::System.Int32> p_sortid)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_idParameter;
            if (p_song_id.HasValue)
            {
                p_song_idParameter = new ObjectParameter("p_song_id", p_song_id);
            }
            else
            {
                p_song_idParameter = new ObjectParameter("p_song_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_sortidParameter;
            if (p_sortid.HasValue)
            {
                p_sortidParameter = new ObjectParameter("p_sortid", p_sortid);
            }
            else
            {
                p_sortidParameter = new ObjectParameter("p_sortid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Playlist_EditPlaylistSongOrder", p_user_idParameter, p_song_idParameter, p_sortidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<PlaylistData_Song> sp_Playlist_GetSongsForPlayList_Random(Nullable<global::System.Int32> p_playlist_id, Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PlaylistData_Song>("sp_Playlist_GetSongsForPlayList_Random", p_playlist_idParameter, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_song_id">No Metadata Documentation available.</param>
        public int sp_Playlist_DeleteSong(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_song_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_idParameter;
            if (p_song_id.HasValue)
            {
                p_song_idParameter = new ObjectParameter("p_song_id", p_song_id);
            }
            else
            {
                p_song_idParameter = new ObjectParameter("p_song_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Playlist_DeleteSong", p_user_idParameter, p_song_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public int sp_Playlist_DeleteSongs(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Playlist_DeleteSongs", p_user_idParameter, p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_songid">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_GetMembersWithSong(Nullable<global::System.Int32> p_songid)
        {
            ObjectParameter p_songidParameter;
            if (p_songid.HasValue)
            {
                p_songidParameter = new ObjectParameter("p_songid", p_songid);
            }
            else
            {
                p_songidParameter = new ObjectParameter("p_songid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_GetMembersWithSong", p_songidParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_songid">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_GetMembersWithSong(Nullable<global::System.Int32> p_songid, MergeOption mergeOption)
        {
            ObjectParameter p_songidParameter;
            if (p_songid.HasValue)
            {
                p_songidParameter = new ObjectParameter("p_songid", p_songid);
            }
            else
            {
                p_songidParameter = new ObjectParameter("p_songid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_GetMembersWithSong", mergeOption, p_songidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<MusicGenre> sp_MusicGenre_GetMusicGenresList()
        {
            return base.ExecuteFunction<MusicGenre>("sp_MusicGenre_GetMusicGenresList");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<MusicGenre> sp_MusicGenre_GetMusicGenresList(MergeOption mergeOption)
        {
            return base.ExecuteFunction<MusicGenre>("sp_MusicGenre_GetMusicGenresList", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        public ObjectResult<MemberMusicGenre> sp_memberMusicGenre_GetUserMusicGenres(Nullable<global::System.Int32> p_member_id)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MemberMusicGenre>("sp_memberMusicGenre_GetUserMusicGenres", p_member_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        public ObjectResult<MemberMusicGenre> sp_memberMusicGenre_GetUserMusicGenres(Nullable<global::System.Int32> p_member_id, MergeOption mergeOption)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MemberMusicGenre>("sp_memberMusicGenre_GetUserMusicGenres", mergeOption, p_member_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        public int sp_memberMusicGenre_DeleteAllUserMusicGenres(Nullable<global::System.Int32> p_member_id)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_memberMusicGenre_DeleteAllUserMusicGenres", p_member_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_music_genre_id">No Metadata Documentation available.</param>
        public ObjectResult<MusicGenre> sp_MusicGenre_GetMusicGenre_byID(Nullable<global::System.Int32> p_music_genre_id)
        {
            ObjectParameter p_music_genre_idParameter;
            if (p_music_genre_id.HasValue)
            {
                p_music_genre_idParameter = new ObjectParameter("p_music_genre_id", p_music_genre_id);
            }
            else
            {
                p_music_genre_idParameter = new ObjectParameter("p_music_genre_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MusicGenre>("sp_MusicGenre_GetMusicGenre_byID", p_music_genre_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_music_genre_id">No Metadata Documentation available.</param>
        public ObjectResult<MusicGenre> sp_MusicGenre_GetMusicGenre_byID(Nullable<global::System.Int32> p_music_genre_id, MergeOption mergeOption)
        {
            ObjectParameter p_music_genre_idParameter;
            if (p_music_genre_id.HasValue)
            {
                p_music_genre_idParameter = new ObjectParameter("p_music_genre_id", p_music_genre_id);
            }
            else
            {
                p_music_genre_idParameter = new ObjectParameter("p_music_genre_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MusicGenre>("sp_MusicGenre_GetMusicGenre_byID", mergeOption, p_music_genre_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_ID">No Metadata Documentation available.</param>
        public int sp_Playlist_AddPlaylistView(Nullable<global::System.Int32> p_playlist_ID)
        {
            ObjectParameter p_playlist_IDParameter;
            if (p_playlist_ID.HasValue)
            {
                p_playlist_IDParameter = new ObjectParameter("p_playlist_ID", p_playlist_ID);
            }
            else
            {
                p_playlist_IDParameter = new ObjectParameter("p_playlist_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Playlist_AddPlaylistView", p_playlist_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Playlist> sp_Playlist_GetMostViewedPlaylists()
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetMostViewedPlaylists");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Playlist> sp_Playlist_GetMostViewedPlaylists(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetMostViewedPlaylists", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<VisualSearch> sp_VisualSearch_getVisualSearchArtists()
        {
            return base.ExecuteFunction<VisualSearch>("sp_VisualSearch_getVisualSearchArtists");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<VisualSearch> sp_VisualSearch_getVisualSearchArtists(MergeOption mergeOption)
        {
            return base.ExecuteFunction<VisualSearch>("sp_VisualSearch_getVisualSearchArtists", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<RadioStation> sp_RadioStation_GetUserRadioStations(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<RadioStation>("sp_RadioStation_GetUserRadioStations", p_user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<RadioStation> sp_RadioStation_GetUserRadioStations(Nullable<global::System.Int32> p_user_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<RadioStation>("sp_RadioStation_GetUserRadioStations", mergeOption, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_station_id">No Metadata Documentation available.</param>
        public int sp_RadioStation_DeleteUserRadioStation(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_station_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_station_idParameter;
            if (p_station_id.HasValue)
            {
                p_station_idParameter = new ObjectParameter("p_station_id", p_station_id);
            }
            else
            {
                p_station_idParameter = new ObjectParameter("p_station_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_RadioStation_DeleteUserRadioStation", p_user_idParameter, p_station_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_numOfVideos">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClips_getRandomVideos(Nullable<global::System.Int32> p_numOfVideos)
        {
            ObjectParameter p_numOfVideosParameter;
            if (p_numOfVideos.HasValue)
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", p_numOfVideos);
            }
            else
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClips_getRandomVideos", p_numOfVideosParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_numOfVideos">No Metadata Documentation available.</param>
        public ObjectResult<videoClip> sp_videoClips_getRandomVideos(Nullable<global::System.Int32> p_numOfVideos, MergeOption mergeOption)
        {
            ObjectParameter p_numOfVideosParameter;
            if (p_numOfVideos.HasValue)
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", p_numOfVideos);
            }
            else
            {
                p_numOfVideosParameter = new ObjectParameter("p_numOfVideos", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<videoClip>("sp_videoClips_getRandomVideos", mergeOption, p_numOfVideosParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_song_id">No Metadata Documentation available.</param>
        public ObjectResult<songComment> sp_Songs_Get_SongComments(Nullable<global::System.Int32> p_song_id)
        {
            ObjectParameter p_song_idParameter;
            if (p_song_id.HasValue)
            {
                p_song_idParameter = new ObjectParameter("p_song_id", p_song_id);
            }
            else
            {
                p_song_idParameter = new ObjectParameter("p_song_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<songComment>("sp_Songs_Get_SongComments", p_song_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_song_id">No Metadata Documentation available.</param>
        public ObjectResult<songComment> sp_Songs_Get_SongComments(Nullable<global::System.Int32> p_song_id, MergeOption mergeOption)
        {
            ObjectParameter p_song_idParameter;
            if (p_song_id.HasValue)
            {
                p_song_idParameter = new ObjectParameter("p_song_id", p_song_id);
            }
            else
            {
                p_song_idParameter = new ObjectParameter("p_song_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<songComment>("sp_Songs_Get_SongComments", mergeOption, p_song_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_song_guid">No Metadata Documentation available.</param>
        public ObjectResult<Song> sp_Song_GetSongByGUID(global::System.String p_song_guid)
        {
            ObjectParameter p_song_guidParameter;
            if (p_song_guid != null)
            {
                p_song_guidParameter = new ObjectParameter("p_song_guid", p_song_guid);
            }
            else
            {
                p_song_guidParameter = new ObjectParameter("p_song_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Song>("sp_Song_GetSongByGUID", p_song_guidParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_song_guid">No Metadata Documentation available.</param>
        public ObjectResult<Song> sp_Song_GetSongByGUID(global::System.String p_song_guid, MergeOption mergeOption)
        {
            ObjectParameter p_song_guidParameter;
            if (p_song_guid != null)
            {
                p_song_guidParameter = new ObjectParameter("p_song_guid", p_song_guid);
            }
            else
            {
                p_song_guidParameter = new ObjectParameter("p_song_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Song>("sp_Song_GetSongByGUID", mergeOption, p_song_guidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public ObjectResult<PlaylistData_Song> sp_Playlist_GetPlayListDataByPlaylistID(Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PlaylistData_Song>("sp_Playlist_GetPlayListDataByPlaylistID", p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public ObjectResult<PlaylistData_Song> sp_Playlist_GetPlayListDataByPlaylistID_Random(Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PlaylistData_Song>("sp_Playlist_GetPlayListDataByPlaylistID_Random", p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public int sp_Members_DeactivateMember(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Members_DeactivateMember", p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Members_DeactivateCheck_Result> sp_Members_DeactivateCheck(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Members_DeactivateCheck_Result>("sp_Members_DeactivateCheck", p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public int sp_Members_DeleteDeactivatedUser(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Members_DeleteDeactivatedUser", p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public int sp_Playlist_IncrementPlaylistSongOrder(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Playlist_IncrementPlaylistSongOrder", p_user_idParameter, p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_numOfPosts">No Metadata Documentation available.</param>
        public ObjectResult<newsCeleb> sp_newsCeleb_GetLatestCelebs(Nullable<global::System.Int32> p_numOfPosts)
        {
            ObjectParameter p_numOfPostsParameter;
            if (p_numOfPosts.HasValue)
            {
                p_numOfPostsParameter = new ObjectParameter("p_numOfPosts", p_numOfPosts);
            }
            else
            {
                p_numOfPostsParameter = new ObjectParameter("p_numOfPosts", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsCeleb>("sp_newsCeleb_GetLatestCelebs", p_numOfPostsParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_numOfPosts">No Metadata Documentation available.</param>
        public ObjectResult<newsCeleb> sp_newsCeleb_GetLatestCelebs(Nullable<global::System.Int32> p_numOfPosts, MergeOption mergeOption)
        {
            ObjectParameter p_numOfPostsParameter;
            if (p_numOfPosts.HasValue)
            {
                p_numOfPostsParameter = new ObjectParameter("p_numOfPosts", p_numOfPosts);
            }
            else
            {
                p_numOfPostsParameter = new ObjectParameter("p_numOfPosts", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsCeleb>("sp_newsCeleb_GetLatestCelebs", mergeOption, p_numOfPostsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_celeb_id">No Metadata Documentation available.</param>
        public ObjectResult<newsCeleb> sp_newsCelebs_GetCelebByID(Nullable<global::System.Int32> p_celeb_id)
        {
            ObjectParameter p_celeb_idParameter;
            if (p_celeb_id.HasValue)
            {
                p_celeb_idParameter = new ObjectParameter("p_celeb_id", p_celeb_id);
            }
            else
            {
                p_celeb_idParameter = new ObjectParameter("p_celeb_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsCeleb>("sp_newsCelebs_GetCelebByID", p_celeb_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_celeb_id">No Metadata Documentation available.</param>
        public ObjectResult<newsCeleb> sp_newsCelebs_GetCelebByID(Nullable<global::System.Int32> p_celeb_id, MergeOption mergeOption)
        {
            ObjectParameter p_celeb_idParameter;
            if (p_celeb_id.HasValue)
            {
                p_celeb_idParameter = new ObjectParameter("p_celeb_id", p_celeb_id);
            }
            else
            {
                p_celeb_idParameter = new ObjectParameter("p_celeb_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsCeleb>("sp_newsCelebs_GetCelebByID", mergeOption, p_celeb_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_celeb_id">No Metadata Documentation available.</param>
        public int sp_newsCelebs_DeleteSeleb(Nullable<global::System.Int32> p_celeb_id)
        {
            ObjectParameter p_celeb_idParameter;
            if (p_celeb_id.HasValue)
            {
                p_celeb_idParameter = new ObjectParameter("p_celeb_id", p_celeb_id);
            }
            else
            {
                p_celeb_idParameter = new ObjectParameter("p_celeb_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_newsCelebs_DeleteSeleb", p_celeb_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_genreid">No Metadata Documentation available.</param>
        /// <param name="p_numOfMembers">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_GetMembersWithGenre(Nullable<global::System.Int32> p_genreid, Nullable<global::System.Int32> p_numOfMembers)
        {
            ObjectParameter p_genreidParameter;
            if (p_genreid.HasValue)
            {
                p_genreidParameter = new ObjectParameter("p_genreid", p_genreid);
            }
            else
            {
                p_genreidParameter = new ObjectParameter("p_genreid", typeof(global::System.Int32));
            }
    
            ObjectParameter p_numOfMembersParameter;
            if (p_numOfMembers.HasValue)
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", p_numOfMembers);
            }
            else
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_GetMembersWithGenre", p_genreidParameter, p_numOfMembersParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_genreid">No Metadata Documentation available.</param>
        /// <param name="p_numOfMembers">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_GetMembersWithGenre(Nullable<global::System.Int32> p_genreid, Nullable<global::System.Int32> p_numOfMembers, MergeOption mergeOption)
        {
            ObjectParameter p_genreidParameter;
            if (p_genreid.HasValue)
            {
                p_genreidParameter = new ObjectParameter("p_genreid", p_genreid);
            }
            else
            {
                p_genreidParameter = new ObjectParameter("p_genreid", typeof(global::System.Int32));
            }
    
            ObjectParameter p_numOfMembersParameter;
            if (p_numOfMembers.HasValue)
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", p_numOfMembers);
            }
            else
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_GetMembersWithGenre", mergeOption, p_genreidParameter, p_numOfMembersParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<PlaylistLike> sp_playlistLike_CheckPlaylistLike(Nullable<global::System.Int32> p_playlist_id, Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PlaylistLike>("sp_playlistLike_CheckPlaylistLike", p_playlist_idParameter, p_user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<PlaylistLike> sp_playlistLike_CheckPlaylistLike(Nullable<global::System.Int32> p_playlist_id, Nullable<global::System.Int32> p_user_id, MergeOption mergeOption)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PlaylistLike>("sp_playlistLike_CheckPlaylistLike", mergeOption, p_playlist_idParameter, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_ID">No Metadata Documentation available.</param>
        public int sp_Playlist_AddPlaylistLike(Nullable<global::System.Int32> p_playlist_ID)
        {
            ObjectParameter p_playlist_IDParameter;
            if (p_playlist_ID.HasValue)
            {
                p_playlist_IDParameter = new ObjectParameter("p_playlist_ID", p_playlist_ID);
            }
            else
            {
                p_playlist_IDParameter = new ObjectParameter("p_playlist_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Playlist_AddPlaylistLike", p_playlist_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public ObjectResult<Playlist> sp_Playlist_GetUserPlaylistById(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetUserPlaylistById", p_user_idParameter, p_playlist_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public ObjectResult<Playlist> sp_Playlist_GetUserPlaylistById(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_playlist_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetUserPlaylistById", mergeOption, p_user_idParameter, p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Genre_ID">No Metadata Documentation available.</param>
        /// <param name="p_GenreName">No Metadata Documentation available.</param>
        /// <param name="p_User_ID">No Metadata Documentation available.</param>
        /// <param name="p_Playlist_ID">No Metadata Documentation available.</param>
        public int sp_MusicGenre_SaveMusicGenre(Nullable<global::System.Int32> p_Genre_ID, global::System.String p_GenreName, Nullable<global::System.Int32> p_User_ID, Nullable<global::System.Int32> p_Playlist_ID)
        {
            ObjectParameter p_Genre_IDParameter;
            if (p_Genre_ID.HasValue)
            {
                p_Genre_IDParameter = new ObjectParameter("p_Genre_ID", p_Genre_ID);
            }
            else
            {
                p_Genre_IDParameter = new ObjectParameter("p_Genre_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_GenreNameParameter;
            if (p_GenreName != null)
            {
                p_GenreNameParameter = new ObjectParameter("p_GenreName", p_GenreName);
            }
            else
            {
                p_GenreNameParameter = new ObjectParameter("p_GenreName", typeof(global::System.String));
            }
    
            ObjectParameter p_User_IDParameter;
            if (p_User_ID.HasValue)
            {
                p_User_IDParameter = new ObjectParameter("p_User_ID", p_User_ID);
            }
            else
            {
                p_User_IDParameter = new ObjectParameter("p_User_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Playlist_IDParameter;
            if (p_Playlist_ID.HasValue)
            {
                p_Playlist_IDParameter = new ObjectParameter("p_Playlist_ID", p_Playlist_ID);
            }
            else
            {
                p_Playlist_IDParameter = new ObjectParameter("p_Playlist_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_MusicGenre_SaveMusicGenre", p_Genre_IDParameter, p_GenreNameParameter, p_User_IDParameter, p_Playlist_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Chart> sp_Charts_GetAllCharts()
        {
            return base.ExecuteFunction<Chart>("sp_Charts_GetAllCharts");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Chart> sp_Charts_GetAllCharts(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Chart>("sp_Charts_GetAllCharts", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Chart_ID">No Metadata Documentation available.</param>
        /// <param name="p_Chart_Category_ID">No Metadata Documentation available.</param>
        /// <param name="p_Chart_Name">No Metadata Documentation available.</param>
        /// <param name="p_Chart_Desc">No Metadata Documentation available.</param>
        /// <param name="p_Chart_Date">No Metadata Documentation available.</param>
        /// <param name="p_Chart_User_ID">No Metadata Documentation available.</param>
        /// <param name="p_Chart_Playlist_ID">No Metadata Documentation available.</param>
        public int sp_Charts_SaveChart(Nullable<global::System.Int32> p_Chart_ID, Nullable<global::System.Int32> p_Chart_Category_ID, global::System.String p_Chart_Name, global::System.String p_Chart_Desc, global::System.String p_Chart_Date, Nullable<global::System.Int32> p_Chart_User_ID, Nullable<global::System.Int32> p_Chart_Playlist_ID)
        {
            ObjectParameter p_Chart_IDParameter;
            if (p_Chart_ID.HasValue)
            {
                p_Chart_IDParameter = new ObjectParameter("p_Chart_ID", p_Chart_ID);
            }
            else
            {
                p_Chart_IDParameter = new ObjectParameter("p_Chart_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Chart_Category_IDParameter;
            if (p_Chart_Category_ID.HasValue)
            {
                p_Chart_Category_IDParameter = new ObjectParameter("p_Chart_Category_ID", p_Chart_Category_ID);
            }
            else
            {
                p_Chart_Category_IDParameter = new ObjectParameter("p_Chart_Category_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Chart_NameParameter;
            if (p_Chart_Name != null)
            {
                p_Chart_NameParameter = new ObjectParameter("p_Chart_Name", p_Chart_Name);
            }
            else
            {
                p_Chart_NameParameter = new ObjectParameter("p_Chart_Name", typeof(global::System.String));
            }
    
            ObjectParameter p_Chart_DescParameter;
            if (p_Chart_Desc != null)
            {
                p_Chart_DescParameter = new ObjectParameter("p_Chart_Desc", p_Chart_Desc);
            }
            else
            {
                p_Chart_DescParameter = new ObjectParameter("p_Chart_Desc", typeof(global::System.String));
            }
    
            ObjectParameter p_Chart_DateParameter;
            if (p_Chart_Date != null)
            {
                p_Chart_DateParameter = new ObjectParameter("p_Chart_Date", p_Chart_Date);
            }
            else
            {
                p_Chart_DateParameter = new ObjectParameter("p_Chart_Date", typeof(global::System.String));
            }
    
            ObjectParameter p_Chart_User_IDParameter;
            if (p_Chart_User_ID.HasValue)
            {
                p_Chart_User_IDParameter = new ObjectParameter("p_Chart_User_ID", p_Chart_User_ID);
            }
            else
            {
                p_Chart_User_IDParameter = new ObjectParameter("p_Chart_User_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Chart_Playlist_IDParameter;
            if (p_Chart_Playlist_ID.HasValue)
            {
                p_Chart_Playlist_IDParameter = new ObjectParameter("p_Chart_Playlist_ID", p_Chart_Playlist_ID);
            }
            else
            {
                p_Chart_Playlist_IDParameter = new ObjectParameter("p_Chart_Playlist_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Charts_SaveChart", p_Chart_IDParameter, p_Chart_Category_IDParameter, p_Chart_NameParameter, p_Chart_DescParameter, p_Chart_DateParameter, p_Chart_User_IDParameter, p_Chart_Playlist_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_genre_id">No Metadata Documentation available.</param>
        public int sp_MusicGenre_DeleteGenre(Nullable<global::System.Int32> p_genre_id)
        {
            ObjectParameter p_genre_idParameter;
            if (p_genre_id.HasValue)
            {
                p_genre_idParameter = new ObjectParameter("p_genre_id", p_genre_id);
            }
            else
            {
                p_genre_idParameter = new ObjectParameter("p_genre_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_MusicGenre_DeleteGenre", p_genre_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_chart_id">No Metadata Documentation available.</param>
        public int sp_Charts_DeleteChart(Nullable<global::System.Int32> p_chart_id)
        {
            ObjectParameter p_chart_idParameter;
            if (p_chart_id.HasValue)
            {
                p_chart_idParameter = new ObjectParameter("p_chart_id", p_chart_id);
            }
            else
            {
                p_chart_idParameter = new ObjectParameter("p_chart_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Charts_DeleteChart", p_chart_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Festival_ID">No Metadata Documentation available.</param>
        public int sp_Festivals_DeleteFestival(Nullable<global::System.Int32> p_Festival_ID)
        {
            ObjectParameter p_Festival_IDParameter;
            if (p_Festival_ID.HasValue)
            {
                p_Festival_IDParameter = new ObjectParameter("p_Festival_ID", p_Festival_ID);
            }
            else
            {
                p_Festival_IDParameter = new ObjectParameter("p_Festival_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Festivals_DeleteFestival", p_Festival_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Festival> sp_Festivals_GetAllFestivals()
        {
            return base.ExecuteFunction<Festival>("sp_Festivals_GetAllFestivals");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Festival> sp_Festivals_GetAllFestivals(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Festival>("sp_Festivals_GetAllFestivals", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Festival_ID">No Metadata Documentation available.</param>
        /// <param name="p_Festival_Category_ID">No Metadata Documentation available.</param>
        /// <param name="p_Festival_Name">No Metadata Documentation available.</param>
        /// <param name="p_Festival_Desc">No Metadata Documentation available.</param>
        /// <param name="p_Festival_Date">No Metadata Documentation available.</param>
        /// <param name="p_Festival_User_ID">No Metadata Documentation available.</param>
        /// <param name="p_Festival_Playlist_ID">No Metadata Documentation available.</param>
        public int sp_Festivals_SaveFestival(Nullable<global::System.Int32> p_Festival_ID, Nullable<global::System.Int32> p_Festival_Category_ID, global::System.String p_Festival_Name, global::System.String p_Festival_Desc, global::System.String p_Festival_Date, Nullable<global::System.Int32> p_Festival_User_ID, Nullable<global::System.Int32> p_Festival_Playlist_ID)
        {
            ObjectParameter p_Festival_IDParameter;
            if (p_Festival_ID.HasValue)
            {
                p_Festival_IDParameter = new ObjectParameter("p_Festival_ID", p_Festival_ID);
            }
            else
            {
                p_Festival_IDParameter = new ObjectParameter("p_Festival_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Festival_Category_IDParameter;
            if (p_Festival_Category_ID.HasValue)
            {
                p_Festival_Category_IDParameter = new ObjectParameter("p_Festival_Category_ID", p_Festival_Category_ID);
            }
            else
            {
                p_Festival_Category_IDParameter = new ObjectParameter("p_Festival_Category_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Festival_NameParameter;
            if (p_Festival_Name != null)
            {
                p_Festival_NameParameter = new ObjectParameter("p_Festival_Name", p_Festival_Name);
            }
            else
            {
                p_Festival_NameParameter = new ObjectParameter("p_Festival_Name", typeof(global::System.String));
            }
    
            ObjectParameter p_Festival_DescParameter;
            if (p_Festival_Desc != null)
            {
                p_Festival_DescParameter = new ObjectParameter("p_Festival_Desc", p_Festival_Desc);
            }
            else
            {
                p_Festival_DescParameter = new ObjectParameter("p_Festival_Desc", typeof(global::System.String));
            }
    
            ObjectParameter p_Festival_DateParameter;
            if (p_Festival_Date != null)
            {
                p_Festival_DateParameter = new ObjectParameter("p_Festival_Date", p_Festival_Date);
            }
            else
            {
                p_Festival_DateParameter = new ObjectParameter("p_Festival_Date", typeof(global::System.String));
            }
    
            ObjectParameter p_Festival_User_IDParameter;
            if (p_Festival_User_ID.HasValue)
            {
                p_Festival_User_IDParameter = new ObjectParameter("p_Festival_User_ID", p_Festival_User_ID);
            }
            else
            {
                p_Festival_User_IDParameter = new ObjectParameter("p_Festival_User_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Festival_Playlist_IDParameter;
            if (p_Festival_Playlist_ID.HasValue)
            {
                p_Festival_Playlist_IDParameter = new ObjectParameter("p_Festival_Playlist_ID", p_Festival_Playlist_ID);
            }
            else
            {
                p_Festival_Playlist_IDParameter = new ObjectParameter("p_Festival_Playlist_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Festivals_SaveFestival", p_Festival_IDParameter, p_Festival_Category_IDParameter, p_Festival_NameParameter, p_Festival_DescParameter, p_Festival_DateParameter, p_Festival_User_IDParameter, p_Festival_Playlist_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Playlist> sp_Playlist_GetPlaylistsILike(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetPlaylistsILike", p_user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Playlist> sp_Playlist_GetPlaylistsILike(Nullable<global::System.Int32> p_user_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetPlaylistsILike", mergeOption, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_chart_guid">No Metadata Documentation available.</param>
        public ObjectResult<Chart> sp_Charts_GetChartByGuid(global::System.String p_chart_guid)
        {
            ObjectParameter p_chart_guidParameter;
            if (p_chart_guid != null)
            {
                p_chart_guidParameter = new ObjectParameter("p_chart_guid", p_chart_guid);
            }
            else
            {
                p_chart_guidParameter = new ObjectParameter("p_chart_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Chart>("sp_Charts_GetChartByGuid", p_chart_guidParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_chart_guid">No Metadata Documentation available.</param>
        public ObjectResult<Chart> sp_Charts_GetChartByGuid(global::System.String p_chart_guid, MergeOption mergeOption)
        {
            ObjectParameter p_chart_guidParameter;
            if (p_chart_guid != null)
            {
                p_chart_guidParameter = new ObjectParameter("p_chart_guid", p_chart_guid);
            }
            else
            {
                p_chart_guidParameter = new ObjectParameter("p_chart_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Chart>("sp_Charts_GetChartByGuid", mergeOption, p_chart_guidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_festival_guid">No Metadata Documentation available.</param>
        public ObjectResult<Festival> sp_Festivals_GetFestivalByGuid(global::System.String p_festival_guid)
        {
            ObjectParameter p_festival_guidParameter;
            if (p_festival_guid != null)
            {
                p_festival_guidParameter = new ObjectParameter("p_festival_guid", p_festival_guid);
            }
            else
            {
                p_festival_guidParameter = new ObjectParameter("p_festival_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Festival>("sp_Festivals_GetFestivalByGuid", p_festival_guidParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_festival_guid">No Metadata Documentation available.</param>
        public ObjectResult<Festival> sp_Festivals_GetFestivalByGuid(global::System.String p_festival_guid, MergeOption mergeOption)
        {
            ObjectParameter p_festival_guidParameter;
            if (p_festival_guid != null)
            {
                p_festival_guidParameter = new ObjectParameter("p_festival_guid", p_festival_guid);
            }
            else
            {
                p_festival_guidParameter = new ObjectParameter("p_festival_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Festival>("sp_Festivals_GetFestivalByGuid", mergeOption, p_festival_guidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_videoClip_ID">No Metadata Documentation available.</param>
        /// <param name="p_Name">No Metadata Documentation available.</param>
        /// <param name="p_Description">No Metadata Documentation available.</param>
        /// <param name="p_Duration">No Metadata Documentation available.</param>
        /// <param name="p_Status">No Metadata Documentation available.</param>
        /// <param name="p_UploadedByName">No Metadata Documentation available.</param>
        public int sp_videoClips_EditVideo(Nullable<global::System.Int32> p_videoClip_ID, global::System.String p_Name, global::System.String p_Description, Nullable<global::System.Int32> p_Duration, Nullable<global::System.Int32> p_Status, global::System.String p_UploadedByName)
        {
            ObjectParameter p_videoClip_IDParameter;
            if (p_videoClip_ID.HasValue)
            {
                p_videoClip_IDParameter = new ObjectParameter("p_videoClip_ID", p_videoClip_ID);
            }
            else
            {
                p_videoClip_IDParameter = new ObjectParameter("p_videoClip_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_NameParameter;
            if (p_Name != null)
            {
                p_NameParameter = new ObjectParameter("p_Name", p_Name);
            }
            else
            {
                p_NameParameter = new ObjectParameter("p_Name", typeof(global::System.String));
            }
    
            ObjectParameter p_DescriptionParameter;
            if (p_Description != null)
            {
                p_DescriptionParameter = new ObjectParameter("p_Description", p_Description);
            }
            else
            {
                p_DescriptionParameter = new ObjectParameter("p_Description", typeof(global::System.String));
            }
    
            ObjectParameter p_DurationParameter;
            if (p_Duration.HasValue)
            {
                p_DurationParameter = new ObjectParameter("p_Duration", p_Duration);
            }
            else
            {
                p_DurationParameter = new ObjectParameter("p_Duration", typeof(global::System.Int32));
            }
    
            ObjectParameter p_StatusParameter;
            if (p_Status.HasValue)
            {
                p_StatusParameter = new ObjectParameter("p_Status", p_Status);
            }
            else
            {
                p_StatusParameter = new ObjectParameter("p_Status", typeof(global::System.Int32));
            }
    
            ObjectParameter p_UploadedByNameParameter;
            if (p_UploadedByName != null)
            {
                p_UploadedByNameParameter = new ObjectParameter("p_UploadedByName", p_UploadedByName);
            }
            else
            {
                p_UploadedByNameParameter = new ObjectParameter("p_UploadedByName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_videoClips_EditVideo", p_videoClip_IDParameter, p_NameParameter, p_DescriptionParameter, p_DurationParameter, p_StatusParameter, p_UploadedByNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Manual> sp_Manual_GetActiveManuals()
        {
            return base.ExecuteFunction<Manual>("sp_Manual_GetActiveManuals");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Manual> sp_Manual_GetActiveManuals(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Manual>("sp_Manual_GetActiveManuals", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Manual> sp_Manual_GetAllManuals()
        {
            return base.ExecuteFunction<Manual>("sp_Manual_GetAllManuals");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Manual> sp_Manual_GetAllManuals(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Manual>("sp_Manual_GetAllManuals", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Manual_Guid">No Metadata Documentation available.</param>
        public ObjectResult<Manual> sp_Manual_GetManualByGuid(global::System.String p_Manual_Guid)
        {
            ObjectParameter p_Manual_GuidParameter;
            if (p_Manual_Guid != null)
            {
                p_Manual_GuidParameter = new ObjectParameter("p_Manual_Guid", p_Manual_Guid);
            }
            else
            {
                p_Manual_GuidParameter = new ObjectParameter("p_Manual_Guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Manual>("sp_Manual_GetManualByGuid", p_Manual_GuidParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_Manual_Guid">No Metadata Documentation available.</param>
        public ObjectResult<Manual> sp_Manual_GetManualByGuid(global::System.String p_Manual_Guid, MergeOption mergeOption)
        {
            ObjectParameter p_Manual_GuidParameter;
            if (p_Manual_Guid != null)
            {
                p_Manual_GuidParameter = new ObjectParameter("p_Manual_Guid", p_Manual_Guid);
            }
            else
            {
                p_Manual_GuidParameter = new ObjectParameter("p_Manual_Guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Manual>("sp_Manual_GetManualByGuid", mergeOption, p_Manual_GuidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Manual_ID">No Metadata Documentation available.</param>
        public ObjectResult<Manual_Slide> sp_Manual_GetManualSlides(global::System.String p_Manual_ID)
        {
            ObjectParameter p_Manual_IDParameter;
            if (p_Manual_ID != null)
            {
                p_Manual_IDParameter = new ObjectParameter("p_Manual_ID", p_Manual_ID);
            }
            else
            {
                p_Manual_IDParameter = new ObjectParameter("p_Manual_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Manual_Slide>("sp_Manual_GetManualSlides", p_Manual_IDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_Manual_ID">No Metadata Documentation available.</param>
        public ObjectResult<Manual_Slide> sp_Manual_GetManualSlides(global::System.String p_Manual_ID, MergeOption mergeOption)
        {
            ObjectParameter p_Manual_IDParameter;
            if (p_Manual_ID != null)
            {
                p_Manual_IDParameter = new ObjectParameter("p_Manual_ID", p_Manual_ID);
            }
            else
            {
                p_Manual_IDParameter = new ObjectParameter("p_Manual_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Manual_Slide>("sp_Manual_GetManualSlides", mergeOption, p_Manual_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Manual_ID">No Metadata Documentation available.</param>
        public ObjectResult<Manual> sp_Manual_GetManualByID(Nullable<global::System.Int32> p_Manual_ID)
        {
            ObjectParameter p_Manual_IDParameter;
            if (p_Manual_ID.HasValue)
            {
                p_Manual_IDParameter = new ObjectParameter("p_Manual_ID", p_Manual_ID);
            }
            else
            {
                p_Manual_IDParameter = new ObjectParameter("p_Manual_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Manual>("sp_Manual_GetManualByID", p_Manual_IDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_Manual_ID">No Metadata Documentation available.</param>
        public ObjectResult<Manual> sp_Manual_GetManualByID(Nullable<global::System.Int32> p_Manual_ID, MergeOption mergeOption)
        {
            ObjectParameter p_Manual_IDParameter;
            if (p_Manual_ID.HasValue)
            {
                p_Manual_IDParameter = new ObjectParameter("p_Manual_ID", p_Manual_ID);
            }
            else
            {
                p_Manual_IDParameter = new ObjectParameter("p_Manual_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Manual>("sp_Manual_GetManualByID", mergeOption, p_Manual_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Manual_Slide_ID">No Metadata Documentation available.</param>
        public int sp_Manual_DeleteSlide(Nullable<global::System.Int32> p_Manual_Slide_ID)
        {
            ObjectParameter p_Manual_Slide_IDParameter;
            if (p_Manual_Slide_ID.HasValue)
            {
                p_Manual_Slide_IDParameter = new ObjectParameter("p_Manual_Slide_ID", p_Manual_Slide_ID);
            }
            else
            {
                p_Manual_Slide_IDParameter = new ObjectParameter("p_Manual_Slide_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Manual_DeleteSlide", p_Manual_Slide_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Manual_ID">No Metadata Documentation available.</param>
        /// <param name="p_Manual_Active">No Metadata Documentation available.</param>
        public int sp_Manual_UpdateManual(Nullable<global::System.Int32> p_Manual_ID, Nullable<global::System.Int32> p_Manual_Active)
        {
            ObjectParameter p_Manual_IDParameter;
            if (p_Manual_ID.HasValue)
            {
                p_Manual_IDParameter = new ObjectParameter("p_Manual_ID", p_Manual_ID);
            }
            else
            {
                p_Manual_IDParameter = new ObjectParameter("p_Manual_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Manual_ActiveParameter;
            if (p_Manual_Active.HasValue)
            {
                p_Manual_ActiveParameter = new ObjectParameter("p_Manual_Active", p_Manual_Active);
            }
            else
            {
                p_Manual_ActiveParameter = new ObjectParameter("p_Manual_Active", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Manual_UpdateManual", p_Manual_IDParameter, p_Manual_ActiveParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Manual_Slide_ID">No Metadata Documentation available.</param>
        /// <param name="p_Manual_Slide_Header">No Metadata Documentation available.</param>
        /// <param name="p_Manual_Slide_SortOrder">No Metadata Documentation available.</param>
        /// <param name="p_Manual_Slide_Active">No Metadata Documentation available.</param>
        public int sp_Manual_UpdateSlide(Nullable<global::System.Int32> p_Manual_Slide_ID, global::System.String p_Manual_Slide_Header, Nullable<global::System.Int32> p_Manual_Slide_SortOrder, Nullable<global::System.Int32> p_Manual_Slide_Active)
        {
            ObjectParameter p_Manual_Slide_IDParameter;
            if (p_Manual_Slide_ID.HasValue)
            {
                p_Manual_Slide_IDParameter = new ObjectParameter("p_Manual_Slide_ID", p_Manual_Slide_ID);
            }
            else
            {
                p_Manual_Slide_IDParameter = new ObjectParameter("p_Manual_Slide_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Manual_Slide_HeaderParameter;
            if (p_Manual_Slide_Header != null)
            {
                p_Manual_Slide_HeaderParameter = new ObjectParameter("p_Manual_Slide_Header", p_Manual_Slide_Header);
            }
            else
            {
                p_Manual_Slide_HeaderParameter = new ObjectParameter("p_Manual_Slide_Header", typeof(global::System.String));
            }
    
            ObjectParameter p_Manual_Slide_SortOrderParameter;
            if (p_Manual_Slide_SortOrder.HasValue)
            {
                p_Manual_Slide_SortOrderParameter = new ObjectParameter("p_Manual_Slide_SortOrder", p_Manual_Slide_SortOrder);
            }
            else
            {
                p_Manual_Slide_SortOrderParameter = new ObjectParameter("p_Manual_Slide_SortOrder", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Manual_Slide_ActiveParameter;
            if (p_Manual_Slide_Active.HasValue)
            {
                p_Manual_Slide_ActiveParameter = new ObjectParameter("p_Manual_Slide_Active", p_Manual_Slide_Active);
            }
            else
            {
                p_Manual_Slide_ActiveParameter = new ObjectParameter("p_Manual_Slide_Active", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Manual_UpdateSlide", p_Manual_Slide_IDParameter, p_Manual_Slide_HeaderParameter, p_Manual_Slide_SortOrderParameter, p_Manual_Slide_ActiveParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<newsPost> sp_newsPost_GetAllNews()
        {
            return base.ExecuteFunction<newsPost>("sp_newsPost_GetAllNews");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<newsPost> sp_newsPost_GetAllNews(MergeOption mergeOption)
        {
            return base.ExecuteFunction<newsPost>("sp_newsPost_GetAllNews", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_homeSlideshow_ID">No Metadata Documentation available.</param>
        public int sp_homeSlideshow_DeleteHomeSlideshow(Nullable<global::System.Int32> p_homeSlideshow_ID)
        {
            ObjectParameter p_homeSlideshow_IDParameter;
            if (p_homeSlideshow_ID.HasValue)
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", p_homeSlideshow_ID);
            }
            else
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_homeSlideshow_DeleteHomeSlideshow", p_homeSlideshow_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<homeSlideshow> sp_homeSlideshow_getHomeSlideshow()
        {
            return base.ExecuteFunction<homeSlideshow>("sp_homeSlideshow_getHomeSlideshow");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<homeSlideshow> sp_homeSlideshow_getHomeSlideshow(MergeOption mergeOption)
        {
            return base.ExecuteFunction<homeSlideshow>("sp_homeSlideshow_getHomeSlideshow", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_homeSlideshow_ID">No Metadata Documentation available.</param>
        public ObjectResult<homeSlideshow> sp_homeSlideshow_homeSlideshowByID(Nullable<global::System.Int32> p_homeSlideshow_ID)
        {
            ObjectParameter p_homeSlideshow_IDParameter;
            if (p_homeSlideshow_ID.HasValue)
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", p_homeSlideshow_ID);
            }
            else
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<homeSlideshow>("sp_homeSlideshow_homeSlideshowByID", p_homeSlideshow_IDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_homeSlideshow_ID">No Metadata Documentation available.</param>
        public ObjectResult<homeSlideshow> sp_homeSlideshow_homeSlideshowByID(Nullable<global::System.Int32> p_homeSlideshow_ID, MergeOption mergeOption)
        {
            ObjectParameter p_homeSlideshow_IDParameter;
            if (p_homeSlideshow_ID.HasValue)
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", p_homeSlideshow_ID);
            }
            else
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<homeSlideshow>("sp_homeSlideshow_homeSlideshowByID", mergeOption, p_homeSlideshow_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_song_id1">No Metadata Documentation available.</param>
        /// <param name="p_song_id2">No Metadata Documentation available.</param>
        public ObjectResult<sp_Compatibility_CompCheck_Result> sp_Compatibility_CompCheck_2(Nullable<global::System.Int32> p_song_id1, Nullable<global::System.Int32> p_song_id2)
        {
            ObjectParameter p_song_id1Parameter;
            if (p_song_id1.HasValue)
            {
                p_song_id1Parameter = new ObjectParameter("p_song_id1", p_song_id1);
            }
            else
            {
                p_song_id1Parameter = new ObjectParameter("p_song_id1", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_id2Parameter;
            if (p_song_id2.HasValue)
            {
                p_song_id2Parameter = new ObjectParameter("p_song_id2", p_song_id2);
            }
            else
            {
                p_song_id2Parameter = new ObjectParameter("p_song_id2", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Compatibility_CompCheck_Result>("sp_Compatibility_CompCheck_2", p_song_id1Parameter, p_song_id2Parameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_song_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_Compatibility_CompCheck_Result> sp_Compatibility_CompCheck_1(Nullable<global::System.Int32> p_song_id)
        {
            ObjectParameter p_song_idParameter;
            if (p_song_id.HasValue)
            {
                p_song_idParameter = new ObjectParameter("p_song_id", p_song_id);
            }
            else
            {
                p_song_idParameter = new ObjectParameter("p_song_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Compatibility_CompCheck_Result>("sp_Compatibility_CompCheck_1", p_song_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_song_id1">No Metadata Documentation available.</param>
        /// <param name="p_song_id2">No Metadata Documentation available.</param>
        /// <param name="p_song_id3">No Metadata Documentation available.</param>
        public ObjectResult<sp_Compatibility_CompCheck_Result> sp_Compatibility_CompCheck_3(Nullable<global::System.Int32> p_song_id1, Nullable<global::System.Int32> p_song_id2, Nullable<global::System.Int32> p_song_id3)
        {
            ObjectParameter p_song_id1Parameter;
            if (p_song_id1.HasValue)
            {
                p_song_id1Parameter = new ObjectParameter("p_song_id1", p_song_id1);
            }
            else
            {
                p_song_id1Parameter = new ObjectParameter("p_song_id1", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_id2Parameter;
            if (p_song_id2.HasValue)
            {
                p_song_id2Parameter = new ObjectParameter("p_song_id2", p_song_id2);
            }
            else
            {
                p_song_id2Parameter = new ObjectParameter("p_song_id2", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_id3Parameter;
            if (p_song_id3.HasValue)
            {
                p_song_id3Parameter = new ObjectParameter("p_song_id3", p_song_id3);
            }
            else
            {
                p_song_id3Parameter = new ObjectParameter("p_song_id3", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Compatibility_CompCheck_Result>("sp_Compatibility_CompCheck_3", p_song_id1Parameter, p_song_id2Parameter, p_song_id3Parameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_song_id1">No Metadata Documentation available.</param>
        /// <param name="p_song_id2">No Metadata Documentation available.</param>
        /// <param name="p_song_id3">No Metadata Documentation available.</param>
        /// <param name="p_song_id4">No Metadata Documentation available.</param>
        public ObjectResult<sp_Compatibility_CompCheck_Result> sp_Compatibility_CompCheck_4(Nullable<global::System.Int32> p_song_id1, Nullable<global::System.Int32> p_song_id2, Nullable<global::System.Int32> p_song_id3, Nullable<global::System.Int32> p_song_id4)
        {
            ObjectParameter p_song_id1Parameter;
            if (p_song_id1.HasValue)
            {
                p_song_id1Parameter = new ObjectParameter("p_song_id1", p_song_id1);
            }
            else
            {
                p_song_id1Parameter = new ObjectParameter("p_song_id1", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_id2Parameter;
            if (p_song_id2.HasValue)
            {
                p_song_id2Parameter = new ObjectParameter("p_song_id2", p_song_id2);
            }
            else
            {
                p_song_id2Parameter = new ObjectParameter("p_song_id2", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_id3Parameter;
            if (p_song_id3.HasValue)
            {
                p_song_id3Parameter = new ObjectParameter("p_song_id3", p_song_id3);
            }
            else
            {
                p_song_id3Parameter = new ObjectParameter("p_song_id3", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_id4Parameter;
            if (p_song_id4.HasValue)
            {
                p_song_id4Parameter = new ObjectParameter("p_song_id4", p_song_id4);
            }
            else
            {
                p_song_id4Parameter = new ObjectParameter("p_song_id4", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Compatibility_CompCheck_Result>("sp_Compatibility_CompCheck_4", p_song_id1Parameter, p_song_id2Parameter, p_song_id3Parameter, p_song_id4Parameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_song_id1">No Metadata Documentation available.</param>
        /// <param name="p_song_id2">No Metadata Documentation available.</param>
        /// <param name="p_song_id3">No Metadata Documentation available.</param>
        /// <param name="p_song_id4">No Metadata Documentation available.</param>
        /// <param name="p_song_id5">No Metadata Documentation available.</param>
        public ObjectResult<sp_Compatibility_CompCheck_Result> sp_Compatibility_CompCheck_5(Nullable<global::System.Int32> p_song_id1, Nullable<global::System.Int32> p_song_id2, Nullable<global::System.Int32> p_song_id3, Nullable<global::System.Int32> p_song_id4, Nullable<global::System.Int32> p_song_id5)
        {
            ObjectParameter p_song_id1Parameter;
            if (p_song_id1.HasValue)
            {
                p_song_id1Parameter = new ObjectParameter("p_song_id1", p_song_id1);
            }
            else
            {
                p_song_id1Parameter = new ObjectParameter("p_song_id1", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_id2Parameter;
            if (p_song_id2.HasValue)
            {
                p_song_id2Parameter = new ObjectParameter("p_song_id2", p_song_id2);
            }
            else
            {
                p_song_id2Parameter = new ObjectParameter("p_song_id2", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_id3Parameter;
            if (p_song_id3.HasValue)
            {
                p_song_id3Parameter = new ObjectParameter("p_song_id3", p_song_id3);
            }
            else
            {
                p_song_id3Parameter = new ObjectParameter("p_song_id3", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_id4Parameter;
            if (p_song_id4.HasValue)
            {
                p_song_id4Parameter = new ObjectParameter("p_song_id4", p_song_id4);
            }
            else
            {
                p_song_id4Parameter = new ObjectParameter("p_song_id4", typeof(global::System.Int32));
            }
    
            ObjectParameter p_song_id5Parameter;
            if (p_song_id5.HasValue)
            {
                p_song_id5Parameter = new ObjectParameter("p_song_id5", p_song_id5);
            }
            else
            {
                p_song_id5Parameter = new ObjectParameter("p_song_id5", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Compatibility_CompCheck_Result>("sp_Compatibility_CompCheck_5", p_song_id1Parameter, p_song_id2Parameter, p_song_id3Parameter, p_song_id4Parameter, p_song_id5Parameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_id">No Metadata Documentation available.</param>
        /// <param name="p_name">No Metadata Documentation available.</param>
        /// <param name="p_email">No Metadata Documentation available.</param>
        /// <param name="p_adminLevel">No Metadata Documentation available.</param>
        public int sp_Members_UpdateMemberProfileDetails2(Nullable<global::System.Int32> p_id, global::System.String p_name, global::System.String p_email, Nullable<global::System.Int32> p_adminLevel)
        {
            ObjectParameter p_idParameter;
            if (p_id.HasValue)
            {
                p_idParameter = new ObjectParameter("p_id", p_id);
            }
            else
            {
                p_idParameter = new ObjectParameter("p_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_nameParameter;
            if (p_name != null)
            {
                p_nameParameter = new ObjectParameter("p_name", p_name);
            }
            else
            {
                p_nameParameter = new ObjectParameter("p_name", typeof(global::System.String));
            }
    
            ObjectParameter p_emailParameter;
            if (p_email != null)
            {
                p_emailParameter = new ObjectParameter("p_email", p_email);
            }
            else
            {
                p_emailParameter = new ObjectParameter("p_email", typeof(global::System.String));
            }
    
            ObjectParameter p_adminLevelParameter;
            if (p_adminLevel.HasValue)
            {
                p_adminLevelParameter = new ObjectParameter("p_adminLevel", p_adminLevel);
            }
            else
            {
                p_adminLevelParameter = new ObjectParameter("p_adminLevel", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Members_UpdateMemberProfileDetails2", p_idParameter, p_nameParameter, p_emailParameter, p_adminLevelParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        public ObjectResult<MemberPublicPage> sp_Members_GetMemberPublicPageByID(Nullable<global::System.Int32> p_member_id)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MemberPublicPage>("sp_Members_GetMemberPublicPageByID", p_member_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        public ObjectResult<MemberPublicPage> sp_Members_GetMemberPublicPageByID(Nullable<global::System.Int32> p_member_id, MergeOption mergeOption)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MemberPublicPage>("sp_Members_GetMemberPublicPageByID", mergeOption, p_member_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_PublicPage_ID">No Metadata Documentation available.</param>
        /// <param name="p_showHeader">No Metadata Documentation available.</param>
        /// <param name="p_showDescription">No Metadata Documentation available.</param>
        /// <param name="p_autoplay">No Metadata Documentation available.</param>
        /// <param name="p_showLikeButtton">No Metadata Documentation available.</param>
        /// <param name="p_showInfoButton">No Metadata Documentation available.</param>
        /// <param name="p_showPhotosButton">No Metadata Documentation available.</param>
        /// <param name="p_header">No Metadata Documentation available.</param>
        /// <param name="p_description">No Metadata Documentation available.</param>
        /// <param name="p_HaFBackgroundColor">No Metadata Documentation available.</param>
        /// <param name="p_BackgroundColor">No Metadata Documentation available.</param>
        /// <param name="p_LeftSectionColor">No Metadata Documentation available.</param>
        /// <param name="p_RightSectionColor">No Metadata Documentation available.</param>
        /// <param name="p_ButtonsBackgroundColor">No Metadata Documentation available.</param>
        /// <param name="p_SongBackgroundColor">No Metadata Documentation available.</param>
        /// <param name="p_TextColor">No Metadata Documentation available.</param>
        /// <param name="p_ButtonsColor">No Metadata Documentation available.</param>
        /// <param name="p_Playlist_ID">No Metadata Documentation available.</param>
        /// <param name="p_Playlist_Layout">No Metadata Documentation available.</param>
        public int sp_Members_EditMemberPublicPage(Nullable<global::System.Int32> p_PublicPage_ID, Nullable<global::System.Boolean> p_showHeader, Nullable<global::System.Boolean> p_showDescription, Nullable<global::System.Boolean> p_autoplay, Nullable<global::System.Boolean> p_showLikeButtton, Nullable<global::System.Boolean> p_showInfoButton, Nullable<global::System.Boolean> p_showPhotosButton, global::System.String p_header, global::System.String p_description, global::System.String p_HaFBackgroundColor, global::System.String p_BackgroundColor, global::System.String p_LeftSectionColor, global::System.String p_RightSectionColor, global::System.String p_ButtonsBackgroundColor, global::System.String p_SongBackgroundColor, global::System.String p_TextColor, global::System.String p_ButtonsColor, Nullable<global::System.Int32> p_Playlist_ID, Nullable<global::System.Int32> p_Playlist_Layout)
        {
            ObjectParameter p_PublicPage_IDParameter;
            if (p_PublicPage_ID.HasValue)
            {
                p_PublicPage_IDParameter = new ObjectParameter("p_PublicPage_ID", p_PublicPage_ID);
            }
            else
            {
                p_PublicPage_IDParameter = new ObjectParameter("p_PublicPage_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_showHeaderParameter;
            if (p_showHeader.HasValue)
            {
                p_showHeaderParameter = new ObjectParameter("p_showHeader", p_showHeader);
            }
            else
            {
                p_showHeaderParameter = new ObjectParameter("p_showHeader", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_showDescriptionParameter;
            if (p_showDescription.HasValue)
            {
                p_showDescriptionParameter = new ObjectParameter("p_showDescription", p_showDescription);
            }
            else
            {
                p_showDescriptionParameter = new ObjectParameter("p_showDescription", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_autoplayParameter;
            if (p_autoplay.HasValue)
            {
                p_autoplayParameter = new ObjectParameter("p_autoplay", p_autoplay);
            }
            else
            {
                p_autoplayParameter = new ObjectParameter("p_autoplay", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_showLikeButttonParameter;
            if (p_showLikeButtton.HasValue)
            {
                p_showLikeButttonParameter = new ObjectParameter("p_showLikeButtton", p_showLikeButtton);
            }
            else
            {
                p_showLikeButttonParameter = new ObjectParameter("p_showLikeButtton", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_showInfoButtonParameter;
            if (p_showInfoButton.HasValue)
            {
                p_showInfoButtonParameter = new ObjectParameter("p_showInfoButton", p_showInfoButton);
            }
            else
            {
                p_showInfoButtonParameter = new ObjectParameter("p_showInfoButton", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_showPhotosButtonParameter;
            if (p_showPhotosButton.HasValue)
            {
                p_showPhotosButtonParameter = new ObjectParameter("p_showPhotosButton", p_showPhotosButton);
            }
            else
            {
                p_showPhotosButtonParameter = new ObjectParameter("p_showPhotosButton", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_headerParameter;
            if (p_header != null)
            {
                p_headerParameter = new ObjectParameter("p_header", p_header);
            }
            else
            {
                p_headerParameter = new ObjectParameter("p_header", typeof(global::System.String));
            }
    
            ObjectParameter p_descriptionParameter;
            if (p_description != null)
            {
                p_descriptionParameter = new ObjectParameter("p_description", p_description);
            }
            else
            {
                p_descriptionParameter = new ObjectParameter("p_description", typeof(global::System.String));
            }
    
            ObjectParameter p_HaFBackgroundColorParameter;
            if (p_HaFBackgroundColor != null)
            {
                p_HaFBackgroundColorParameter = new ObjectParameter("p_HaFBackgroundColor", p_HaFBackgroundColor);
            }
            else
            {
                p_HaFBackgroundColorParameter = new ObjectParameter("p_HaFBackgroundColor", typeof(global::System.String));
            }
    
            ObjectParameter p_BackgroundColorParameter;
            if (p_BackgroundColor != null)
            {
                p_BackgroundColorParameter = new ObjectParameter("p_BackgroundColor", p_BackgroundColor);
            }
            else
            {
                p_BackgroundColorParameter = new ObjectParameter("p_BackgroundColor", typeof(global::System.String));
            }
    
            ObjectParameter p_LeftSectionColorParameter;
            if (p_LeftSectionColor != null)
            {
                p_LeftSectionColorParameter = new ObjectParameter("p_LeftSectionColor", p_LeftSectionColor);
            }
            else
            {
                p_LeftSectionColorParameter = new ObjectParameter("p_LeftSectionColor", typeof(global::System.String));
            }
    
            ObjectParameter p_RightSectionColorParameter;
            if (p_RightSectionColor != null)
            {
                p_RightSectionColorParameter = new ObjectParameter("p_RightSectionColor", p_RightSectionColor);
            }
            else
            {
                p_RightSectionColorParameter = new ObjectParameter("p_RightSectionColor", typeof(global::System.String));
            }
    
            ObjectParameter p_ButtonsBackgroundColorParameter;
            if (p_ButtonsBackgroundColor != null)
            {
                p_ButtonsBackgroundColorParameter = new ObjectParameter("p_ButtonsBackgroundColor", p_ButtonsBackgroundColor);
            }
            else
            {
                p_ButtonsBackgroundColorParameter = new ObjectParameter("p_ButtonsBackgroundColor", typeof(global::System.String));
            }
    
            ObjectParameter p_SongBackgroundColorParameter;
            if (p_SongBackgroundColor != null)
            {
                p_SongBackgroundColorParameter = new ObjectParameter("p_SongBackgroundColor", p_SongBackgroundColor);
            }
            else
            {
                p_SongBackgroundColorParameter = new ObjectParameter("p_SongBackgroundColor", typeof(global::System.String));
            }
    
            ObjectParameter p_TextColorParameter;
            if (p_TextColor != null)
            {
                p_TextColorParameter = new ObjectParameter("p_TextColor", p_TextColor);
            }
            else
            {
                p_TextColorParameter = new ObjectParameter("p_TextColor", typeof(global::System.String));
            }
    
            ObjectParameter p_ButtonsColorParameter;
            if (p_ButtonsColor != null)
            {
                p_ButtonsColorParameter = new ObjectParameter("p_ButtonsColor", p_ButtonsColor);
            }
            else
            {
                p_ButtonsColorParameter = new ObjectParameter("p_ButtonsColor", typeof(global::System.String));
            }
    
            ObjectParameter p_Playlist_IDParameter;
            if (p_Playlist_ID.HasValue)
            {
                p_Playlist_IDParameter = new ObjectParameter("p_Playlist_ID", p_Playlist_ID);
            }
            else
            {
                p_Playlist_IDParameter = new ObjectParameter("p_Playlist_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_Playlist_LayoutParameter;
            if (p_Playlist_Layout.HasValue)
            {
                p_Playlist_LayoutParameter = new ObjectParameter("p_Playlist_Layout", p_Playlist_Layout);
            }
            else
            {
                p_Playlist_LayoutParameter = new ObjectParameter("p_Playlist_Layout", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Members_EditMemberPublicPage", p_PublicPage_IDParameter, p_showHeaderParameter, p_showDescriptionParameter, p_autoplayParameter, p_showLikeButttonParameter, p_showInfoButtonParameter, p_showPhotosButtonParameter, p_headerParameter, p_descriptionParameter, p_HaFBackgroundColorParameter, p_BackgroundColorParameter, p_LeftSectionColorParameter, p_RightSectionColorParameter, p_ButtonsBackgroundColorParameter, p_SongBackgroundColorParameter, p_TextColorParameter, p_ButtonsColorParameter, p_Playlist_IDParameter, p_Playlist_LayoutParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<homeSlideshow> sp_homeSlideshow_getHomeSlideshowActive()
        {
            return base.ExecuteFunction<homeSlideshow>("sp_homeSlideshow_getHomeSlideshowActive");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<homeSlideshow> sp_homeSlideshow_getHomeSlideshowActive(MergeOption mergeOption)
        {
            return base.ExecuteFunction<homeSlideshow>("sp_homeSlideshow_getHomeSlideshowActive", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_homeSlideshow_ID">No Metadata Documentation available.</param>
        public int sp_homeSlideshow_DeactivateHomeSlideshow(Nullable<global::System.Int32> p_homeSlideshow_ID)
        {
            ObjectParameter p_homeSlideshow_IDParameter;
            if (p_homeSlideshow_ID.HasValue)
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", p_homeSlideshow_ID);
            }
            else
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_homeSlideshow_DeactivateHomeSlideshow", p_homeSlideshow_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_homeSlideshow_ID">No Metadata Documentation available.</param>
        public int sp_homeSlideshow_ActivateHomeSlideshow(Nullable<global::System.Int32> p_homeSlideshow_ID)
        {
            ObjectParameter p_homeSlideshow_IDParameter;
            if (p_homeSlideshow_ID.HasValue)
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", p_homeSlideshow_ID);
            }
            else
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_homeSlideshow_ActivateHomeSlideshow", p_homeSlideshow_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_artName">No Metadata Documentation available.</param>
        public ObjectResult<VisualSearch> sp_VisualSearch_getVisualSearchArtistByName(global::System.String p_artName)
        {
            ObjectParameter p_artNameParameter;
            if (p_artName != null)
            {
                p_artNameParameter = new ObjectParameter("p_artName", p_artName);
            }
            else
            {
                p_artNameParameter = new ObjectParameter("p_artName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<VisualSearch>("sp_VisualSearch_getVisualSearchArtistByName", p_artNameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_artName">No Metadata Documentation available.</param>
        public ObjectResult<VisualSearch> sp_VisualSearch_getVisualSearchArtistByName(global::System.String p_artName, MergeOption mergeOption)
        {
            ObjectParameter p_artNameParameter;
            if (p_artName != null)
            {
                p_artNameParameter = new ObjectParameter("p_artName", p_artName);
            }
            else
            {
                p_artNameParameter = new ObjectParameter("p_artName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<VisualSearch>("sp_VisualSearch_getVisualSearchArtistByName", mergeOption, p_artNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_genre_id">No Metadata Documentation available.</param>
        public ObjectResult<VisualSearch> sp_VisualSearch_getVisualSearchArtistsByGenreID(Nullable<global::System.Int32> p_genre_id)
        {
            ObjectParameter p_genre_idParameter;
            if (p_genre_id.HasValue)
            {
                p_genre_idParameter = new ObjectParameter("p_genre_id", p_genre_id);
            }
            else
            {
                p_genre_idParameter = new ObjectParameter("p_genre_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<VisualSearch>("sp_VisualSearch_getVisualSearchArtistsByGenreID", p_genre_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_genre_id">No Metadata Documentation available.</param>
        public ObjectResult<VisualSearch> sp_VisualSearch_getVisualSearchArtistsByGenreID(Nullable<global::System.Int32> p_genre_id, MergeOption mergeOption)
        {
            ObjectParameter p_genre_idParameter;
            if (p_genre_id.HasValue)
            {
                p_genre_idParameter = new ObjectParameter("p_genre_id", p_genre_id);
            }
            else
            {
                p_genre_idParameter = new ObjectParameter("p_genre_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<VisualSearch>("sp_VisualSearch_getVisualSearchArtistsByGenreID", mergeOption, p_genre_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_artist_id">No Metadata Documentation available.</param>
        public int sp_VisualSearch_DeleteArtist(Nullable<global::System.Int32> p_artist_id)
        {
            ObjectParameter p_artist_idParameter;
            if (p_artist_id.HasValue)
            {
                p_artist_idParameter = new ObjectParameter("p_artist_id", p_artist_id);
            }
            else
            {
                p_artist_idParameter = new ObjectParameter("p_artist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_VisualSearch_DeleteArtist", p_artist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_artist_id">No Metadata Documentation available.</param>
        public ObjectResult<VisualSearch> sp_VisualSearch_getVisualSearchArtistByID(Nullable<global::System.Int32> p_artist_id)
        {
            ObjectParameter p_artist_idParameter;
            if (p_artist_id.HasValue)
            {
                p_artist_idParameter = new ObjectParameter("p_artist_id", p_artist_id);
            }
            else
            {
                p_artist_idParameter = new ObjectParameter("p_artist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<VisualSearch>("sp_VisualSearch_getVisualSearchArtistByID", p_artist_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_artist_id">No Metadata Documentation available.</param>
        public ObjectResult<VisualSearch> sp_VisualSearch_getVisualSearchArtistByID(Nullable<global::System.Int32> p_artist_id, MergeOption mergeOption)
        {
            ObjectParameter p_artist_idParameter;
            if (p_artist_id.HasValue)
            {
                p_artist_idParameter = new ObjectParameter("p_artist_id", p_artist_id);
            }
            else
            {
                p_artist_idParameter = new ObjectParameter("p_artist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<VisualSearch>("sp_VisualSearch_getVisualSearchArtistByID", mergeOption, p_artist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_id">No Metadata Documentation available.</param>
        /// <param name="p_name">No Metadata Documentation available.</param>
        /// <param name="p_AutoshareEnabled">No Metadata Documentation available.</param>
        /// <param name="p_birth">No Metadata Documentation available.</param>
        /// <param name="p_city">No Metadata Documentation available.</param>
        /// <param name="p_country">No Metadata Documentation available.</param>
        /// <param name="p_zipcode">No Metadata Documentation available.</param>
        /// <param name="p_sex">No Metadata Documentation available.</param>
        /// <param name="p_user_interest">No Metadata Documentation available.</param>
        /// <param name="p_email_optout">No Metadata Documentation available.</param>
        public int sp_Members_UpdateMemberProfileDetails3(Nullable<global::System.Int32> p_id, global::System.String p_name, Nullable<global::System.Boolean> p_AutoshareEnabled, Nullable<global::System.DateTime> p_birth, global::System.String p_city, global::System.String p_country, global::System.String p_zipcode, Nullable<global::System.Byte> p_sex, Nullable<global::System.Int32> p_user_interest, Nullable<global::System.Int32> p_email_optout)
        {
            ObjectParameter p_idParameter;
            if (p_id.HasValue)
            {
                p_idParameter = new ObjectParameter("p_id", p_id);
            }
            else
            {
                p_idParameter = new ObjectParameter("p_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_nameParameter;
            if (p_name != null)
            {
                p_nameParameter = new ObjectParameter("p_name", p_name);
            }
            else
            {
                p_nameParameter = new ObjectParameter("p_name", typeof(global::System.String));
            }
    
            ObjectParameter p_AutoshareEnabledParameter;
            if (p_AutoshareEnabled.HasValue)
            {
                p_AutoshareEnabledParameter = new ObjectParameter("p_AutoshareEnabled", p_AutoshareEnabled);
            }
            else
            {
                p_AutoshareEnabledParameter = new ObjectParameter("p_AutoshareEnabled", typeof(global::System.Boolean));
            }
    
            ObjectParameter p_birthParameter;
            if (p_birth.HasValue)
            {
                p_birthParameter = new ObjectParameter("p_birth", p_birth);
            }
            else
            {
                p_birthParameter = new ObjectParameter("p_birth", typeof(global::System.DateTime));
            }
    
            ObjectParameter p_cityParameter;
            if (p_city != null)
            {
                p_cityParameter = new ObjectParameter("p_city", p_city);
            }
            else
            {
                p_cityParameter = new ObjectParameter("p_city", typeof(global::System.String));
            }
    
            ObjectParameter p_countryParameter;
            if (p_country != null)
            {
                p_countryParameter = new ObjectParameter("p_country", p_country);
            }
            else
            {
                p_countryParameter = new ObjectParameter("p_country", typeof(global::System.String));
            }
    
            ObjectParameter p_zipcodeParameter;
            if (p_zipcode != null)
            {
                p_zipcodeParameter = new ObjectParameter("p_zipcode", p_zipcode);
            }
            else
            {
                p_zipcodeParameter = new ObjectParameter("p_zipcode", typeof(global::System.String));
            }
    
            ObjectParameter p_sexParameter;
            if (p_sex.HasValue)
            {
                p_sexParameter = new ObjectParameter("p_sex", p_sex);
            }
            else
            {
                p_sexParameter = new ObjectParameter("p_sex", typeof(global::System.Byte));
            }
    
            ObjectParameter p_user_interestParameter;
            if (p_user_interest.HasValue)
            {
                p_user_interestParameter = new ObjectParameter("p_user_interest", p_user_interest);
            }
            else
            {
                p_user_interestParameter = new ObjectParameter("p_user_interest", typeof(global::System.Int32));
            }
    
            ObjectParameter p_email_optoutParameter;
            if (p_email_optout.HasValue)
            {
                p_email_optoutParameter = new ObjectParameter("p_email_optout", p_email_optout);
            }
            else
            {
                p_email_optoutParameter = new ObjectParameter("p_email_optout", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Members_UpdateMemberProfileDetails3", p_idParameter, p_nameParameter, p_AutoshareEnabledParameter, p_birthParameter, p_cityParameter, p_countryParameter, p_zipcodeParameter, p_sexParameter, p_user_interestParameter, p_email_optoutParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_genre_id1">No Metadata Documentation available.</param>
        /// <param name="p_genre_id2">No Metadata Documentation available.</param>
        /// <param name="p_genre_id3">No Metadata Documentation available.</param>
        /// <param name="p_genre_id4">No Metadata Documentation available.</param>
        /// <param name="p_genre_id5">No Metadata Documentation available.</param>
        /// <param name="p_genre_id6">No Metadata Documentation available.</param>
        public ObjectResult<VisualSearch> sp_VisualSearch_getVisualSearchArtistsByGenres(Nullable<global::System.Int32> p_genre_id1, Nullable<global::System.Int32> p_genre_id2, Nullable<global::System.Int32> p_genre_id3, Nullable<global::System.Int32> p_genre_id4, Nullable<global::System.Int32> p_genre_id5, Nullable<global::System.Int32> p_genre_id6)
        {
            ObjectParameter p_genre_id1Parameter;
            if (p_genre_id1.HasValue)
            {
                p_genre_id1Parameter = new ObjectParameter("p_genre_id1", p_genre_id1);
            }
            else
            {
                p_genre_id1Parameter = new ObjectParameter("p_genre_id1", typeof(global::System.Int32));
            }
    
            ObjectParameter p_genre_id2Parameter;
            if (p_genre_id2.HasValue)
            {
                p_genre_id2Parameter = new ObjectParameter("p_genre_id2", p_genre_id2);
            }
            else
            {
                p_genre_id2Parameter = new ObjectParameter("p_genre_id2", typeof(global::System.Int32));
            }
    
            ObjectParameter p_genre_id3Parameter;
            if (p_genre_id3.HasValue)
            {
                p_genre_id3Parameter = new ObjectParameter("p_genre_id3", p_genre_id3);
            }
            else
            {
                p_genre_id3Parameter = new ObjectParameter("p_genre_id3", typeof(global::System.Int32));
            }
    
            ObjectParameter p_genre_id4Parameter;
            if (p_genre_id4.HasValue)
            {
                p_genre_id4Parameter = new ObjectParameter("p_genre_id4", p_genre_id4);
            }
            else
            {
                p_genre_id4Parameter = new ObjectParameter("p_genre_id4", typeof(global::System.Int32));
            }
    
            ObjectParameter p_genre_id5Parameter;
            if (p_genre_id5.HasValue)
            {
                p_genre_id5Parameter = new ObjectParameter("p_genre_id5", p_genre_id5);
            }
            else
            {
                p_genre_id5Parameter = new ObjectParameter("p_genre_id5", typeof(global::System.Int32));
            }
    
            ObjectParameter p_genre_id6Parameter;
            if (p_genre_id6.HasValue)
            {
                p_genre_id6Parameter = new ObjectParameter("p_genre_id6", p_genre_id6);
            }
            else
            {
                p_genre_id6Parameter = new ObjectParameter("p_genre_id6", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<VisualSearch>("sp_VisualSearch_getVisualSearchArtistsByGenres", p_genre_id1Parameter, p_genre_id2Parameter, p_genre_id3Parameter, p_genre_id4Parameter, p_genre_id5Parameter, p_genre_id6Parameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_genre_id1">No Metadata Documentation available.</param>
        /// <param name="p_genre_id2">No Metadata Documentation available.</param>
        /// <param name="p_genre_id3">No Metadata Documentation available.</param>
        /// <param name="p_genre_id4">No Metadata Documentation available.</param>
        /// <param name="p_genre_id5">No Metadata Documentation available.</param>
        /// <param name="p_genre_id6">No Metadata Documentation available.</param>
        public ObjectResult<VisualSearch> sp_VisualSearch_getVisualSearchArtistsByGenres(Nullable<global::System.Int32> p_genre_id1, Nullable<global::System.Int32> p_genre_id2, Nullable<global::System.Int32> p_genre_id3, Nullable<global::System.Int32> p_genre_id4, Nullable<global::System.Int32> p_genre_id5, Nullable<global::System.Int32> p_genre_id6, MergeOption mergeOption)
        {
            ObjectParameter p_genre_id1Parameter;
            if (p_genre_id1.HasValue)
            {
                p_genre_id1Parameter = new ObjectParameter("p_genre_id1", p_genre_id1);
            }
            else
            {
                p_genre_id1Parameter = new ObjectParameter("p_genre_id1", typeof(global::System.Int32));
            }
    
            ObjectParameter p_genre_id2Parameter;
            if (p_genre_id2.HasValue)
            {
                p_genre_id2Parameter = new ObjectParameter("p_genre_id2", p_genre_id2);
            }
            else
            {
                p_genre_id2Parameter = new ObjectParameter("p_genre_id2", typeof(global::System.Int32));
            }
    
            ObjectParameter p_genre_id3Parameter;
            if (p_genre_id3.HasValue)
            {
                p_genre_id3Parameter = new ObjectParameter("p_genre_id3", p_genre_id3);
            }
            else
            {
                p_genre_id3Parameter = new ObjectParameter("p_genre_id3", typeof(global::System.Int32));
            }
    
            ObjectParameter p_genre_id4Parameter;
            if (p_genre_id4.HasValue)
            {
                p_genre_id4Parameter = new ObjectParameter("p_genre_id4", p_genre_id4);
            }
            else
            {
                p_genre_id4Parameter = new ObjectParameter("p_genre_id4", typeof(global::System.Int32));
            }
    
            ObjectParameter p_genre_id5Parameter;
            if (p_genre_id5.HasValue)
            {
                p_genre_id5Parameter = new ObjectParameter("p_genre_id5", p_genre_id5);
            }
            else
            {
                p_genre_id5Parameter = new ObjectParameter("p_genre_id5", typeof(global::System.Int32));
            }
    
            ObjectParameter p_genre_id6Parameter;
            if (p_genre_id6.HasValue)
            {
                p_genre_id6Parameter = new ObjectParameter("p_genre_id6", p_genre_id6);
            }
            else
            {
                p_genre_id6Parameter = new ObjectParameter("p_genre_id6", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<VisualSearch>("sp_VisualSearch_getVisualSearchArtistsByGenres", mergeOption, p_genre_id1Parameter, p_genre_id2Parameter, p_genre_id3Parameter, p_genre_id4Parameter, p_genre_id5Parameter, p_genre_id6Parameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_numOfMembers">No Metadata Documentation available.</param>
        public ObjectResult<MemberPublicPage> sp_Members_GetMembersPublicPagesRandom(Nullable<global::System.Int32> p_numOfMembers)
        {
            ObjectParameter p_numOfMembersParameter;
            if (p_numOfMembers.HasValue)
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", p_numOfMembers);
            }
            else
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MemberPublicPage>("sp_Members_GetMembersPublicPagesRandom", p_numOfMembersParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_numOfMembers">No Metadata Documentation available.</param>
        public ObjectResult<MemberPublicPage> sp_Members_GetMembersPublicPagesRandom(Nullable<global::System.Int32> p_numOfMembers, MergeOption mergeOption)
        {
            ObjectParameter p_numOfMembersParameter;
            if (p_numOfMembers.HasValue)
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", p_numOfMembers);
            }
            else
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MemberPublicPage>("sp_Members_GetMembersPublicPagesRandom", mergeOption, p_numOfMembersParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_numOfMembers">No Metadata Documentation available.</param>
        public ObjectResult<sp_Members_GetMembersPublicPagesRandomEx_Result> sp_Members_GetMembersPublicPagesRandomEx(Nullable<global::System.Int32> p_numOfMembers)
        {
            ObjectParameter p_numOfMembersParameter;
            if (p_numOfMembers.HasValue)
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", p_numOfMembers);
            }
            else
            {
                p_numOfMembersParameter = new ObjectParameter("p_numOfMembers", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Members_GetMembersPublicPagesRandomEx_Result>("sp_Members_GetMembersPublicPagesRandomEx", p_numOfMembersParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<MusicGenre> sp_MusicGenre_GetMusicGenresListPopular()
        {
            return base.ExecuteFunction<MusicGenre>("sp_MusicGenre_GetMusicGenresListPopular");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<MusicGenre> sp_MusicGenre_GetMusicGenresListPopular(MergeOption mergeOption)
        {
            return base.ExecuteFunction<MusicGenre>("sp_MusicGenre_GetMusicGenresListPopular", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> sp_Followers_GetNumberOfMyFollowers(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("sp_Followers_GetNumberOfMyFollowers", p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        public int sp_Members_UpdateMemberTrackData(Nullable<global::System.Int32> p_member_id)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Members_UpdateMemberTrackData", p_member_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_vote_for">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> sp_MemberVote_VoteFor(Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_vote_for)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_vote_forParameter;
            if (p_vote_for.HasValue)
            {
                p_vote_forParameter = new ObjectParameter("p_vote_for", p_vote_for);
            }
            else
            {
                p_vote_forParameter = new ObjectParameter("p_vote_for", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("sp_MemberVote_VoteFor", p_user_idParameter, p_vote_forParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_vote_for">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> sp_MemberVote_GetVotesNum(Nullable<global::System.Int32> p_vote_for)
        {
            ObjectParameter p_vote_forParameter;
            if (p_vote_for.HasValue)
            {
                p_vote_forParameter = new ObjectParameter("p_vote_for", p_vote_for);
            }
            else
            {
                p_vote_forParameter = new ObjectParameter("p_vote_for", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("sp_MemberVote_GetVotesNum", p_vote_forParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Playlist> sp_Playlist_GetMostLikedPlaylists()
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetMostLikedPlaylists");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Playlist> sp_Playlist_GetMostLikedPlaylists(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetMostLikedPlaylists", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Playlist> sp_Playlist_GetNewPlaylists()
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetNewPlaylists");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Playlist> sp_Playlist_GetNewPlaylists(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetNewPlaylists", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public int sp_Members_ConfirmMember(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Members_ConfirmMember", p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_limiter">No Metadata Documentation available.</param>
        public ObjectResult<Mix_Mobile> sp_Mix_GetRandomMixes(Nullable<global::System.Int32> p_limiter)
        {
            ObjectParameter p_limiterParameter;
            if (p_limiter.HasValue)
            {
                p_limiterParameter = new ObjectParameter("p_limiter", p_limiter);
            }
            else
            {
                p_limiterParameter = new ObjectParameter("p_limiter", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Mix_Mobile>("sp_Mix_GetRandomMixes", p_limiterParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_limiter">No Metadata Documentation available.</param>
        public ObjectResult<Mix_Mobile> sp_Mix_GetRandomMixes(Nullable<global::System.Int32> p_limiter, MergeOption mergeOption)
        {
            ObjectParameter p_limiterParameter;
            if (p_limiter.HasValue)
            {
                p_limiterParameter = new ObjectParameter("p_limiter", p_limiter);
            }
            else
            {
                p_limiterParameter = new ObjectParameter("p_limiter", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Mix_Mobile>("sp_Mix_GetRandomMixes", mergeOption, p_limiterParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_limiter">No Metadata Documentation available.</param>
        public ObjectResult<Mix_GetGenresAndCovers> sp_Mix_GetGenresAndCovers(Nullable<global::System.Int32> p_limiter)
        {
            ObjectParameter p_limiterParameter;
            if (p_limiter.HasValue)
            {
                p_limiterParameter = new ObjectParameter("p_limiter", p_limiter);
            }
            else
            {
                p_limiterParameter = new ObjectParameter("p_limiter", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Mix_GetGenresAndCovers>("sp_Mix_GetGenresAndCovers", p_limiterParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<VoteForSong> sp_VoteForSong_GetActiveVoteForSong()
        {
            return base.ExecuteFunction<VoteForSong>("sp_VoteForSong_GetActiveVoteForSong");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<VoteForSong> sp_VoteForSong_GetActiveVoteForSong(MergeOption mergeOption)
        {
            return base.ExecuteFunction<VoteForSong>("sp_VoteForSong_GetActiveVoteForSong", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<CoverContest> sp_CoverContest_GetAllCoverContestSongs()
        {
            return base.ExecuteFunction<CoverContest>("sp_CoverContest_GetAllCoverContestSongs");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<CoverContest> sp_CoverContest_GetAllCoverContestSongs(MergeOption mergeOption)
        {
            return base.ExecuteFunction<CoverContest>("sp_CoverContest_GetAllCoverContestSongs", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_vote_for">No Metadata Documentation available.</param>
        /// <param name="p_ip_adress">No Metadata Documentation available.</param>
        /// <param name="p_date_time">No Metadata Documentation available.</param>
        /// <param name="p_new_id">No Metadata Documentation available.</param>
        public int sp_CoverContestVote_VoteForContest(Nullable<global::System.Int32> p_vote_for, global::System.String p_ip_adress, Nullable<global::System.DateTime> p_date_time, ObjectParameter p_new_id)
        {
            ObjectParameter p_vote_forParameter;
            if (p_vote_for.HasValue)
            {
                p_vote_forParameter = new ObjectParameter("p_vote_for", p_vote_for);
            }
            else
            {
                p_vote_forParameter = new ObjectParameter("p_vote_for", typeof(global::System.Int32));
            }
    
            ObjectParameter p_ip_adressParameter;
            if (p_ip_adress != null)
            {
                p_ip_adressParameter = new ObjectParameter("p_ip_adress", p_ip_adress);
            }
            else
            {
                p_ip_adressParameter = new ObjectParameter("p_ip_adress", typeof(global::System.String));
            }
    
            ObjectParameter p_date_timeParameter;
            if (p_date_time.HasValue)
            {
                p_date_timeParameter = new ObjectParameter("p_date_time", p_date_time);
            }
            else
            {
                p_date_timeParameter = new ObjectParameter("p_date_time", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("sp_CoverContestVote_VoteForContest", p_vote_forParameter, p_ip_adressParameter, p_date_timeParameter, p_new_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public ObjectResult<MemberPublicPage> sp_Members_GetMemberPublicPageByPlaylistID(Nullable<global::System.Int32> p_member_id, Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MemberPublicPage>("sp_Members_GetMemberPublicPageByPlaylistID", p_member_idParameter, p_playlist_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_member_id">No Metadata Documentation available.</param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public ObjectResult<MemberPublicPage> sp_Members_GetMemberPublicPageByPlaylistID(Nullable<global::System.Int32> p_member_id, Nullable<global::System.Int32> p_playlist_id, MergeOption mergeOption)
        {
            ObjectParameter p_member_idParameter;
            if (p_member_id.HasValue)
            {
                p_member_idParameter = new ObjectParameter("p_member_id", p_member_id);
            }
            else
            {
                p_member_idParameter = new ObjectParameter("p_member_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MemberPublicPage>("sp_Members_GetMemberPublicPageByPlaylistID", mergeOption, p_member_idParameter, p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public ObjectResult<MemberPublicPage> sp_Members_GetMemberPublicPageByOnlyPlaylistID(Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MemberPublicPage>("sp_Members_GetMemberPublicPageByOnlyPlaylistID", p_playlist_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public ObjectResult<MemberPublicPage> sp_Members_GetMemberPublicPageByOnlyPlaylistID(Nullable<global::System.Int32> p_playlist_id, MergeOption mergeOption)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MemberPublicPage>("sp_Members_GetMemberPublicPageByOnlyPlaylistID", mergeOption, p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_FeaturedPlaylist_ID">No Metadata Documentation available.</param>
        public int sp_FeaturedPlaylist_DeleteFeaturedPlaylists(Nullable<global::System.Int32> p_FeaturedPlaylist_ID)
        {
            ObjectParameter p_FeaturedPlaylist_IDParameter;
            if (p_FeaturedPlaylist_ID.HasValue)
            {
                p_FeaturedPlaylist_IDParameter = new ObjectParameter("p_FeaturedPlaylist_ID", p_FeaturedPlaylist_ID);
            }
            else
            {
                p_FeaturedPlaylist_IDParameter = new ObjectParameter("p_FeaturedPlaylist_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_FeaturedPlaylist_DeleteFeaturedPlaylists", p_FeaturedPlaylist_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_top_num">No Metadata Documentation available.</param>
        /// <param name="p_cut_off_id">No Metadata Documentation available.</param>
        public ObjectResult<MostPopularHypsterSongs_Result> sp_Charts_GetMostPopularHypsterSongs(Nullable<global::System.Int32> p_top_num, Nullable<global::System.Int32> p_cut_off_id)
        {
            ObjectParameter p_top_numParameter;
            if (p_top_num.HasValue)
            {
                p_top_numParameter = new ObjectParameter("p_top_num", p_top_num);
            }
            else
            {
                p_top_numParameter = new ObjectParameter("p_top_num", typeof(global::System.Int32));
            }
    
            ObjectParameter p_cut_off_idParameter;
            if (p_cut_off_id.HasValue)
            {
                p_cut_off_idParameter = new ObjectParameter("p_cut_off_id", p_cut_off_id);
            }
            else
            {
                p_cut_off_idParameter = new ObjectParameter("p_cut_off_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MostPopularHypsterSongs_Result>("sp_Charts_GetMostPopularHypsterSongs", p_top_numParameter, p_cut_off_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<DynamicContent> sp_DynamicContent_GetDynamicPages()
        {
            return base.ExecuteFunction<DynamicContent>("sp_DynamicContent_GetDynamicPages");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<DynamicContent> sp_DynamicContent_GetDynamicPages(MergeOption mergeOption)
        {
            return base.ExecuteFunction<DynamicContent>("sp_DynamicContent_GetDynamicPages", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_dynCont_ID">No Metadata Documentation available.</param>
        public int sp_DynamicContent_DeleteDynamicPage(Nullable<global::System.Int32> p_dynCont_ID)
        {
            ObjectParameter p_dynCont_IDParameter;
            if (p_dynCont_ID.HasValue)
            {
                p_dynCont_IDParameter = new ObjectParameter("p_dynCont_ID", p_dynCont_ID);
            }
            else
            {
                p_dynCont_IDParameter = new ObjectParameter("p_dynCont_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_DynamicContent_DeleteDynamicPage", p_dynCont_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public int sp_playlistLike_DeletePlaylistLike(Nullable<global::System.Int32> p_playlist_id, Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_playlistLike_DeletePlaylistLike", p_playlist_idParameter, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_tag_name">No Metadata Documentation available.</param>
        /// <param name="p_tag_group_ID">No Metadata Documentation available.</param>
        /// <param name="p_tag_genre_ID">No Metadata Documentation available.</param>
        /// <param name="p_tag_click_Num">No Metadata Documentation available.</param>
        /// <param name="p_new_id">No Metadata Documentation available.</param>
        public int sp_Tag_AddNewTag(global::System.String p_tag_name, Nullable<global::System.Int32> p_tag_group_ID, Nullable<global::System.Int32> p_tag_genre_ID, Nullable<global::System.Int32> p_tag_click_Num, ObjectParameter p_new_id)
        {
            ObjectParameter p_tag_nameParameter;
            if (p_tag_name != null)
            {
                p_tag_nameParameter = new ObjectParameter("p_tag_name", p_tag_name);
            }
            else
            {
                p_tag_nameParameter = new ObjectParameter("p_tag_name", typeof(global::System.String));
            }
    
            ObjectParameter p_tag_group_IDParameter;
            if (p_tag_group_ID.HasValue)
            {
                p_tag_group_IDParameter = new ObjectParameter("p_tag_group_ID", p_tag_group_ID);
            }
            else
            {
                p_tag_group_IDParameter = new ObjectParameter("p_tag_group_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_tag_genre_IDParameter;
            if (p_tag_genre_ID.HasValue)
            {
                p_tag_genre_IDParameter = new ObjectParameter("p_tag_genre_ID", p_tag_genre_ID);
            }
            else
            {
                p_tag_genre_IDParameter = new ObjectParameter("p_tag_genre_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_tag_click_NumParameter;
            if (p_tag_click_Num.HasValue)
            {
                p_tag_click_NumParameter = new ObjectParameter("p_tag_click_Num", p_tag_click_Num);
            }
            else
            {
                p_tag_click_NumParameter = new ObjectParameter("p_tag_click_Num", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Tag_AddNewTag", p_tag_nameParameter, p_tag_group_IDParameter, p_tag_genre_IDParameter, p_tag_click_NumParameter, p_new_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_Tag_GetPlaylistTags_Result> sp_Tag_GetPlaylistTags(Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Tag_GetPlaylistTags_Result>("sp_Tag_GetPlaylistTags", p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_plst_tag_id">No Metadata Documentation available.</param>
        public int sp_Tag_DeletePlaylistTag(Nullable<global::System.Int32> p_plst_tag_id)
        {
            ObjectParameter p_plst_tag_idParameter;
            if (p_plst_tag_id.HasValue)
            {
                p_plst_tag_idParameter = new ObjectParameter("p_plst_tag_id", p_plst_tag_id);
            }
            else
            {
                p_plst_tag_idParameter = new ObjectParameter("p_plst_tag_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Tag_DeletePlaylistTag", p_plst_tag_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_sysHypster_AddNewInstall()
        {
            return base.ExecuteFunction("sp_sysHypster_AddNewInstall");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_sysHypster_AddNewUninstall()
        {
            return base.ExecuteFunction("sp_sysHypster_AddNewUninstall");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Tag> sp_Tag_GetPopularTags()
        {
            return base.ExecuteFunction<Tag>("sp_Tag_GetPopularTags");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Tag> sp_Tag_GetPopularTags(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Tag>("sp_Tag_GetPopularTags", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_tag_name">No Metadata Documentation available.</param>
        public ObjectResult<Tag> sp_Tag_GetTagByName(global::System.String p_tag_name)
        {
            ObjectParameter p_tag_nameParameter;
            if (p_tag_name != null)
            {
                p_tag_nameParameter = new ObjectParameter("p_tag_name", p_tag_name);
            }
            else
            {
                p_tag_nameParameter = new ObjectParameter("p_tag_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Tag>("sp_Tag_GetTagByName", p_tag_nameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_tag_name">No Metadata Documentation available.</param>
        public ObjectResult<Tag> sp_Tag_GetTagByName(global::System.String p_tag_name, MergeOption mergeOption)
        {
            ObjectParameter p_tag_nameParameter;
            if (p_tag_name != null)
            {
                p_tag_nameParameter = new ObjectParameter("p_tag_name", p_tag_name);
            }
            else
            {
                p_tag_nameParameter = new ObjectParameter("p_tag_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Tag>("sp_Tag_GetTagByName", mergeOption, p_tag_nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_tag_id">No Metadata Documentation available.</param>
        public ObjectResult<Playlist> sp_Tag_GetPlaylistsByTagId(Nullable<global::System.Int32> p_tag_id)
        {
            ObjectParameter p_tag_idParameter;
            if (p_tag_id.HasValue)
            {
                p_tag_idParameter = new ObjectParameter("p_tag_id", p_tag_id);
            }
            else
            {
                p_tag_idParameter = new ObjectParameter("p_tag_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Playlist>("sp_Tag_GetPlaylistsByTagId", p_tag_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_tag_id">No Metadata Documentation available.</param>
        public ObjectResult<Playlist> sp_Tag_GetPlaylistsByTagId(Nullable<global::System.Int32> p_tag_id, MergeOption mergeOption)
        {
            ObjectParameter p_tag_idParameter;
            if (p_tag_id.HasValue)
            {
                p_tag_idParameter = new ObjectParameter("p_tag_id", p_tag_id);
            }
            else
            {
                p_tag_idParameter = new ObjectParameter("p_tag_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Playlist>("sp_Tag_GetPlaylistsByTagId", mergeOption, p_tag_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_tag_id">No Metadata Documentation available.</param>
        public int sp_Tag_IncrementPopularTag(Nullable<global::System.Int32> p_tag_id)
        {
            ObjectParameter p_tag_idParameter;
            if (p_tag_id.HasValue)
            {
                p_tag_idParameter = new ObjectParameter("p_tag_id", p_tag_id);
            }
            else
            {
                p_tag_idParameter = new ObjectParameter("p_tag_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Tag_IncrementPopularTag", p_tag_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_article_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_Tag_GetNewsTags_Result> sp_Tag_GetNewsTags(Nullable<global::System.Int32> p_article_id)
        {
            ObjectParameter p_article_idParameter;
            if (p_article_id.HasValue)
            {
                p_article_idParameter = new ObjectParameter("p_article_id", p_article_id);
            }
            else
            {
                p_article_idParameter = new ObjectParameter("p_article_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Tag_GetNewsTags_Result>("sp_Tag_GetNewsTags", p_article_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_news_tag_id">No Metadata Documentation available.</param>
        public int sp_Tag_DeleteNewsTag(Nullable<global::System.Int32> p_news_tag_id)
        {
            ObjectParameter p_news_tag_idParameter;
            if (p_news_tag_id.HasValue)
            {
                p_news_tag_idParameter = new ObjectParameter("p_news_tag_id", p_news_tag_id);
            }
            else
            {
                p_news_tag_idParameter = new ObjectParameter("p_news_tag_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Tag_DeleteNewsTag", p_news_tag_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_tag_id">No Metadata Documentation available.</param>
        public ObjectResult<newsPost> sp_Tag_GetNewsByTagId(Nullable<global::System.Int32> p_tag_id)
        {
            ObjectParameter p_tag_idParameter;
            if (p_tag_id.HasValue)
            {
                p_tag_idParameter = new ObjectParameter("p_tag_id", p_tag_id);
            }
            else
            {
                p_tag_idParameter = new ObjectParameter("p_tag_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsPost>("sp_Tag_GetNewsByTagId", p_tag_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_tag_id">No Metadata Documentation available.</param>
        public ObjectResult<newsPost> sp_Tag_GetNewsByTagId(Nullable<global::System.Int32> p_tag_id, MergeOption mergeOption)
        {
            ObjectParameter p_tag_idParameter;
            if (p_tag_id.HasValue)
            {
                p_tag_idParameter = new ObjectParameter("p_tag_id", p_tag_id);
            }
            else
            {
                p_tag_idParameter = new ObjectParameter("p_tag_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsPost>("sp_Tag_GetNewsByTagId", mergeOption, p_tag_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_ContType">No Metadata Documentation available.</param>
        public ObjectResult<FeaturedContent> sp_FeaturedContent_ReturnFeaturedContent(Nullable<global::System.Int32> p_ContType)
        {
            ObjectParameter p_ContTypeParameter;
            if (p_ContType.HasValue)
            {
                p_ContTypeParameter = new ObjectParameter("p_ContType", p_ContType);
            }
            else
            {
                p_ContTypeParameter = new ObjectParameter("p_ContType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<FeaturedContent>("sp_FeaturedContent_ReturnFeaturedContent", p_ContTypeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_ContType">No Metadata Documentation available.</param>
        public ObjectResult<FeaturedContent> sp_FeaturedContent_ReturnFeaturedContent(Nullable<global::System.Int32> p_ContType, MergeOption mergeOption)
        {
            ObjectParameter p_ContTypeParameter;
            if (p_ContType.HasValue)
            {
                p_ContTypeParameter = new ObjectParameter("p_ContType", p_ContType);
            }
            else
            {
                p_ContTypeParameter = new ObjectParameter("p_ContType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<FeaturedContent>("sp_FeaturedContent_ReturnFeaturedContent", mergeOption, p_ContTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_fc_id">No Metadata Documentation available.</param>
        public int sp_FeaturedContent_delete_fc(Nullable<global::System.Int32> p_fc_id)
        {
            ObjectParameter p_fc_idParameter;
            if (p_fc_id.HasValue)
            {
                p_fc_idParameter = new ObjectParameter("p_fc_id", p_fc_id);
            }
            else
            {
                p_fc_idParameter = new ObjectParameter("p_fc_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_FeaturedContent_delete_fc", p_fc_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<homeSlideshow> sp_homeSlideshow_getFeaturedSlideshowActive()
        {
            return base.ExecuteFunction<homeSlideshow>("sp_homeSlideshow_getFeaturedSlideshowActive");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<homeSlideshow> sp_homeSlideshow_getFeaturedSlideshowActive(MergeOption mergeOption)
        {
            return base.ExecuteFunction<homeSlideshow>("sp_homeSlideshow_getFeaturedSlideshowActive", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_homeSlideshow_ID">No Metadata Documentation available.</param>
        public int sp_homeSlideshow_DeleteFeaturedSlideshow(Nullable<global::System.Int32> p_homeSlideshow_ID)
        {
            ObjectParameter p_homeSlideshow_IDParameter;
            if (p_homeSlideshow_ID.HasValue)
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", p_homeSlideshow_ID);
            }
            else
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_homeSlideshow_DeleteFeaturedSlideshow", p_homeSlideshow_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_homeSlideshow_ID">No Metadata Documentation available.</param>
        public int sp_homeSlideshow_AddFeaturedSlideshow(Nullable<global::System.Int32> p_homeSlideshow_ID)
        {
            ObjectParameter p_homeSlideshow_IDParameter;
            if (p_homeSlideshow_ID.HasValue)
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", p_homeSlideshow_ID);
            }
            else
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_homeSlideshow_AddFeaturedSlideshow", p_homeSlideshow_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<FeaturedPlaylist_Result> sp_FeaturedPlaylist_ReturnFeaturedPlaylists()
        {
            return base.ExecuteFunction<FeaturedPlaylist_Result>("sp_FeaturedPlaylist_ReturnFeaturedPlaylists");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_song_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_Compatibility_CompCheck_Result_Ex> sp_Compatibility_CompCheck_1_Ex(Nullable<global::System.Int32> p_song_id)
        {
            ObjectParameter p_song_idParameter;
            if (p_song_id.HasValue)
            {
                p_song_idParameter = new ObjectParameter("p_song_id", p_song_id);
            }
            else
            {
                p_song_idParameter = new ObjectParameter("p_song_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Compatibility_CompCheck_Result_Ex>("sp_Compatibility_CompCheck_1_Ex", p_song_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Dead_Link_ID">No Metadata Documentation available.</param>
        /// <param name="p_DL_Member_ID">No Metadata Documentation available.</param>
        /// <param name="p_DL_Song_Guid">No Metadata Documentation available.</param>
        /// <param name="p_DL_Song_ID">No Metadata Documentation available.</param>
        /// <param name="p_DL_ErrorNum">No Metadata Documentation available.</param>
        /// <param name="p_new_id">No Metadata Documentation available.</param>
        public int sp_DeadLink_SubmitDeadLink(Nullable<global::System.Int32> p_Dead_Link_ID, Nullable<global::System.Int32> p_DL_Member_ID, global::System.String p_DL_Song_Guid, Nullable<global::System.Int32> p_DL_Song_ID, Nullable<global::System.Int32> p_DL_ErrorNum, ObjectParameter p_new_id)
        {
            ObjectParameter p_Dead_Link_IDParameter;
            if (p_Dead_Link_ID.HasValue)
            {
                p_Dead_Link_IDParameter = new ObjectParameter("p_Dead_Link_ID", p_Dead_Link_ID);
            }
            else
            {
                p_Dead_Link_IDParameter = new ObjectParameter("p_Dead_Link_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_DL_Member_IDParameter;
            if (p_DL_Member_ID.HasValue)
            {
                p_DL_Member_IDParameter = new ObjectParameter("p_DL_Member_ID", p_DL_Member_ID);
            }
            else
            {
                p_DL_Member_IDParameter = new ObjectParameter("p_DL_Member_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_DL_Song_GuidParameter;
            if (p_DL_Song_Guid != null)
            {
                p_DL_Song_GuidParameter = new ObjectParameter("p_DL_Song_Guid", p_DL_Song_Guid);
            }
            else
            {
                p_DL_Song_GuidParameter = new ObjectParameter("p_DL_Song_Guid", typeof(global::System.String));
            }
    
            ObjectParameter p_DL_Song_IDParameter;
            if (p_DL_Song_ID.HasValue)
            {
                p_DL_Song_IDParameter = new ObjectParameter("p_DL_Song_ID", p_DL_Song_ID);
            }
            else
            {
                p_DL_Song_IDParameter = new ObjectParameter("p_DL_Song_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_DL_ErrorNumParameter;
            if (p_DL_ErrorNum.HasValue)
            {
                p_DL_ErrorNumParameter = new ObjectParameter("p_DL_ErrorNum", p_DL_ErrorNum);
            }
            else
            {
                p_DL_ErrorNumParameter = new ObjectParameter("p_DL_ErrorNum", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_DeadLink_SubmitDeadLink", p_Dead_Link_IDParameter, p_DL_Member_IDParameter, p_DL_Song_GuidParameter, p_DL_Song_IDParameter, p_DL_ErrorNumParameter, p_new_id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_Playlist_GetSongsDeadLinks_Result> sp_Playlist_GetSongsForPlayListDeadLinks(Nullable<global::System.Int32> p_playlist_id, Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Playlist_GetSongsDeadLinks_Result>("sp_Playlist_GetSongsForPlayListDeadLinks", p_playlist_idParameter, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_id">No Metadata Documentation available.</param>
        /// <param name="p_username">No Metadata Documentation available.</param>
        public int sp_Members_updateMemberUsername(Nullable<global::System.Int32> p_id, global::System.String p_username)
        {
            ObjectParameter p_idParameter;
            if (p_id.HasValue)
            {
                p_idParameter = new ObjectParameter("p_id", p_id);
            }
            else
            {
                p_idParameter = new ObjectParameter("p_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_usernameParameter;
            if (p_username != null)
            {
                p_usernameParameter = new ObjectParameter("p_username", p_username);
            }
            else
            {
                p_usernameParameter = new ObjectParameter("p_username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_Members_updateMemberUsername", p_idParameter, p_usernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_ID">No Metadata Documentation available.</param>
        /// <param name="p_playlist_Desc">No Metadata Documentation available.</param>
        public int sp_Playlist_UpdatePlaylistDesc(Nullable<global::System.Int32> p_playlist_ID, global::System.String p_playlist_Desc)
        {
            ObjectParameter p_playlist_IDParameter;
            if (p_playlist_ID.HasValue)
            {
                p_playlist_IDParameter = new ObjectParameter("p_playlist_ID", p_playlist_ID);
            }
            else
            {
                p_playlist_IDParameter = new ObjectParameter("p_playlist_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_playlist_DescParameter;
            if (p_playlist_Desc != null)
            {
                p_playlist_DescParameter = new ObjectParameter("p_playlist_Desc", p_playlist_Desc);
            }
            else
            {
                p_playlist_DescParameter = new ObjectParameter("p_playlist_Desc", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_Playlist_UpdatePlaylistDesc", p_playlist_IDParameter, p_playlist_DescParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_guid">No Metadata Documentation available.</param>
        public ObjectResult<FeaturedPlaylist_Result> sp_FeaturedPlaylist_FeaturedPlaylistByGuid(global::System.String p_guid)
        {
            ObjectParameter p_guidParameter;
            if (p_guid != null)
            {
                p_guidParameter = new ObjectParameter("p_guid", p_guid);
            }
            else
            {
                p_guidParameter = new ObjectParameter("p_guid", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FeaturedPlaylist_Result>("sp_FeaturedPlaylist_FeaturedPlaylistByGuid", p_guidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Chart> sp_Charts_GetTopCharts()
        {
            return base.ExecuteFunction<Chart>("sp_Charts_GetTopCharts");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Chart> sp_Charts_GetTopCharts(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Chart>("sp_Charts_GetTopCharts", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Festival> sp_Festivals_GetTopFestivals()
        {
            return base.ExecuteFunction<Festival>("sp_Festivals_GetTopFestivals");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Festival> sp_Festivals_GetTopFestivals(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Festival>("sp_Festivals_GetTopFestivals", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Playlist> sp_Playlist_GetMostLikedPlaylistsAdmin()
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetMostLikedPlaylistsAdmin");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Playlist> sp_Playlist_GetMostLikedPlaylistsAdmin(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetMostLikedPlaylistsAdmin", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Playlist> sp_Playlist_GetMostViewedPlaylistsAdmin()
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetMostViewedPlaylistsAdmin");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Playlist> sp_Playlist_GetMostViewedPlaylistsAdmin(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetMostViewedPlaylistsAdmin", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Playlist> sp_Playlist_GetWithDescPlaylists()
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetWithDescPlaylists");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Playlist> sp_Playlist_GetWithDescPlaylists(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Playlist>("sp_Playlist_GetWithDescPlaylists", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ArtistCategory> sp_artist_GetAllArtists()
        {
            return base.ExecuteFunction<ArtistCategory>("sp_artist_GetAllArtists");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<ArtistCategory> sp_artist_GetAllArtists(MergeOption mergeOption)
        {
            return base.ExecuteFunction<ArtistCategory>("sp_artist_GetAllArtists", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_artist_name">No Metadata Documentation available.</param>
        public ObjectResult<ArtistCategory> sp_artist_GetArtistByName(global::System.String p_artist_name)
        {
            ObjectParameter p_artist_nameParameter;
            if (p_artist_name != null)
            {
                p_artist_nameParameter = new ObjectParameter("p_artist_name", p_artist_name);
            }
            else
            {
                p_artist_nameParameter = new ObjectParameter("p_artist_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ArtistCategory>("sp_artist_GetArtistByName", p_artist_nameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_artist_name">No Metadata Documentation available.</param>
        public ObjectResult<ArtistCategory> sp_artist_GetArtistByName(global::System.String p_artist_name, MergeOption mergeOption)
        {
            ObjectParameter p_artist_nameParameter;
            if (p_artist_name != null)
            {
                p_artist_nameParameter = new ObjectParameter("p_artist_name", p_artist_name);
            }
            else
            {
                p_artist_nameParameter = new ObjectParameter("p_artist_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ArtistCategory>("sp_artist_GetArtistByName", mergeOption, p_artist_nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ArtistCategory> sp_artist_GetTopNotConfirmedArtists()
        {
            return base.ExecuteFunction<ArtistCategory>("sp_artist_GetTopNotConfirmedArtists");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<ArtistCategory> sp_artist_GetTopNotConfirmedArtists(MergeOption mergeOption)
        {
            return base.ExecuteFunction<ArtistCategory>("sp_artist_GetTopNotConfirmedArtists", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_ar_id">No Metadata Documentation available.</param>
        public int sp_artist_ConfirmArtist(Nullable<global::System.Int32> p_ar_id)
        {
            ObjectParameter p_ar_idParameter;
            if (p_ar_id.HasValue)
            {
                p_ar_idParameter = new ObjectParameter("p_ar_id", p_ar_id);
            }
            else
            {
                p_ar_idParameter = new ObjectParameter("p_ar_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_artist_ConfirmArtist", p_ar_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_ID">No Metadata Documentation available.</param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        /// <param name="p_shares_num">No Metadata Documentation available.</param>
        public int sp_Playlist_UpdatePlaylistShares(Nullable<global::System.Int32> p_playlist_ID, Nullable<global::System.Int32> p_user_id, Nullable<global::System.Int32> p_shares_num)
        {
            ObjectParameter p_playlist_IDParameter;
            if (p_playlist_ID.HasValue)
            {
                p_playlist_IDParameter = new ObjectParameter("p_playlist_ID", p_playlist_ID);
            }
            else
            {
                p_playlist_IDParameter = new ObjectParameter("p_playlist_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_shares_numParameter;
            if (p_shares_num.HasValue)
            {
                p_shares_numParameter = new ObjectParameter("p_shares_num", p_shares_num);
            }
            else
            {
                p_shares_numParameter = new ObjectParameter("p_shares_num", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Playlist_UpdatePlaylistShares", p_playlist_IDParameter, p_user_idParameter, p_shares_numParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_ss">No Metadata Documentation available.</param>
        public ObjectResult<ArtistCategory> sp_artist_SearchForArtist(global::System.String p_ss)
        {
            ObjectParameter p_ssParameter;
            if (p_ss != null)
            {
                p_ssParameter = new ObjectParameter("p_ss", p_ss);
            }
            else
            {
                p_ssParameter = new ObjectParameter("p_ss", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ArtistCategory>("sp_artist_SearchForArtist", p_ssParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_ss">No Metadata Documentation available.</param>
        public ObjectResult<ArtistCategory> sp_artist_SearchForArtist(global::System.String p_ss, MergeOption mergeOption)
        {
            ObjectParameter p_ssParameter;
            if (p_ss != null)
            {
                p_ssParameter = new ObjectParameter("p_ss", p_ss);
            }
            else
            {
                p_ssParameter = new ObjectParameter("p_ss", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ArtistCategory>("sp_artist_SearchForArtist", mergeOption, p_ssParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<sp_Tag_GetPopularNewsTags_Result> sp_Tag_GetPopularNewsTags()
        {
            return base.ExecuteFunction<sp_Tag_GetPopularNewsTags_Result>("sp_Tag_GetPopularNewsTags");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_date_year">No Metadata Documentation available.</param>
        /// <param name="p_date_month">No Metadata Documentation available.</param>
        /// <param name="p_date_day">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_GetNewMembersRegistrations(Nullable<global::System.Int32> p_date_year, Nullable<global::System.Int32> p_date_month, Nullable<global::System.Int32> p_date_day)
        {
            ObjectParameter p_date_yearParameter;
            if (p_date_year.HasValue)
            {
                p_date_yearParameter = new ObjectParameter("p_date_year", p_date_year);
            }
            else
            {
                p_date_yearParameter = new ObjectParameter("p_date_year", typeof(global::System.Int32));
            }
    
            ObjectParameter p_date_monthParameter;
            if (p_date_month.HasValue)
            {
                p_date_monthParameter = new ObjectParameter("p_date_month", p_date_month);
            }
            else
            {
                p_date_monthParameter = new ObjectParameter("p_date_month", typeof(global::System.Int32));
            }
    
            ObjectParameter p_date_dayParameter;
            if (p_date_day.HasValue)
            {
                p_date_dayParameter = new ObjectParameter("p_date_day", p_date_day);
            }
            else
            {
                p_date_dayParameter = new ObjectParameter("p_date_day", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_GetNewMembersRegistrations", p_date_yearParameter, p_date_monthParameter, p_date_dayParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_date_year">No Metadata Documentation available.</param>
        /// <param name="p_date_month">No Metadata Documentation available.</param>
        /// <param name="p_date_day">No Metadata Documentation available.</param>
        public ObjectResult<Member> sp_Members_GetNewMembersRegistrations(Nullable<global::System.Int32> p_date_year, Nullable<global::System.Int32> p_date_month, Nullable<global::System.Int32> p_date_day, MergeOption mergeOption)
        {
            ObjectParameter p_date_yearParameter;
            if (p_date_year.HasValue)
            {
                p_date_yearParameter = new ObjectParameter("p_date_year", p_date_year);
            }
            else
            {
                p_date_yearParameter = new ObjectParameter("p_date_year", typeof(global::System.Int32));
            }
    
            ObjectParameter p_date_monthParameter;
            if (p_date_month.HasValue)
            {
                p_date_monthParameter = new ObjectParameter("p_date_month", p_date_month);
            }
            else
            {
                p_date_monthParameter = new ObjectParameter("p_date_month", typeof(global::System.Int32));
            }
    
            ObjectParameter p_date_dayParameter;
            if (p_date_day.HasValue)
            {
                p_date_dayParameter = new ObjectParameter("p_date_day", p_date_day);
            }
            else
            {
                p_date_dayParameter = new ObjectParameter("p_date_day", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("sp_Members_GetNewMembersRegistrations", mergeOption, p_date_yearParameter, p_date_monthParameter, p_date_dayParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Int32>> sp_sysHypster_GetSplashID()
        {
            return base.ExecuteFunction<Nullable<global::System.Int32>>("sp_sysHypster_GetSplashID");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_splashID">No Metadata Documentation available.</param>
        public int sp_sysHypster_SetSplashID(Nullable<global::System.Int32> p_splashID)
        {
            ObjectParameter p_splashIDParameter;
            if (p_splashID.HasValue)
            {
                p_splashIDParameter = new ObjectParameter("p_splashID", p_splashID);
            }
            else
            {
                p_splashIDParameter = new ObjectParameter("p_splashID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_sysHypster_SetSplashID", p_splashIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_ss">No Metadata Documentation available.</param>
        public ObjectResult<Tag> sp_Tag_SearchTags(global::System.String p_ss)
        {
            ObjectParameter p_ssParameter;
            if (p_ss != null)
            {
                p_ssParameter = new ObjectParameter("p_ss", p_ss);
            }
            else
            {
                p_ssParameter = new ObjectParameter("p_ss", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Tag>("sp_Tag_SearchTags", p_ssParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_ss">No Metadata Documentation available.</param>
        public ObjectResult<Tag> sp_Tag_SearchTags(global::System.String p_ss, MergeOption mergeOption)
        {
            ObjectParameter p_ssParameter;
            if (p_ss != null)
            {
                p_ssParameter = new ObjectParameter("p_ss", p_ss);
            }
            else
            {
                p_ssParameter = new ObjectParameter("p_ss", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Tag>("sp_Tag_SearchTags", mergeOption, p_ssParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_p_post_ID">No Metadata Documentation available.</param>
        public ObjectResult<newsPost> sp_newsPost_GetRelatedNews(Nullable<global::System.Int32> p_p_post_ID)
        {
            ObjectParameter p_p_post_IDParameter;
            if (p_p_post_ID.HasValue)
            {
                p_p_post_IDParameter = new ObjectParameter("p_p_post_ID", p_p_post_ID);
            }
            else
            {
                p_p_post_IDParameter = new ObjectParameter("p_p_post_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsPost>("sp_newsPost_GetRelatedNews", p_p_post_IDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_p_post_ID">No Metadata Documentation available.</param>
        public ObjectResult<newsPost> sp_newsPost_GetRelatedNews(Nullable<global::System.Int32> p_p_post_ID, MergeOption mergeOption)
        {
            ObjectParameter p_p_post_IDParameter;
            if (p_p_post_ID.HasValue)
            {
                p_p_post_IDParameter = new ObjectParameter("p_p_post_ID", p_p_post_ID);
            }
            else
            {
                p_p_post_IDParameter = new ObjectParameter("p_p_post_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<newsPost>("sp_newsPost_GetRelatedNews", mergeOption, p_p_post_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_post_id">No Metadata Documentation available.</param>
        /// <param name="p_post_title">No Metadata Documentation available.</param>
        /// <param name="p_post_content">No Metadata Documentation available.</param>
        /// <param name="p_post_image">No Metadata Documentation available.</param>
        /// <param name="p_post_status">No Metadata Documentation available.</param>
        /// <param name="p_post_short_content">No Metadata Documentation available.</param>
        /// <param name="p_musicPlayer">No Metadata Documentation available.</param>
        /// <param name="p_post_date">No Metadata Documentation available.</param>
        public int sp_newsPost_EditPost(Nullable<global::System.Int32> p_post_id, global::System.String p_post_title, global::System.String p_post_content, global::System.String p_post_image, Nullable<global::System.Int32> p_post_status, global::System.String p_post_short_content, global::System.String p_musicPlayer, Nullable<global::System.DateTime> p_post_date)
        {
            ObjectParameter p_post_idParameter;
            if (p_post_id.HasValue)
            {
                p_post_idParameter = new ObjectParameter("p_post_id", p_post_id);
            }
            else
            {
                p_post_idParameter = new ObjectParameter("p_post_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_post_titleParameter;
            if (p_post_title != null)
            {
                p_post_titleParameter = new ObjectParameter("p_post_title", p_post_title);
            }
            else
            {
                p_post_titleParameter = new ObjectParameter("p_post_title", typeof(global::System.String));
            }
    
            ObjectParameter p_post_contentParameter;
            if (p_post_content != null)
            {
                p_post_contentParameter = new ObjectParameter("p_post_content", p_post_content);
            }
            else
            {
                p_post_contentParameter = new ObjectParameter("p_post_content", typeof(global::System.String));
            }
    
            ObjectParameter p_post_imageParameter;
            if (p_post_image != null)
            {
                p_post_imageParameter = new ObjectParameter("p_post_image", p_post_image);
            }
            else
            {
                p_post_imageParameter = new ObjectParameter("p_post_image", typeof(global::System.String));
            }
    
            ObjectParameter p_post_statusParameter;
            if (p_post_status.HasValue)
            {
                p_post_statusParameter = new ObjectParameter("p_post_status", p_post_status);
            }
            else
            {
                p_post_statusParameter = new ObjectParameter("p_post_status", typeof(global::System.Int32));
            }
    
            ObjectParameter p_post_short_contentParameter;
            if (p_post_short_content != null)
            {
                p_post_short_contentParameter = new ObjectParameter("p_post_short_content", p_post_short_content);
            }
            else
            {
                p_post_short_contentParameter = new ObjectParameter("p_post_short_content", typeof(global::System.String));
            }
    
            ObjectParameter p_musicPlayerParameter;
            if (p_musicPlayer != null)
            {
                p_musicPlayerParameter = new ObjectParameter("p_musicPlayer", p_musicPlayer);
            }
            else
            {
                p_musicPlayerParameter = new ObjectParameter("p_musicPlayer", typeof(global::System.String));
            }
    
            ObjectParameter p_post_dateParameter;
            if (p_post_date.HasValue)
            {
                p_post_dateParameter = new ObjectParameter("p_post_date", p_post_date);
            }
            else
            {
                p_post_dateParameter = new ObjectParameter("p_post_date", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("sp_newsPost_EditPost", p_post_idParameter, p_post_titleParameter, p_post_contentParameter, p_post_imageParameter, p_post_statusParameter, p_post_short_contentParameter, p_musicPlayerParameter, p_post_dateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_homeSlideshow_ID">No Metadata Documentation available.</param>
        public int sp_homeSlideshow_MoveSlideUp(Nullable<global::System.Int32> p_homeSlideshow_ID)
        {
            ObjectParameter p_homeSlideshow_IDParameter;
            if (p_homeSlideshow_ID.HasValue)
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", p_homeSlideshow_ID);
            }
            else
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_homeSlideshow_MoveSlideUp", p_homeSlideshow_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_homeSlideshow_ID">No Metadata Documentation available.</param>
        public int sp_homeSlideshow_MoveSlideDown(Nullable<global::System.Int32> p_homeSlideshow_ID)
        {
            ObjectParameter p_homeSlideshow_IDParameter;
            if (p_homeSlideshow_ID.HasValue)
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", p_homeSlideshow_ID);
            }
            else
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_homeSlideshow_MoveSlideDown", p_homeSlideshow_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_homeSlideshow_IncAllSlides()
        {
            return base.ExecuteFunction("sp_homeSlideshow_IncAllSlides");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_slide_id">No Metadata Documentation available.</param>
        /// <param name="p_order_id">No Metadata Documentation available.</param>
        public int sp_homeSlideshow_UpdateSortOrder(Nullable<global::System.Int32> p_slide_id, Nullable<global::System.Int32> p_order_id)
        {
            ObjectParameter p_slide_idParameter;
            if (p_slide_id.HasValue)
            {
                p_slide_idParameter = new ObjectParameter("p_slide_id", p_slide_id);
            }
            else
            {
                p_slide_idParameter = new ObjectParameter("p_slide_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_order_idParameter;
            if (p_order_id.HasValue)
            {
                p_order_idParameter = new ObjectParameter("p_order_id", p_order_id);
            }
            else
            {
                p_order_idParameter = new ObjectParameter("p_order_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_homeSlideshow_UpdateSortOrder", p_slide_idParameter, p_order_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_id">No Metadata Documentation available.</param>
        /// <param name="p_user_name">No Metadata Documentation available.</param>
        /// <param name="p_email_confirmed">No Metadata Documentation available.</param>
        public int sp_Members_UpdateMemberEmailConfirmed(Nullable<global::System.Int32> p_id, global::System.String p_user_name, Nullable<global::System.Int32> p_email_confirmed)
        {
            ObjectParameter p_idParameter;
            if (p_id.HasValue)
            {
                p_idParameter = new ObjectParameter("p_id", p_id);
            }
            else
            {
                p_idParameter = new ObjectParameter("p_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_user_nameParameter;
            if (p_user_name != null)
            {
                p_user_nameParameter = new ObjectParameter("p_user_name", p_user_name);
            }
            else
            {
                p_user_nameParameter = new ObjectParameter("p_user_name", typeof(global::System.String));
            }
    
            ObjectParameter p_email_confirmedParameter;
            if (p_email_confirmed.HasValue)
            {
                p_email_confirmedParameter = new ObjectParameter("p_email_confirmed", p_email_confirmed);
            }
            else
            {
                p_email_confirmedParameter = new ObjectParameter("p_email_confirmed", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Members_UpdateMemberEmailConfirmed", p_idParameter, p_user_nameParameter, p_email_confirmedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<ListenHistory> sp_ListenHistory_GetLatestListenHistoryUser(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ListenHistory>("sp_ListenHistory_GetLatestListenHistoryUser", p_user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<ListenHistory> sp_ListenHistory_GetLatestListenHistoryUser(Nullable<global::System.Int32> p_user_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ListenHistory>("sp_ListenHistory_GetLatestListenHistoryUser", mergeOption, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<ListenHistory> sp_ListenHistory_GetListenHistoryUser(Nullable<global::System.Int32> p_user_id)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ListenHistory>("sp_ListenHistory_GetListenHistoryUser", p_user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_user_id">No Metadata Documentation available.</param>
        public ObjectResult<ListenHistory> sp_ListenHistory_GetListenHistoryUser(Nullable<global::System.Int32> p_user_id, MergeOption mergeOption)
        {
            ObjectParameter p_user_idParameter;
            if (p_user_id.HasValue)
            {
                p_user_idParameter = new ObjectParameter("p_user_id", p_user_id);
            }
            else
            {
                p_user_idParameter = new ObjectParameter("p_user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ListenHistory>("sp_ListenHistory_GetListenHistoryUser", mergeOption, p_user_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_song_id">No Metadata Documentation available.</param>
        public int sp_Songs_Get_MarkDeadLink(Nullable<global::System.Int32> p_song_id)
        {
            ObjectParameter p_song_idParameter;
            if (p_song_id.HasValue)
            {
                p_song_idParameter = new ObjectParameter("p_song_id", p_song_id);
            }
            else
            {
                p_song_idParameter = new ObjectParameter("p_song_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_Songs_Get_MarkDeadLink", p_song_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_search_term">No Metadata Documentation available.</param>
        public ObjectResult<Playlist> sp_Playlist_SearchPlaylistByDesc(global::System.String p_search_term)
        {
            ObjectParameter p_search_termParameter;
            if (p_search_term != null)
            {
                p_search_termParameter = new ObjectParameter("p_search_term", p_search_term);
            }
            else
            {
                p_search_termParameter = new ObjectParameter("p_search_term", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Playlist>("sp_Playlist_SearchPlaylistByDesc", p_search_termParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="p_search_term">No Metadata Documentation available.</param>
        public ObjectResult<Playlist> sp_Playlist_SearchPlaylistByDesc(global::System.String p_search_term, MergeOption mergeOption)
        {
            ObjectParameter p_search_termParameter;
            if (p_search_term != null)
            {
                p_search_termParameter = new ObjectParameter("p_search_term", p_search_term);
            }
            else
            {
                p_search_termParameter = new ObjectParameter("p_search_term", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Playlist>("sp_Playlist_SearchPlaylistByDesc", mergeOption, p_search_termParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_post_id">No Metadata Documentation available.</param>
        /// <param name="p_ad_id">No Metadata Documentation available.</param>
        public int sp_newsPost_SetPostAdID(Nullable<global::System.Int32> p_post_id, global::System.String p_ad_id)
        {
            ObjectParameter p_post_idParameter;
            if (p_post_id.HasValue)
            {
                p_post_idParameter = new ObjectParameter("p_post_id", p_post_id);
            }
            else
            {
                p_post_idParameter = new ObjectParameter("p_post_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_ad_idParameter;
            if (p_ad_id != null)
            {
                p_ad_idParameter = new ObjectParameter("p_ad_id", p_ad_id);
            }
            else
            {
                p_ad_idParameter = new ObjectParameter("p_ad_id", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_newsPost_SetPostAdID", p_post_idParameter, p_ad_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Sitemap_Content> sp_SitemapManagement_GetSitemapContent()
        {
            return base.ExecuteFunction<Sitemap_Content>("sp_SitemapManagement_GetSitemapContent");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Sitemap_Content> sp_SitemapManagement_GetSitemapContent(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Sitemap_Content>("sp_SitemapManagement_GetSitemapContent", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_Sitemap_Updated">No Metadata Documentation available.</param>
        /// <param name="p_Sitemap_ID">No Metadata Documentation available.</param>
        public int sp_SitemapManagement_UpdateDateChanged(Nullable<global::System.DateTime> p_Sitemap_Updated, Nullable<global::System.Int32> p_Sitemap_ID)
        {
            ObjectParameter p_Sitemap_UpdatedParameter;
            if (p_Sitemap_Updated.HasValue)
            {
                p_Sitemap_UpdatedParameter = new ObjectParameter("p_Sitemap_Updated", p_Sitemap_Updated);
            }
            else
            {
                p_Sitemap_UpdatedParameter = new ObjectParameter("p_Sitemap_Updated", typeof(global::System.DateTime));
            }
    
            ObjectParameter p_Sitemap_IDParameter;
            if (p_Sitemap_ID.HasValue)
            {
                p_Sitemap_IDParameter = new ObjectParameter("p_Sitemap_ID", p_Sitemap_ID);
            }
            else
            {
                p_Sitemap_IDParameter = new ObjectParameter("p_Sitemap_ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_SitemapManagement_UpdateDateChanged", p_Sitemap_UpdatedParameter, p_Sitemap_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_playlist_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_Playlist_GetPlaylistById_Admin_Result> sp_Playlist_GetPlaylistById_Admin(Nullable<global::System.Int32> p_playlist_id)
        {
            ObjectParameter p_playlist_idParameter;
            if (p_playlist_id.HasValue)
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", p_playlist_id);
            }
            else
            {
                p_playlist_idParameter = new ObjectParameter("p_playlist_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_Playlist_GetPlaylistById_Admin_Result>("sp_Playlist_GetPlaylistById_Admin", p_playlist_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_post_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_ScheduledPost_GetScheduleByID_Result> sp_ScheduledPost_GetScheduleByID(Nullable<global::System.Int32> p_post_id)
        {
            ObjectParameter p_post_idParameter;
            if (p_post_id.HasValue)
            {
                p_post_idParameter = new ObjectParameter("p_post_id", p_post_id);
            }
            else
            {
                p_post_idParameter = new ObjectParameter("p_post_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_ScheduledPost_GetScheduleByID_Result>("sp_ScheduledPost_GetScheduleByID", p_post_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="scheduled_date">No Metadata Documentation available.</param>
        /// <param name="activated">No Metadata Documentation available.</param>
        /// <param name="p_post_id">No Metadata Documentation available.</param>
        public int sp_ScheduledPost_EditSPost(Nullable<global::System.DateTime> scheduled_date, Nullable<global::System.Int32> activated, Nullable<global::System.Int32> p_post_id)
        {
            ObjectParameter scheduled_dateParameter;
            if (scheduled_date.HasValue)
            {
                scheduled_dateParameter = new ObjectParameter("scheduled_date", scheduled_date);
            }
            else
            {
                scheduled_dateParameter = new ObjectParameter("scheduled_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter activatedParameter;
            if (activated.HasValue)
            {
                activatedParameter = new ObjectParameter("activated", activated);
            }
            else
            {
                activatedParameter = new ObjectParameter("activated", typeof(global::System.Int32));
            }
    
            ObjectParameter p_post_idParameter;
            if (p_post_id.HasValue)
            {
                p_post_idParameter = new ObjectParameter("p_post_id", p_post_id);
            }
            else
            {
                p_post_idParameter = new ObjectParameter("p_post_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_ScheduledPost_EditSPost", scheduled_dateParameter, activatedParameter, p_post_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_homeSlideshow_ID">No Metadata Documentation available.</param>
        /// <param name="href">No Metadata Documentation available.</param>
        /// <param name="imageSrc">No Metadata Documentation available.</param>
        public int sp_homeSlideshow_UpdateHomeSlideshow(Nullable<global::System.Int32> p_homeSlideshow_ID, global::System.String href, global::System.String imageSrc)
        {
            ObjectParameter p_homeSlideshow_IDParameter;
            if (p_homeSlideshow_ID.HasValue)
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", p_homeSlideshow_ID);
            }
            else
            {
                p_homeSlideshow_IDParameter = new ObjectParameter("p_homeSlideshow_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter hrefParameter;
            if (href != null)
            {
                hrefParameter = new ObjectParameter("href", href);
            }
            else
            {
                hrefParameter = new ObjectParameter("href", typeof(global::System.String));
            }
    
            ObjectParameter imageSrcParameter;
            if (imageSrc != null)
            {
                imageSrcParameter = new ObjectParameter("ImageSrc", imageSrc);
            }
            else
            {
                imageSrcParameter = new ObjectParameter("ImageSrc", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_homeSlideshow_UpdateHomeSlideshow", p_homeSlideshow_IDParameter, hrefParameter, imageSrcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="p_id">No Metadata Documentation available.</param>
        /// <param name="p_update_stream">No Metadata Documentation available.</param>
        public int sp_Members_UpdateMemberData(Nullable<global::System.Int32> p_id, global::System.String p_update_stream)
        {
            ObjectParameter p_idParameter;
            if (p_id.HasValue)
            {
                p_idParameter = new ObjectParameter("p_id", p_id);
            }
            else
            {
                p_idParameter = new ObjectParameter("p_id", typeof(global::System.Int32));
            }
    
            ObjectParameter p_update_streamParameter;
            if (p_update_stream != null)
            {
                p_update_streamParameter = new ObjectParameter("p_update_stream", p_update_stream);
            }
            else
            {
                p_update_streamParameter = new ObjectParameter("p_update_stream", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_Members_UpdateMemberData", p_idParameter, p_update_streamParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="ArtistCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ArtistCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ArtistCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ArtistCategory CreateArtistCategory(global::System.Int32 id, global::System.String name)
        {
            ArtistCategory artistCategory = new ArtistCategory();
            artistCategory.Id = id;
            artistCategory.Name = name;
            return artistCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isConfirmed
        {
            get
            {
                return _isConfirmed;
            }
            set
            {
                OnisConfirmedChanging(value);
                ReportPropertyChanging("isConfirmed");
                _isConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isConfirmed");
                OnisConfirmedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isConfirmed;
        partial void OnisConfirmedChanging(Nullable<global::System.Boolean> value);
        partial void OnisConfirmedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hypster_tv_Model", "FK_ArtistCategories_ArtistCategories", "ArtistCategory1")]
        public ArtistCategory ArtistCategories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArtistCategory>("hypster_tv_Model.FK_ArtistCategories_ArtistCategories", "ArtistCategory1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArtistCategory>("hypster_tv_Model.FK_ArtistCategories_ArtistCategories", "ArtistCategory1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ArtistCategory> ArtistCategories1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArtistCategory>("hypster_tv_Model.FK_ArtistCategories_ArtistCategories", "ArtistCategory1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ArtistCategory>("hypster_tv_Model.FK_ArtistCategories_ArtistCategories", "ArtistCategory1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hypster_tv_Model", "FK_ArtistCategories_ArtistCategories", "ArtistCategory")]
        public ArtistCategory ArtistCategory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArtistCategory>("hypster_tv_Model.FK_ArtistCategories_ArtistCategories", "ArtistCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArtistCategory>("hypster_tv_Model.FK_ArtistCategories_ArtistCategories", "ArtistCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ArtistCategory> ArtistCategory1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArtistCategory>("hypster_tv_Model.FK_ArtistCategories_ArtistCategories", "ArtistCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ArtistCategory>("hypster_tv_Model.FK_ArtistCategories_ArtistCategories", "ArtistCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Banner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Banner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Banner object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="countryCode">Initial value of the CountryCode property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        public static Banner CreateBanner(global::System.Int32 id, global::System.String size, global::System.String countryCode, global::System.String code, global::System.Boolean enabled)
        {
            Banner banner = new Banner();
            banner.Id = id;
            banner.Size = size;
            banner.CountryCode = countryCode;
            banner.Code = code;
            banner.Enabled = enabled;
            return banner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="BlockedTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlockedTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlockedTerm object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="artistTerm">Initial value of the ArtistTerm property.</param>
        /// <param name="titleTerm">Initial value of the TitleTerm property.</param>
        public static BlockedTerm CreateBlockedTerm(global::System.Int32 id, global::System.String artistTerm, global::System.String titleTerm)
        {
            BlockedTerm blockedTerm = new BlockedTerm();
            blockedTerm.Id = id;
            blockedTerm.ArtistTerm = artistTerm;
            blockedTerm.TitleTerm = titleTerm;
            return blockedTerm;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ArtistTerm
        {
            get
            {
                return _ArtistTerm;
            }
            set
            {
                OnArtistTermChanging(value);
                ReportPropertyChanging("ArtistTerm");
                _ArtistTerm = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ArtistTerm");
                OnArtistTermChanged();
            }
        }
        private global::System.String _ArtistTerm;
        partial void OnArtistTermChanging(global::System.String value);
        partial void OnArtistTermChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TitleTerm
        {
            get
            {
                return _TitleTerm;
            }
            set
            {
                OnTitleTermChanging(value);
                ReportPropertyChanging("TitleTerm");
                _TitleTerm = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TitleTerm");
                OnTitleTermChanged();
            }
        }
        private global::System.String _TitleTerm;
        partial void OnTitleTermChanging(global::System.String value);
        partial void OnTitleTermChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="CaptchaLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CaptchaLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CaptchaLog object.
        /// </summary>
        /// <param name="captchaLog_ID">Initial value of the CaptchaLog_ID property.</param>
        public static CaptchaLog CreateCaptchaLog(global::System.Int32 captchaLog_ID)
        {
            CaptchaLog captchaLog = new CaptchaLog();
            captchaLog.CaptchaLog_ID = captchaLog_ID;
            return captchaLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CaptchaLog_ID
        {
            get
            {
                return _CaptchaLog_ID;
            }
            set
            {
                if (_CaptchaLog_ID != value)
                {
                    OnCaptchaLog_IDChanging(value);
                    ReportPropertyChanging("CaptchaLog_ID");
                    _CaptchaLog_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CaptchaLog_ID");
                    OnCaptchaLog_IDChanged();
                }
            }
        }
        private global::System.Int32 _CaptchaLog_ID;
        partial void OnCaptchaLog_IDChanging(global::System.Int32 value);
        partial void OnCaptchaLog_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CaptchaIP
        {
            get
            {
                return _CaptchaIP;
            }
            set
            {
                OnCaptchaIPChanging(value);
                ReportPropertyChanging("CaptchaIP");
                _CaptchaIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CaptchaIP");
                OnCaptchaIPChanged();
            }
        }
        private global::System.String _CaptchaIP;
        partial void OnCaptchaIPChanging(global::System.String value);
        partial void OnCaptchaIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CatpchaDate
        {
            get
            {
                return _CatpchaDate;
            }
            set
            {
                OnCatpchaDateChanging(value);
                ReportPropertyChanging("CatpchaDate");
                _CatpchaDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CatpchaDate");
                OnCatpchaDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CatpchaDate;
        partial void OnCatpchaDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCatpchaDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CaptchaFrase
        {
            get
            {
                return _CaptchaFrase;
            }
            set
            {
                OnCaptchaFraseChanging(value);
                ReportPropertyChanging("CaptchaFrase");
                _CaptchaFrase = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CaptchaFrase");
                OnCaptchaFraseChanged();
            }
        }
        private global::System.String _CaptchaFrase;
        partial void OnCaptchaFraseChanging(global::System.String value);
        partial void OnCaptchaFraseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CaptchaResponse
        {
            get
            {
                return _CaptchaResponse;
            }
            set
            {
                OnCaptchaResponseChanging(value);
                ReportPropertyChanging("CaptchaResponse");
                _CaptchaResponse = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CaptchaResponse");
                OnCaptchaResponseChanged();
            }
        }
        private global::System.String _CaptchaResponse;
        partial void OnCaptchaResponseChanging(global::System.String value);
        partial void OnCaptchaResponseChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Chart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Chart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Chart object.
        /// </summary>
        /// <param name="chart_ID">Initial value of the Chart_ID property.</param>
        public static Chart CreateChart(global::System.Int32 chart_ID)
        {
            Chart chart = new Chart();
            chart.Chart_ID = chart_ID;
            return chart;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Chart_ID
        {
            get
            {
                return _Chart_ID;
            }
            set
            {
                if (_Chart_ID != value)
                {
                    OnChart_IDChanging(value);
                    ReportPropertyChanging("Chart_ID");
                    _Chart_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Chart_ID");
                    OnChart_IDChanged();
                }
            }
        }
        private global::System.Int32 _Chart_ID;
        partial void OnChart_IDChanging(global::System.Int32 value);
        partial void OnChart_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Chart_Category_ID
        {
            get
            {
                return _Chart_Category_ID;
            }
            set
            {
                OnChart_Category_IDChanging(value);
                ReportPropertyChanging("Chart_Category_ID");
                _Chart_Category_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Chart_Category_ID");
                OnChart_Category_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Chart_Category_ID;
        partial void OnChart_Category_IDChanging(Nullable<global::System.Int32> value);
        partial void OnChart_Category_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Chart_Name
        {
            get
            {
                return _Chart_Name;
            }
            set
            {
                OnChart_NameChanging(value);
                ReportPropertyChanging("Chart_Name");
                _Chart_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Chart_Name");
                OnChart_NameChanged();
            }
        }
        private global::System.String _Chart_Name;
        partial void OnChart_NameChanging(global::System.String value);
        partial void OnChart_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Chart_Desc
        {
            get
            {
                return _Chart_Desc;
            }
            set
            {
                OnChart_DescChanging(value);
                ReportPropertyChanging("Chart_Desc");
                _Chart_Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Chart_Desc");
                OnChart_DescChanged();
            }
        }
        private global::System.String _Chart_Desc;
        partial void OnChart_DescChanging(global::System.String value);
        partial void OnChart_DescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Chart_Date
        {
            get
            {
                return _Chart_Date;
            }
            set
            {
                OnChart_DateChanging(value);
                ReportPropertyChanging("Chart_Date");
                _Chart_Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Chart_Date");
                OnChart_DateChanged();
            }
        }
        private global::System.String _Chart_Date;
        partial void OnChart_DateChanging(global::System.String value);
        partial void OnChart_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Chart_User_ID
        {
            get
            {
                return _Chart_User_ID;
            }
            set
            {
                OnChart_User_IDChanging(value);
                ReportPropertyChanging("Chart_User_ID");
                _Chart_User_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Chart_User_ID");
                OnChart_User_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Chart_User_ID;
        partial void OnChart_User_IDChanging(Nullable<global::System.Int32> value);
        partial void OnChart_User_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Chart_Playlist_ID
        {
            get
            {
                return _Chart_Playlist_ID;
            }
            set
            {
                OnChart_Playlist_IDChanging(value);
                ReportPropertyChanging("Chart_Playlist_ID");
                _Chart_Playlist_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Chart_Playlist_ID");
                OnChart_Playlist_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Chart_Playlist_ID;
        partial void OnChart_Playlist_IDChanging(Nullable<global::System.Int32> value);
        partial void OnChart_Playlist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Chart_GUID
        {
            get
            {
                return _Chart_GUID;
            }
            set
            {
                OnChart_GUIDChanging(value);
                ReportPropertyChanging("Chart_GUID");
                _Chart_GUID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Chart_GUID");
                OnChart_GUIDChanged();
            }
        }
        private global::System.String _Chart_GUID;
        partial void OnChart_GUIDChanging(global::System.String value);
        partial void OnChart_GUIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="CoverContest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CoverContest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CoverContest object.
        /// </summary>
        /// <param name="coverContest_ID">Initial value of the CoverContest_ID property.</param>
        public static CoverContest CreateCoverContest(global::System.Int32 coverContest_ID)
        {
            CoverContest coverContest = new CoverContest();
            coverContest.CoverContest_ID = coverContest_ID;
            return coverContest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoverContest_ID
        {
            get
            {
                return _CoverContest_ID;
            }
            set
            {
                if (_CoverContest_ID != value)
                {
                    OnCoverContest_IDChanging(value);
                    ReportPropertyChanging("CoverContest_ID");
                    _CoverContest_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoverContest_ID");
                    OnCoverContest_IDChanged();
                }
            }
        }
        private global::System.Int32 _CoverContest_ID;
        partial void OnCoverContest_IDChanging(global::System.Int32 value);
        partial void OnCoverContest_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverContest_SongID
        {
            get
            {
                return _CoverContest_SongID;
            }
            set
            {
                OnCoverContest_SongIDChanging(value);
                ReportPropertyChanging("CoverContest_SongID");
                _CoverContest_SongID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverContest_SongID");
                OnCoverContest_SongIDChanged();
            }
        }
        private global::System.String _CoverContest_SongID;
        partial void OnCoverContest_SongIDChanging(global::System.String value);
        partial void OnCoverContest_SongIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverContest_Title
        {
            get
            {
                return _CoverContest_Title;
            }
            set
            {
                OnCoverContest_TitleChanging(value);
                ReportPropertyChanging("CoverContest_Title");
                _CoverContest_Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverContest_Title");
                OnCoverContest_TitleChanged();
            }
        }
        private global::System.String _CoverContest_Title;
        partial void OnCoverContest_TitleChanging(global::System.String value);
        partial void OnCoverContest_TitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CoverContest_DateAdded
        {
            get
            {
                return _CoverContest_DateAdded;
            }
            set
            {
                OnCoverContest_DateAddedChanging(value);
                ReportPropertyChanging("CoverContest_DateAdded");
                _CoverContest_DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverContest_DateAdded");
                OnCoverContest_DateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _CoverContest_DateAdded;
        partial void OnCoverContest_DateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnCoverContest_DateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CoverContest_NumVotes
        {
            get
            {
                return _CoverContest_NumVotes;
            }
            set
            {
                OnCoverContest_NumVotesChanging(value);
                ReportPropertyChanging("CoverContest_NumVotes");
                _CoverContest_NumVotes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverContest_NumVotes");
                OnCoverContest_NumVotesChanged();
            }
        }
        private Nullable<global::System.Int32> _CoverContest_NumVotes;
        partial void OnCoverContest_NumVotesChanging(Nullable<global::System.Int32> value);
        partial void OnCoverContest_NumVotesChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="CoverContestVote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CoverContestVote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CoverContestVote object.
        /// </summary>
        /// <param name="coverContestVote_ID">Initial value of the CoverContestVote_ID property.</param>
        public static CoverContestVote CreateCoverContestVote(global::System.Int32 coverContestVote_ID)
        {
            CoverContestVote coverContestVote = new CoverContestVote();
            coverContestVote.CoverContestVote_ID = coverContestVote_ID;
            return coverContestVote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoverContestVote_ID
        {
            get
            {
                return _CoverContestVote_ID;
            }
            set
            {
                if (_CoverContestVote_ID != value)
                {
                    OnCoverContestVote_IDChanging(value);
                    ReportPropertyChanging("CoverContestVote_ID");
                    _CoverContestVote_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoverContestVote_ID");
                    OnCoverContestVote_IDChanged();
                }
            }
        }
        private global::System.Int32 _CoverContestVote_ID;
        partial void OnCoverContestVote_IDChanging(global::System.Int32 value);
        partial void OnCoverContestVote_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverContestVote_IP
        {
            get
            {
                return _CoverContestVote_IP;
            }
            set
            {
                OnCoverContestVote_IPChanging(value);
                ReportPropertyChanging("CoverContestVote_IP");
                _CoverContestVote_IP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverContestVote_IP");
                OnCoverContestVote_IPChanged();
            }
        }
        private global::System.String _CoverContestVote_IP;
        partial void OnCoverContestVote_IPChanging(global::System.String value);
        partial void OnCoverContestVote_IPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CoverContestVote_DateAdded
        {
            get
            {
                return _CoverContestVote_DateAdded;
            }
            set
            {
                OnCoverContestVote_DateAddedChanging(value);
                ReportPropertyChanging("CoverContestVote_DateAdded");
                _CoverContestVote_DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverContestVote_DateAdded");
                OnCoverContestVote_DateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _CoverContestVote_DateAdded;
        partial void OnCoverContestVote_DateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnCoverContestVote_DateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CoverContestVote_Cover_ID
        {
            get
            {
                return _CoverContestVote_Cover_ID;
            }
            set
            {
                OnCoverContestVote_Cover_IDChanging(value);
                ReportPropertyChanging("CoverContestVote_Cover_ID");
                _CoverContestVote_Cover_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverContestVote_Cover_ID");
                OnCoverContestVote_Cover_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _CoverContestVote_Cover_ID;
        partial void OnCoverContestVote_Cover_IDChanging(Nullable<global::System.Int32> value);
        partial void OnCoverContestVote_Cover_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="DeActivated")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeActivated : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeActivated object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isDeActivated">Initial value of the IsDeActivated property.</param>
        public static DeActivated CreateDeActivated(global::System.Int32 userId, global::System.Int32 isDeActivated)
        {
            DeActivated deActivated = new DeActivated();
            deActivated.UserId = userId;
            deActivated.IsDeActivated = isDeActivated;
            return deActivated;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IsDeActivated
        {
            get
            {
                return _IsDeActivated;
            }
            set
            {
                if (_IsDeActivated != value)
                {
                    OnIsDeActivatedChanging(value);
                    ReportPropertyChanging("IsDeActivated");
                    _IsDeActivated = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsDeActivated");
                    OnIsDeActivatedChanged();
                }
            }
        }
        private global::System.Int32 _IsDeActivated;
        partial void OnIsDeActivatedChanging(global::System.Int32 value);
        partial void OnIsDeActivatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Dead_Link")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dead_Link : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dead_Link object.
        /// </summary>
        /// <param name="dead_Link_ID">Initial value of the Dead_Link_ID property.</param>
        public static Dead_Link CreateDead_Link(global::System.Int32 dead_Link_ID)
        {
            Dead_Link dead_Link = new Dead_Link();
            dead_Link.Dead_Link_ID = dead_Link_ID;
            return dead_Link;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Dead_Link_ID
        {
            get
            {
                return _Dead_Link_ID;
            }
            set
            {
                if (_Dead_Link_ID != value)
                {
                    OnDead_Link_IDChanging(value);
                    ReportPropertyChanging("Dead_Link_ID");
                    _Dead_Link_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Dead_Link_ID");
                    OnDead_Link_IDChanged();
                }
            }
        }
        private global::System.Int32 _Dead_Link_ID;
        partial void OnDead_Link_IDChanging(global::System.Int32 value);
        partial void OnDead_Link_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DL_Member_ID
        {
            get
            {
                return _DL_Member_ID;
            }
            set
            {
                OnDL_Member_IDChanging(value);
                ReportPropertyChanging("DL_Member_ID");
                _DL_Member_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DL_Member_ID");
                OnDL_Member_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _DL_Member_ID;
        partial void OnDL_Member_IDChanging(Nullable<global::System.Int32> value);
        partial void OnDL_Member_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DL_Song_Guid
        {
            get
            {
                return _DL_Song_Guid;
            }
            set
            {
                OnDL_Song_GuidChanging(value);
                ReportPropertyChanging("DL_Song_Guid");
                _DL_Song_Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DL_Song_Guid");
                OnDL_Song_GuidChanged();
            }
        }
        private global::System.String _DL_Song_Guid;
        partial void OnDL_Song_GuidChanging(global::System.String value);
        partial void OnDL_Song_GuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DL_Song_ID
        {
            get
            {
                return _DL_Song_ID;
            }
            set
            {
                OnDL_Song_IDChanging(value);
                ReportPropertyChanging("DL_Song_ID");
                _DL_Song_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DL_Song_ID");
                OnDL_Song_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _DL_Song_ID;
        partial void OnDL_Song_IDChanging(Nullable<global::System.Int32> value);
        partial void OnDL_Song_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DL_ErrorNum
        {
            get
            {
                return _DL_ErrorNum;
            }
            set
            {
                OnDL_ErrorNumChanging(value);
                ReportPropertyChanging("DL_ErrorNum");
                _DL_ErrorNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DL_ErrorNum");
                OnDL_ErrorNumChanged();
            }
        }
        private Nullable<global::System.Int32> _DL_ErrorNum;
        partial void OnDL_ErrorNumChanging(Nullable<global::System.Int32> value);
        partial void OnDL_ErrorNumChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="DynamicContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DynamicContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DynamicContent object.
        /// </summary>
        /// <param name="dynCont_ID">Initial value of the DynCont_ID property.</param>
        public static DynamicContent CreateDynamicContent(global::System.Int32 dynCont_ID)
        {
            DynamicContent dynamicContent = new DynamicContent();
            dynamicContent.DynCont_ID = dynCont_ID;
            return dynamicContent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DynCont_ID
        {
            get
            {
                return _DynCont_ID;
            }
            set
            {
                if (_DynCont_ID != value)
                {
                    OnDynCont_IDChanging(value);
                    ReportPropertyChanging("DynCont_ID");
                    _DynCont_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DynCont_ID");
                    OnDynCont_IDChanged();
                }
            }
        }
        private global::System.Int32 _DynCont_ID;
        partial void OnDynCont_IDChanging(global::System.Int32 value);
        partial void OnDynCont_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DynCont_PageType
        {
            get
            {
                return _DynCont_PageType;
            }
            set
            {
                OnDynCont_PageTypeChanging(value);
                ReportPropertyChanging("DynCont_PageType");
                _DynCont_PageType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DynCont_PageType");
                OnDynCont_PageTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DynCont_PageType;
        partial void OnDynCont_PageTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDynCont_PageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DynCont_Href
        {
            get
            {
                return _DynCont_Href;
            }
            set
            {
                OnDynCont_HrefChanging(value);
                ReportPropertyChanging("DynCont_Href");
                _DynCont_Href = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DynCont_Href");
                OnDynCont_HrefChanged();
            }
        }
        private global::System.String _DynCont_Href;
        partial void OnDynCont_HrefChanging(global::System.String value);
        partial void OnDynCont_HrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DynCont_isNewWindow
        {
            get
            {
                return _DynCont_isNewWindow;
            }
            set
            {
                OnDynCont_isNewWindowChanging(value);
                ReportPropertyChanging("DynCont_isNewWindow");
                _DynCont_isNewWindow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DynCont_isNewWindow");
                OnDynCont_isNewWindowChanged();
            }
        }
        private Nullable<global::System.Boolean> _DynCont_isNewWindow;
        partial void OnDynCont_isNewWindowChanging(Nullable<global::System.Boolean> value);
        partial void OnDynCont_isNewWindowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DynCont_BoxCont
        {
            get
            {
                return _DynCont_BoxCont;
            }
            set
            {
                OnDynCont_BoxContChanging(value);
                ReportPropertyChanging("DynCont_BoxCont");
                _DynCont_BoxCont = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DynCont_BoxCont");
                OnDynCont_BoxContChanged();
            }
        }
        private global::System.String _DynCont_BoxCont;
        partial void OnDynCont_BoxContChanging(global::System.String value);
        partial void OnDynCont_BoxContChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DynCont_ButtonText
        {
            get
            {
                return _DynCont_ButtonText;
            }
            set
            {
                OnDynCont_ButtonTextChanging(value);
                ReportPropertyChanging("DynCont_ButtonText");
                _DynCont_ButtonText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DynCont_ButtonText");
                OnDynCont_ButtonTextChanged();
            }
        }
        private global::System.String _DynCont_ButtonText;
        partial void OnDynCont_ButtonTextChanging(global::System.String value);
        partial void OnDynCont_ButtonTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DynCont_Name
        {
            get
            {
                return _DynCont_Name;
            }
            set
            {
                OnDynCont_NameChanging(value);
                ReportPropertyChanging("DynCont_Name");
                _DynCont_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DynCont_Name");
                OnDynCont_NameChanged();
            }
        }
        private global::System.String _DynCont_Name;
        partial void OnDynCont_NameChanging(global::System.String value);
        partial void OnDynCont_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DynCont_isNameVisible
        {
            get
            {
                return _DynCont_isNameVisible;
            }
            set
            {
                OnDynCont_isNameVisibleChanging(value);
                ReportPropertyChanging("DynCont_isNameVisible");
                _DynCont_isNameVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DynCont_isNameVisible");
                OnDynCont_isNameVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _DynCont_isNameVisible;
        partial void OnDynCont_isNameVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnDynCont_isNameVisibleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="FeaturedContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturedContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedContent object.
        /// </summary>
        /// <param name="fc_ID">Initial value of the fc_ID property.</param>
        public static FeaturedContent CreateFeaturedContent(global::System.Int32 fc_ID)
        {
            FeaturedContent featuredContent = new FeaturedContent();
            featuredContent.fc_ID = fc_ID;
            return featuredContent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fc_ID
        {
            get
            {
                return _fc_ID;
            }
            set
            {
                if (_fc_ID != value)
                {
                    Onfc_IDChanging(value);
                    ReportPropertyChanging("fc_ID");
                    _fc_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fc_ID");
                    Onfc_IDChanged();
                }
            }
        }
        private global::System.Int32 _fc_ID;
        partial void Onfc_IDChanging(global::System.Int32 value);
        partial void Onfc_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fc_href
        {
            get
            {
                return _fc_href;
            }
            set
            {
                Onfc_hrefChanging(value);
                ReportPropertyChanging("fc_href");
                _fc_href = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fc_href");
                Onfc_hrefChanged();
            }
        }
        private global::System.String _fc_href;
        partial void Onfc_hrefChanging(global::System.String value);
        partial void Onfc_hrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fc_name
        {
            get
            {
                return _fc_name;
            }
            set
            {
                Onfc_nameChanging(value);
                ReportPropertyChanging("fc_name");
                _fc_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fc_name");
                Onfc_nameChanged();
            }
        }
        private global::System.String _fc_name;
        partial void Onfc_nameChanging(global::System.String value);
        partial void Onfc_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fc_image
        {
            get
            {
                return _fc_image;
            }
            set
            {
                Onfc_imageChanging(value);
                ReportPropertyChanging("fc_image");
                _fc_image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fc_image");
                Onfc_imageChanged();
            }
        }
        private global::System.String _fc_image;
        partial void Onfc_imageChanging(global::System.String value);
        partial void Onfc_imageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fc_type
        {
            get
            {
                return _fc_type;
            }
            set
            {
                Onfc_typeChanging(value);
                ReportPropertyChanging("fc_type");
                _fc_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fc_type");
                Onfc_typeChanged();
            }
        }
        private Nullable<global::System.Int32> _fc_type;
        partial void Onfc_typeChanging(Nullable<global::System.Int32> value);
        partial void Onfc_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> fc_active
        {
            get
            {
                return _fc_active;
            }
            set
            {
                Onfc_activeChanging(value);
                ReportPropertyChanging("fc_active");
                _fc_active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fc_active");
                Onfc_activeChanged();
            }
        }
        private Nullable<global::System.Boolean> _fc_active;
        partial void Onfc_activeChanging(Nullable<global::System.Boolean> value);
        partial void Onfc_activeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fc_href_mobile
        {
            get
            {
                return _fc_href_mobile;
            }
            set
            {
                Onfc_href_mobileChanging(value);
                ReportPropertyChanging("fc_href_mobile");
                _fc_href_mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fc_href_mobile");
                Onfc_href_mobileChanged();
            }
        }
        private global::System.String _fc_href_mobile;
        partial void Onfc_href_mobileChanging(global::System.String value);
        partial void Onfc_href_mobileChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="FeaturedPlaylist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturedPlaylist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedPlaylist object.
        /// </summary>
        /// <param name="featuredPlaylist_ID">Initial value of the FeaturedPlaylist_ID property.</param>
        public static FeaturedPlaylist CreateFeaturedPlaylist(global::System.Int32 featuredPlaylist_ID)
        {
            FeaturedPlaylist featuredPlaylist = new FeaturedPlaylist();
            featuredPlaylist.FeaturedPlaylist_ID = featuredPlaylist_ID;
            return featuredPlaylist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeaturedPlaylist_ID
        {
            get
            {
                return _FeaturedPlaylist_ID;
            }
            set
            {
                if (_FeaturedPlaylist_ID != value)
                {
                    OnFeaturedPlaylist_IDChanging(value);
                    ReportPropertyChanging("FeaturedPlaylist_ID");
                    _FeaturedPlaylist_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FeaturedPlaylist_ID");
                    OnFeaturedPlaylist_IDChanged();
                }
            }
        }
        private global::System.Int32 _FeaturedPlaylist_ID;
        partial void OnFeaturedPlaylist_IDChanging(global::System.Int32 value);
        partial void OnFeaturedPlaylist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeaturedPlaylist_PlaylistID
        {
            get
            {
                return _FeaturedPlaylist_PlaylistID;
            }
            set
            {
                OnFeaturedPlaylist_PlaylistIDChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_PlaylistID");
                _FeaturedPlaylist_PlaylistID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedPlaylist_PlaylistID");
                OnFeaturedPlaylist_PlaylistIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FeaturedPlaylist_PlaylistID;
        partial void OnFeaturedPlaylist_PlaylistIDChanging(Nullable<global::System.Int32> value);
        partial void OnFeaturedPlaylist_PlaylistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeaturedPlaylist_UserID
        {
            get
            {
                return _FeaturedPlaylist_UserID;
            }
            set
            {
                OnFeaturedPlaylist_UserIDChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_UserID");
                _FeaturedPlaylist_UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedPlaylist_UserID");
                OnFeaturedPlaylist_UserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FeaturedPlaylist_UserID;
        partial void OnFeaturedPlaylist_UserIDChanging(Nullable<global::System.Int32> value);
        partial void OnFeaturedPlaylist_UserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeaturedPlaylist_PlaylistName
        {
            get
            {
                return _FeaturedPlaylist_PlaylistName;
            }
            set
            {
                OnFeaturedPlaylist_PlaylistNameChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_PlaylistName");
                _FeaturedPlaylist_PlaylistName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FeaturedPlaylist_PlaylistName");
                OnFeaturedPlaylist_PlaylistNameChanged();
            }
        }
        private global::System.String _FeaturedPlaylist_PlaylistName;
        partial void OnFeaturedPlaylist_PlaylistNameChanging(global::System.String value);
        partial void OnFeaturedPlaylist_PlaylistNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FeaturedPlaylist_CreateDate
        {
            get
            {
                return _FeaturedPlaylist_CreateDate;
            }
            set
            {
                OnFeaturedPlaylist_CreateDateChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_CreateDate");
                _FeaturedPlaylist_CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedPlaylist_CreateDate");
                OnFeaturedPlaylist_CreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FeaturedPlaylist_CreateDate;
        partial void OnFeaturedPlaylist_CreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFeaturedPlaylist_CreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeaturedPlaylist_Guid
        {
            get
            {
                return _FeaturedPlaylist_Guid;
            }
            set
            {
                OnFeaturedPlaylist_GuidChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_Guid");
                _FeaturedPlaylist_Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FeaturedPlaylist_Guid");
                OnFeaturedPlaylist_GuidChanged();
            }
        }
        private global::System.String _FeaturedPlaylist_Guid;
        partial void OnFeaturedPlaylist_GuidChanging(global::System.String value);
        partial void OnFeaturedPlaylist_GuidChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Festival")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Festival : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Festival object.
        /// </summary>
        /// <param name="festival_ID">Initial value of the Festival_ID property.</param>
        public static Festival CreateFestival(global::System.Int32 festival_ID)
        {
            Festival festival = new Festival();
            festival.Festival_ID = festival_ID;
            return festival;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Festival_ID
        {
            get
            {
                return _Festival_ID;
            }
            set
            {
                if (_Festival_ID != value)
                {
                    OnFestival_IDChanging(value);
                    ReportPropertyChanging("Festival_ID");
                    _Festival_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Festival_ID");
                    OnFestival_IDChanged();
                }
            }
        }
        private global::System.Int32 _Festival_ID;
        partial void OnFestival_IDChanging(global::System.Int32 value);
        partial void OnFestival_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Festival_Category_ID
        {
            get
            {
                return _Festival_Category_ID;
            }
            set
            {
                OnFestival_Category_IDChanging(value);
                ReportPropertyChanging("Festival_Category_ID");
                _Festival_Category_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Festival_Category_ID");
                OnFestival_Category_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Festival_Category_ID;
        partial void OnFestival_Category_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFestival_Category_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Festival_Name
        {
            get
            {
                return _Festival_Name;
            }
            set
            {
                OnFestival_NameChanging(value);
                ReportPropertyChanging("Festival_Name");
                _Festival_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Festival_Name");
                OnFestival_NameChanged();
            }
        }
        private global::System.String _Festival_Name;
        partial void OnFestival_NameChanging(global::System.String value);
        partial void OnFestival_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Festival_Desc
        {
            get
            {
                return _Festival_Desc;
            }
            set
            {
                OnFestival_DescChanging(value);
                ReportPropertyChanging("Festival_Desc");
                _Festival_Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Festival_Desc");
                OnFestival_DescChanged();
            }
        }
        private global::System.String _Festival_Desc;
        partial void OnFestival_DescChanging(global::System.String value);
        partial void OnFestival_DescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Festival_Date
        {
            get
            {
                return _Festival_Date;
            }
            set
            {
                OnFestival_DateChanging(value);
                ReportPropertyChanging("Festival_Date");
                _Festival_Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Festival_Date");
                OnFestival_DateChanged();
            }
        }
        private global::System.String _Festival_Date;
        partial void OnFestival_DateChanging(global::System.String value);
        partial void OnFestival_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Festival_User_ID
        {
            get
            {
                return _Festival_User_ID;
            }
            set
            {
                OnFestival_User_IDChanging(value);
                ReportPropertyChanging("Festival_User_ID");
                _Festival_User_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Festival_User_ID");
                OnFestival_User_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Festival_User_ID;
        partial void OnFestival_User_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFestival_User_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Festival_Playlist_ID
        {
            get
            {
                return _Festival_Playlist_ID;
            }
            set
            {
                OnFestival_Playlist_IDChanging(value);
                ReportPropertyChanging("Festival_Playlist_ID");
                _Festival_Playlist_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Festival_Playlist_ID");
                OnFestival_Playlist_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Festival_Playlist_ID;
        partial void OnFestival_Playlist_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFestival_Playlist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Festival_GUID
        {
            get
            {
                return _Festival_GUID;
            }
            set
            {
                OnFestival_GUIDChanging(value);
                ReportPropertyChanging("Festival_GUID");
                _Festival_GUID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Festival_GUID");
                OnFestival_GUIDChanged();
            }
        }
        private global::System.String _Festival_GUID;
        partial void OnFestival_GUIDChanging(global::System.String value);
        partial void OnFestival_GUIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Follower")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Follower : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Follower object.
        /// </summary>
        /// <param name="usFol_ID">Initial value of the UsFol_ID property.</param>
        public static Follower CreateFollower(global::System.Int32 usFol_ID)
        {
            Follower follower = new Follower();
            follower.UsFol_ID = usFol_ID;
            return follower;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsFol_ID
        {
            get
            {
                return _UsFol_ID;
            }
            set
            {
                if (_UsFol_ID != value)
                {
                    OnUsFol_IDChanging(value);
                    ReportPropertyChanging("UsFol_ID");
                    _UsFol_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UsFol_ID");
                    OnUsFol_IDChanged();
                }
            }
        }
        private global::System.Int32 _UsFol_ID;
        partial void OnUsFol_IDChanging(global::System.Int32 value);
        partial void OnUsFol_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> User_ID
        {
            get
            {
                return _User_ID;
            }
            set
            {
                OnUser_IDChanging(value);
                ReportPropertyChanging("User_ID");
                _User_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_ID");
                OnUser_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _User_ID;
        partial void OnUser_IDChanging(Nullable<global::System.Int32> value);
        partial void OnUser_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Follower_ID
        {
            get
            {
                return _Follower_ID;
            }
            set
            {
                OnFollower_IDChanging(value);
                ReportPropertyChanging("Follower_ID");
                _Follower_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Follower_ID");
                OnFollower_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Follower_ID;
        partial void OnFollower_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFollower_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="homeSlideshow")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class homeSlideshow : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new homeSlideshow object.
        /// </summary>
        /// <param name="homeSlideshow_ID">Initial value of the homeSlideshow_ID property.</param>
        public static homeSlideshow CreatehomeSlideshow(global::System.Int32 homeSlideshow_ID)
        {
            homeSlideshow homeSlideshow = new homeSlideshow();
            homeSlideshow.homeSlideshow_ID = homeSlideshow_ID;
            return homeSlideshow;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 homeSlideshow_ID
        {
            get
            {
                return _homeSlideshow_ID;
            }
            set
            {
                if (_homeSlideshow_ID != value)
                {
                    OnhomeSlideshow_IDChanging(value);
                    ReportPropertyChanging("homeSlideshow_ID");
                    _homeSlideshow_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("homeSlideshow_ID");
                    OnhomeSlideshow_IDChanged();
                }
            }
        }
        private global::System.Int32 _homeSlideshow_ID;
        partial void OnhomeSlideshow_IDChanging(global::System.Int32 value);
        partial void OnhomeSlideshow_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String href
        {
            get
            {
                return _href;
            }
            set
            {
                OnhrefChanging(value);
                ReportPropertyChanging("href");
                _href = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("href");
                OnhrefChanged();
            }
        }
        private global::System.String _href;
        partial void OnhrefChanging(global::System.String value);
        partial void OnhrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageSrc
        {
            get
            {
                return _ImageSrc;
            }
            set
            {
                OnImageSrcChanging(value);
                ReportPropertyChanging("ImageSrc");
                _ImageSrc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageSrc");
                OnImageSrcChanged();
            }
        }
        private global::System.String _ImageSrc;
        partial void OnImageSrcChanging(global::System.String value);
        partial void OnImageSrcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActive;
        partial void OnisActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnisActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isFeatured
        {
            get
            {
                return _isFeatured;
            }
            set
            {
                OnisFeaturedChanging(value);
                ReportPropertyChanging("isFeatured");
                _isFeatured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isFeatured");
                OnisFeaturedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isFeatured;
        partial void OnisFeaturedChanging(Nullable<global::System.Boolean> value);
        partial void OnisFeaturedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="HypException")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HypException : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HypException object.
        /// </summary>
        /// <param name="exception_ID">Initial value of the Exception_ID property.</param>
        public static HypException CreateHypException(global::System.Int32 exception_ID)
        {
            HypException hypException = new HypException();
            hypException.Exception_ID = exception_ID;
            return hypException;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Exception_ID
        {
            get
            {
                return _Exception_ID;
            }
            set
            {
                if (_Exception_ID != value)
                {
                    OnException_IDChanging(value);
                    ReportPropertyChanging("Exception_ID");
                    _Exception_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Exception_ID");
                    OnException_IDChanged();
                }
            }
        }
        private global::System.Int32 _Exception_ID;
        partial void OnException_IDChanging(global::System.Int32 value);
        partial void OnException_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExcDate
        {
            get
            {
                return _ExcDate;
            }
            set
            {
                OnExcDateChanging(value);
                ReportPropertyChanging("ExcDate");
                _ExcDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExcDate");
                OnExcDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExcDate;
        partial void OnExcDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExcDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExcMethod
        {
            get
            {
                return _ExcMethod;
            }
            set
            {
                OnExcMethodChanging(value);
                ReportPropertyChanging("ExcMethod");
                _ExcMethod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExcMethod");
                OnExcMethodChanged();
            }
        }
        private global::System.String _ExcMethod;
        partial void OnExcMethodChanging(global::System.String value);
        partial void OnExcMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExcMessage
        {
            get
            {
                return _ExcMessage;
            }
            set
            {
                OnExcMessageChanging(value);
                ReportPropertyChanging("ExcMessage");
                _ExcMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExcMessage");
                OnExcMessageChanged();
            }
        }
        private global::System.String _ExcMessage;
        partial void OnExcMessageChanging(global::System.String value);
        partial void OnExcMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExcIP
        {
            get
            {
                return _ExcIP;
            }
            set
            {
                OnExcIPChanging(value);
                ReportPropertyChanging("ExcIP");
                _ExcIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExcIP");
                OnExcIPChanged();
            }
        }
        private global::System.String _ExcIP;
        partial void OnExcIPChanging(global::System.String value);
        partial void OnExcIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExcUrl
        {
            get
            {
                return _ExcUrl;
            }
            set
            {
                OnExcUrlChanging(value);
                ReportPropertyChanging("ExcUrl");
                _ExcUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExcUrl");
                OnExcUrlChanged();
            }
        }
        private global::System.String _ExcUrl;
        partial void OnExcUrlChanging(global::System.String value);
        partial void OnExcUrlChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="ListenHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListenHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListenHistory object.
        /// </summary>
        /// <param name="listenHistory_ID">Initial value of the ListenHistory_ID property.</param>
        public static ListenHistory CreateListenHistory(global::System.Int32 listenHistory_ID)
        {
            ListenHistory listenHistory = new ListenHistory();
            listenHistory.ListenHistory_ID = listenHistory_ID;
            return listenHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListenHistory_ID
        {
            get
            {
                return _ListenHistory_ID;
            }
            set
            {
                if (_ListenHistory_ID != value)
                {
                    OnListenHistory_IDChanging(value);
                    ReportPropertyChanging("ListenHistory_ID");
                    _ListenHistory_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListenHistory_ID");
                    OnListenHistory_IDChanged();
                }
            }
        }
        private global::System.Int32 _ListenHistory_ID;
        partial void OnListenHistory_IDChanging(global::System.Int32 value);
        partial void OnListenHistory_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ListenHistory_GUID
        {
            get
            {
                return _ListenHistory_GUID;
            }
            set
            {
                OnListenHistory_GUIDChanging(value);
                ReportPropertyChanging("ListenHistory_GUID");
                _ListenHistory_GUID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ListenHistory_GUID");
                OnListenHistory_GUIDChanged();
            }
        }
        private global::System.String _ListenHistory_GUID;
        partial void OnListenHistory_GUIDChanging(global::System.String value);
        partial void OnListenHistory_GUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ListenHistory_UserID
        {
            get
            {
                return _ListenHistory_UserID;
            }
            set
            {
                OnListenHistory_UserIDChanging(value);
                ReportPropertyChanging("ListenHistory_UserID");
                _ListenHistory_UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListenHistory_UserID");
                OnListenHistory_UserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ListenHistory_UserID;
        partial void OnListenHistory_UserIDChanging(Nullable<global::System.Int32> value);
        partial void OnListenHistory_UserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ListenHistory_URL
        {
            get
            {
                return _ListenHistory_URL;
            }
            set
            {
                OnListenHistory_URLChanging(value);
                ReportPropertyChanging("ListenHistory_URL");
                _ListenHistory_URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ListenHistory_URL");
                OnListenHistory_URLChanged();
            }
        }
        private global::System.String _ListenHistory_URL;
        partial void OnListenHistory_URLChanging(global::System.String value);
        partial void OnListenHistory_URLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ListenHistory_Title
        {
            get
            {
                return _ListenHistory_Title;
            }
            set
            {
                OnListenHistory_TitleChanging(value);
                ReportPropertyChanging("ListenHistory_Title");
                _ListenHistory_Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ListenHistory_Title");
                OnListenHistory_TitleChanged();
            }
        }
        private global::System.String _ListenHistory_Title;
        partial void OnListenHistory_TitleChanging(global::System.String value);
        partial void OnListenHistory_TitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ListenHistory_Date
        {
            get
            {
                return _ListenHistory_Date;
            }
            set
            {
                OnListenHistory_DateChanging(value);
                ReportPropertyChanging("ListenHistory_Date");
                _ListenHistory_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListenHistory_Date");
                OnListenHistory_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ListenHistory_Date;
        partial void OnListenHistory_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnListenHistory_DateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Manual")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manual : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manual object.
        /// </summary>
        /// <param name="manual_ID">Initial value of the Manual_ID property.</param>
        public static Manual CreateManual(global::System.Int32 manual_ID)
        {
            Manual manual = new Manual();
            manual.Manual_ID = manual_ID;
            return manual;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Manual_ID
        {
            get
            {
                return _Manual_ID;
            }
            set
            {
                if (_Manual_ID != value)
                {
                    OnManual_IDChanging(value);
                    ReportPropertyChanging("Manual_ID");
                    _Manual_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Manual_ID");
                    OnManual_IDChanged();
                }
            }
        }
        private global::System.Int32 _Manual_ID;
        partial void OnManual_IDChanging(global::System.Int32 value);
        partial void OnManual_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manual_Header
        {
            get
            {
                return _Manual_Header;
            }
            set
            {
                OnManual_HeaderChanging(value);
                ReportPropertyChanging("Manual_Header");
                _Manual_Header = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manual_Header");
                OnManual_HeaderChanged();
            }
        }
        private global::System.String _Manual_Header;
        partial void OnManual_HeaderChanging(global::System.String value);
        partial void OnManual_HeaderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manual_Guid
        {
            get
            {
                return _Manual_Guid;
            }
            set
            {
                OnManual_GuidChanging(value);
                ReportPropertyChanging("Manual_Guid");
                _Manual_Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manual_Guid");
                OnManual_GuidChanged();
            }
        }
        private global::System.String _Manual_Guid;
        partial void OnManual_GuidChanging(global::System.String value);
        partial void OnManual_GuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Manual_Date
        {
            get
            {
                return _Manual_Date;
            }
            set
            {
                OnManual_DateChanging(value);
                ReportPropertyChanging("Manual_Date");
                _Manual_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Manual_Date");
                OnManual_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Manual_Date;
        partial void OnManual_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnManual_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Manual_Active
        {
            get
            {
                return _Manual_Active;
            }
            set
            {
                OnManual_ActiveChanging(value);
                ReportPropertyChanging("Manual_Active");
                _Manual_Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Manual_Active");
                OnManual_ActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _Manual_Active;
        partial void OnManual_ActiveChanging(Nullable<global::System.Int32> value);
        partial void OnManual_ActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Manual_Slide")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manual_Slide : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manual_Slide object.
        /// </summary>
        /// <param name="manual_Slide_ID">Initial value of the Manual_Slide_ID property.</param>
        public static Manual_Slide CreateManual_Slide(global::System.Int32 manual_Slide_ID)
        {
            Manual_Slide manual_Slide = new Manual_Slide();
            manual_Slide.Manual_Slide_ID = manual_Slide_ID;
            return manual_Slide;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Manual_Slide_ID
        {
            get
            {
                return _Manual_Slide_ID;
            }
            set
            {
                if (_Manual_Slide_ID != value)
                {
                    OnManual_Slide_IDChanging(value);
                    ReportPropertyChanging("Manual_Slide_ID");
                    _Manual_Slide_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Manual_Slide_ID");
                    OnManual_Slide_IDChanged();
                }
            }
        }
        private global::System.Int32 _Manual_Slide_ID;
        partial void OnManual_Slide_IDChanging(global::System.Int32 value);
        partial void OnManual_Slide_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Manual_Slide_Manual_ID
        {
            get
            {
                return _Manual_Slide_Manual_ID;
            }
            set
            {
                OnManual_Slide_Manual_IDChanging(value);
                ReportPropertyChanging("Manual_Slide_Manual_ID");
                _Manual_Slide_Manual_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Manual_Slide_Manual_ID");
                OnManual_Slide_Manual_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Manual_Slide_Manual_ID;
        partial void OnManual_Slide_Manual_IDChanging(Nullable<global::System.Int32> value);
        partial void OnManual_Slide_Manual_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manual_Slide_Header
        {
            get
            {
                return _Manual_Slide_Header;
            }
            set
            {
                OnManual_Slide_HeaderChanging(value);
                ReportPropertyChanging("Manual_Slide_Header");
                _Manual_Slide_Header = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manual_Slide_Header");
                OnManual_Slide_HeaderChanged();
            }
        }
        private global::System.String _Manual_Slide_Header;
        partial void OnManual_Slide_HeaderChanging(global::System.String value);
        partial void OnManual_Slide_HeaderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manual_Slide_Image
        {
            get
            {
                return _Manual_Slide_Image;
            }
            set
            {
                OnManual_Slide_ImageChanging(value);
                ReportPropertyChanging("Manual_Slide_Image");
                _Manual_Slide_Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manual_Slide_Image");
                OnManual_Slide_ImageChanged();
            }
        }
        private global::System.String _Manual_Slide_Image;
        partial void OnManual_Slide_ImageChanging(global::System.String value);
        partial void OnManual_Slide_ImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Manual_Slide_Date
        {
            get
            {
                return _Manual_Slide_Date;
            }
            set
            {
                OnManual_Slide_DateChanging(value);
                ReportPropertyChanging("Manual_Slide_Date");
                _Manual_Slide_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Manual_Slide_Date");
                OnManual_Slide_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Manual_Slide_Date;
        partial void OnManual_Slide_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnManual_Slide_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Manual_Slide_Active
        {
            get
            {
                return _Manual_Slide_Active;
            }
            set
            {
                OnManual_Slide_ActiveChanging(value);
                ReportPropertyChanging("Manual_Slide_Active");
                _Manual_Slide_Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Manual_Slide_Active");
                OnManual_Slide_ActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _Manual_Slide_Active;
        partial void OnManual_Slide_ActiveChanging(Nullable<global::System.Int32> value);
        partial void OnManual_Slide_ActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Manual_Slide_SortOrder
        {
            get
            {
                return _Manual_Slide_SortOrder;
            }
            set
            {
                OnManual_Slide_SortOrderChanging(value);
                ReportPropertyChanging("Manual_Slide_SortOrder");
                _Manual_Slide_SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Manual_Slide_SortOrder");
                OnManual_Slide_SortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _Manual_Slide_SortOrder;
        partial void OnManual_Slide_SortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnManual_Slide_SortOrderChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="regdate">Initial value of the regdate property.</param>
        /// <param name="trackcount">Initial value of the trackcount property.</param>
        /// <param name="israndomplay">Initial value of the israndomplay property.</param>
        /// <param name="active_playlist">Initial value of the active_playlist property.</param>
        /// <param name="profile_pic_id">Initial value of the profile_pic_id property.</param>
        /// <param name="is_new_artist">Initial value of the is_new_artist property.</param>
        /// <param name="autoplay">Initial value of the autoplay property.</param>
        /// <param name="email_confirmed">Initial value of the email_confirmed property.</param>
        /// <param name="email_optout">Initial value of the email_optout property.</param>
        /// <param name="widget_views">Initial value of the widget_views property.</param>
        /// <param name="coregProcessed">Initial value of the CoregProcessed property.</param>
        /// <param name="isSuspended">Initial value of the IsSuspended property.</param>
        /// <param name="autoshareEnabled">Initial value of the AutoshareEnabled property.</param>
        /// <param name="isOverEighteen">Initial value of the IsOverEighteen property.</param>
        /// <param name="adminLevel">Initial value of the adminLevel property.</param>
        public static Member CreateMember(global::System.Int32 id, global::System.String username, global::System.String password, global::System.String email, global::System.DateTime regdate, global::System.Int16 trackcount, global::System.Byte israndomplay, global::System.Int32 active_playlist, global::System.Int32 profile_pic_id, global::System.Byte is_new_artist, global::System.Byte autoplay, global::System.Byte email_confirmed, global::System.Byte email_optout, global::System.Int32 widget_views, global::System.Boolean coregProcessed, global::System.Boolean isSuspended, global::System.Boolean autoshareEnabled, global::System.Boolean isOverEighteen, global::System.Int32 adminLevel)
        {
            Member member = new Member();
            member.id = id;
            member.username = username;
            member.password = password;
            member.email = email;
            member.regdate = regdate;
            member.trackcount = trackcount;
            member.israndomplay = israndomplay;
            member.active_playlist = active_playlist;
            member.profile_pic_id = profile_pic_id;
            member.is_new_artist = is_new_artist;
            member.autoplay = autoplay;
            member.email_confirmed = email_confirmed;
            member.email_optout = email_optout;
            member.widget_views = widget_views;
            member.CoregProcessed = coregProcessed;
            member.IsSuspended = isSuspended;
            member.AutoshareEnabled = autoshareEnabled;
            member.IsOverEighteen = isOverEighteen;
            member.adminLevel = adminLevel;
            return member;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> sex
        {
            get
            {
                return _sex;
            }
            set
            {
                OnsexChanging(value);
                ReportPropertyChanging("sex");
                _sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sex");
                OnsexChanged();
            }
        }
        private Nullable<global::System.Byte> _sex;
        partial void OnsexChanging(Nullable<global::System.Byte> value);
        partial void OnsexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String zipcode
        {
            get
            {
                return _zipcode;
            }
            set
            {
                OnzipcodeChanging(value);
                ReportPropertyChanging("zipcode");
                _zipcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("zipcode");
                OnzipcodeChanged();
            }
        }
        private global::System.String _zipcode;
        partial void OnzipcodeChanging(global::System.String value);
        partial void OnzipcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> birth
        {
            get
            {
                return _birth;
            }
            set
            {
                OnbirthChanging(value);
                ReportPropertyChanging("birth");
                _birth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("birth");
                OnbirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _birth;
        partial void OnbirthChanging(Nullable<global::System.DateTime> value);
        partial void OnbirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String introduce
        {
            get
            {
                return _introduce;
            }
            set
            {
                OnintroduceChanging(value);
                ReportPropertyChanging("introduce");
                _introduce = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("introduce");
                OnintroduceChanged();
            }
        }
        private global::System.String _introduce;
        partial void OnintroduceChanging(global::System.String value);
        partial void OnintroduceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime regdate
        {
            get
            {
                return _regdate;
            }
            set
            {
                OnregdateChanging(value);
                ReportPropertyChanging("regdate");
                _regdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("regdate");
                OnregdateChanged();
            }
        }
        private global::System.DateTime _regdate;
        partial void OnregdateChanging(global::System.DateTime value);
        partial void OnregdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 trackcount
        {
            get
            {
                return _trackcount;
            }
            set
            {
                OntrackcountChanging(value);
                ReportPropertyChanging("trackcount");
                _trackcount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("trackcount");
                OntrackcountChanged();
            }
        }
        private global::System.Int16 _trackcount;
        partial void OntrackcountChanging(global::System.Int16 value);
        partial void OntrackcountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte israndomplay
        {
            get
            {
                return _israndomplay;
            }
            set
            {
                OnisrandomplayChanging(value);
                ReportPropertyChanging("israndomplay");
                _israndomplay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("israndomplay");
                OnisrandomplayChanged();
            }
        }
        private global::System.Byte _israndomplay;
        partial void OnisrandomplayChanging(global::System.Byte value);
        partial void OnisrandomplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 active_playlist
        {
            get
            {
                return _active_playlist;
            }
            set
            {
                Onactive_playlistChanging(value);
                ReportPropertyChanging("active_playlist");
                _active_playlist = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active_playlist");
                Onactive_playlistChanged();
            }
        }
        private global::System.Int32 _active_playlist;
        partial void Onactive_playlistChanging(global::System.Int32 value);
        partial void Onactive_playlistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 profile_pic_id
        {
            get
            {
                return _profile_pic_id;
            }
            set
            {
                Onprofile_pic_idChanging(value);
                ReportPropertyChanging("profile_pic_id");
                _profile_pic_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("profile_pic_id");
                Onprofile_pic_idChanged();
            }
        }
        private global::System.Int32 _profile_pic_id;
        partial void Onprofile_pic_idChanging(global::System.Int32 value);
        partial void Onprofile_pic_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte is_new_artist
        {
            get
            {
                return _is_new_artist;
            }
            set
            {
                Onis_new_artistChanging(value);
                ReportPropertyChanging("is_new_artist");
                _is_new_artist = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_new_artist");
                Onis_new_artistChanged();
            }
        }
        private global::System.Byte _is_new_artist;
        partial void Onis_new_artistChanging(global::System.Byte value);
        partial void Onis_new_artistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte autoplay
        {
            get
            {
                return _autoplay;
            }
            set
            {
                OnautoplayChanging(value);
                ReportPropertyChanging("autoplay");
                _autoplay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("autoplay");
                OnautoplayChanged();
            }
        }
        private global::System.Byte _autoplay;
        partial void OnautoplayChanging(global::System.Byte value);
        partial void OnautoplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte email_confirmed
        {
            get
            {
                return _email_confirmed;
            }
            set
            {
                Onemail_confirmedChanging(value);
                ReportPropertyChanging("email_confirmed");
                _email_confirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("email_confirmed");
                Onemail_confirmedChanged();
            }
        }
        private global::System.Byte _email_confirmed;
        partial void Onemail_confirmedChanging(global::System.Byte value);
        partial void Onemail_confirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte email_optout
        {
            get
            {
                return _email_optout;
            }
            set
            {
                Onemail_optoutChanging(value);
                ReportPropertyChanging("email_optout");
                _email_optout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("email_optout");
                Onemail_optoutChanged();
            }
        }
        private global::System.Byte _email_optout;
        partial void Onemail_optoutChanging(global::System.Byte value);
        partial void Onemail_optoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 widget_views
        {
            get
            {
                return _widget_views;
            }
            set
            {
                Onwidget_viewsChanging(value);
                ReportPropertyChanging("widget_views");
                _widget_views = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("widget_views");
                Onwidget_viewsChanged();
            }
        }
        private global::System.Int32 _widget_views;
        partial void Onwidget_viewsChanging(global::System.Int32 value);
        partial void Onwidget_viewsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegistrationIp
        {
            get
            {
                return _RegistrationIp;
            }
            set
            {
                OnRegistrationIpChanging(value);
                ReportPropertyChanging("RegistrationIp");
                _RegistrationIp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegistrationIp");
                OnRegistrationIpChanged();
            }
        }
        private global::System.String _RegistrationIp;
        partial void OnRegistrationIpChanging(global::System.String value);
        partial void OnRegistrationIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastActivityDate;
        partial void OnLastActivityDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastActivityIp
        {
            get
            {
                return _LastActivityIp;
            }
            set
            {
                OnLastActivityIpChanging(value);
                ReportPropertyChanging("LastActivityIp");
                _LastActivityIp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastActivityIp");
                OnLastActivityIpChanged();
            }
        }
        private global::System.String _LastActivityIp;
        partial void OnLastActivityIpChanging(global::System.String value);
        partial void OnLastActivityIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CoregProcessed
        {
            get
            {
                return _CoregProcessed;
            }
            set
            {
                OnCoregProcessedChanging(value);
                ReportPropertyChanging("CoregProcessed");
                _CoregProcessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoregProcessed");
                OnCoregProcessedChanged();
            }
        }
        private global::System.Boolean _CoregProcessed;
        partial void OnCoregProcessedChanging(global::System.Boolean value);
        partial void OnCoregProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OptOutDate
        {
            get
            {
                return _OptOutDate;
            }
            set
            {
                OnOptOutDateChanging(value);
                ReportPropertyChanging("OptOutDate");
                _OptOutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptOutDate");
                OnOptOutDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OptOutDate;
        partial void OnOptOutDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOptOutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSuspended
        {
            get
            {
                return _IsSuspended;
            }
            set
            {
                OnIsSuspendedChanging(value);
                ReportPropertyChanging("IsSuspended");
                _IsSuspended = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSuspended");
                OnIsSuspendedChanged();
            }
        }
        private global::System.Boolean _IsSuspended;
        partial void OnIsSuspendedChanging(global::System.Boolean value);
        partial void OnIsSuspendedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AutoshareEnabled
        {
            get
            {
                return _AutoshareEnabled;
            }
            set
            {
                OnAutoshareEnabledChanging(value);
                ReportPropertyChanging("AutoshareEnabled");
                _AutoshareEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoshareEnabled");
                OnAutoshareEnabledChanged();
            }
        }
        private global::System.Boolean _AutoshareEnabled;
        partial void OnAutoshareEnabledChanging(global::System.Boolean value);
        partial void OnAutoshareEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ArtistLevel
        {
            get
            {
                return _ArtistLevel;
            }
            set
            {
                OnArtistLevelChanging(value);
                ReportPropertyChanging("ArtistLevel");
                _ArtistLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArtistLevel");
                OnArtistLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _ArtistLevel;
        partial void OnArtistLevelChanging(Nullable<global::System.Int32> value);
        partial void OnArtistLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOverEighteen
        {
            get
            {
                return _IsOverEighteen;
            }
            set
            {
                OnIsOverEighteenChanging(value);
                ReportPropertyChanging("IsOverEighteen");
                _IsOverEighteen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOverEighteen");
                OnIsOverEighteenChanged();
            }
        }
        private global::System.Boolean _IsOverEighteen;
        partial void OnIsOverEighteenChanging(global::System.Boolean value);
        partial void OnIsOverEighteenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_interest
        {
            get
            {
                return _user_interest;
            }
            set
            {
                Onuser_interestChanging(value);
                ReportPropertyChanging("user_interest");
                _user_interest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_interest");
                Onuser_interestChanged();
            }
        }
        private Nullable<global::System.Int32> _user_interest;
        partial void Onuser_interestChanging(Nullable<global::System.Int32> value);
        partial void Onuser_interestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> eCampD
        {
            get
            {
                return _eCampD;
            }
            set
            {
                OneCampDChanging(value);
                ReportPropertyChanging("eCampD");
                _eCampD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("eCampD");
                OneCampDChanged();
            }
        }
        private Nullable<global::System.Int32> _eCampD;
        partial void OneCampDChanging(Nullable<global::System.Int32> value);
        partial void OneCampDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 adminLevel
        {
            get
            {
                return _adminLevel;
            }
            set
            {
                OnadminLevelChanging(value);
                ReportPropertyChanging("adminLevel");
                _adminLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("adminLevel");
                OnadminLevelChanged();
            }
        }
        private global::System.Int32 _adminLevel;
        partial void OnadminLevelChanging(global::System.Int32 value);
        partial void OnadminLevelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hypster_tv_Model", "FK_pl_photos_pl_member", "Photo")]
        public EntityCollection<Photo> Photos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("hypster_tv_Model.FK_pl_photos_pl_member", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("hypster_tv_Model.FK_pl_photos_pl_member", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hypster_tv_Model", "FK_pl_playlists_pl_member", "Playlist")]
        public EntityCollection<Playlist> Playlists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Playlist>("hypster_tv_Model.FK_pl_playlists_pl_member", "Playlist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Playlist>("hypster_tv_Model.FK_pl_playlists_pl_member", "Playlist", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="MemberMusicGenre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MemberMusicGenre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MemberMusicGenre object.
        /// </summary>
        /// <param name="memberMusicGenre_ID">Initial value of the MemberMusicGenre_ID property.</param>
        public static MemberMusicGenre CreateMemberMusicGenre(global::System.Int32 memberMusicGenre_ID)
        {
            MemberMusicGenre memberMusicGenre = new MemberMusicGenre();
            memberMusicGenre.MemberMusicGenre_ID = memberMusicGenre_ID;
            return memberMusicGenre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberMusicGenre_ID
        {
            get
            {
                return _MemberMusicGenre_ID;
            }
            set
            {
                if (_MemberMusicGenre_ID != value)
                {
                    OnMemberMusicGenre_IDChanging(value);
                    ReportPropertyChanging("MemberMusicGenre_ID");
                    _MemberMusicGenre_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberMusicGenre_ID");
                    OnMemberMusicGenre_IDChanged();
                }
            }
        }
        private global::System.Int32 _MemberMusicGenre_ID;
        partial void OnMemberMusicGenre_IDChanging(global::System.Int32 value);
        partial void OnMemberMusicGenre_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Member_ID
        {
            get
            {
                return _Member_ID;
            }
            set
            {
                OnMember_IDChanging(value);
                ReportPropertyChanging("Member_ID");
                _Member_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Member_ID");
                OnMember_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Member_ID;
        partial void OnMember_IDChanging(Nullable<global::System.Int32> value);
        partial void OnMember_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MusicGenre_ID
        {
            get
            {
                return _MusicGenre_ID;
            }
            set
            {
                OnMusicGenre_IDChanging(value);
                ReportPropertyChanging("MusicGenre_ID");
                _MusicGenre_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MusicGenre_ID");
                OnMusicGenre_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _MusicGenre_ID;
        partial void OnMusicGenre_IDChanging(Nullable<global::System.Int32> value);
        partial void OnMusicGenre_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="MemberPublicPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MemberPublicPage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MemberPublicPage object.
        /// </summary>
        /// <param name="publicPage_ID">Initial value of the PublicPage_ID property.</param>
        public static MemberPublicPage CreateMemberPublicPage(global::System.Int32 publicPage_ID)
        {
            MemberPublicPage memberPublicPage = new MemberPublicPage();
            memberPublicPage.PublicPage_ID = publicPage_ID;
            return memberPublicPage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PublicPage_ID
        {
            get
            {
                return _PublicPage_ID;
            }
            set
            {
                if (_PublicPage_ID != value)
                {
                    OnPublicPage_IDChanging(value);
                    ReportPropertyChanging("PublicPage_ID");
                    _PublicPage_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PublicPage_ID");
                    OnPublicPage_IDChanged();
                }
            }
        }
        private global::System.Int32 _PublicPage_ID;
        partial void OnPublicPage_IDChanging(global::System.Int32 value);
        partial void OnPublicPage_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Member_ID
        {
            get
            {
                return _Member_ID;
            }
            set
            {
                OnMember_IDChanging(value);
                ReportPropertyChanging("Member_ID");
                _Member_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Member_ID");
                OnMember_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Member_ID;
        partial void OnMember_IDChanging(Nullable<global::System.Int32> value);
        partial void OnMember_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> showHeader
        {
            get
            {
                return _showHeader;
            }
            set
            {
                OnshowHeaderChanging(value);
                ReportPropertyChanging("showHeader");
                _showHeader = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showHeader");
                OnshowHeaderChanged();
            }
        }
        private Nullable<global::System.Boolean> _showHeader;
        partial void OnshowHeaderChanging(Nullable<global::System.Boolean> value);
        partial void OnshowHeaderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> showDescription
        {
            get
            {
                return _showDescription;
            }
            set
            {
                OnshowDescriptionChanging(value);
                ReportPropertyChanging("showDescription");
                _showDescription = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showDescription");
                OnshowDescriptionChanged();
            }
        }
        private Nullable<global::System.Boolean> _showDescription;
        partial void OnshowDescriptionChanging(Nullable<global::System.Boolean> value);
        partial void OnshowDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> autoplay
        {
            get
            {
                return _autoplay;
            }
            set
            {
                OnautoplayChanging(value);
                ReportPropertyChanging("autoplay");
                _autoplay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("autoplay");
                OnautoplayChanged();
            }
        }
        private Nullable<global::System.Boolean> _autoplay;
        partial void OnautoplayChanging(Nullable<global::System.Boolean> value);
        partial void OnautoplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> showLikeButtton
        {
            get
            {
                return _showLikeButtton;
            }
            set
            {
                OnshowLikeButttonChanging(value);
                ReportPropertyChanging("showLikeButtton");
                _showLikeButtton = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showLikeButtton");
                OnshowLikeButttonChanged();
            }
        }
        private Nullable<global::System.Boolean> _showLikeButtton;
        partial void OnshowLikeButttonChanging(Nullable<global::System.Boolean> value);
        partial void OnshowLikeButttonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> showInfoButton
        {
            get
            {
                return _showInfoButton;
            }
            set
            {
                OnshowInfoButtonChanging(value);
                ReportPropertyChanging("showInfoButton");
                _showInfoButton = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showInfoButton");
                OnshowInfoButtonChanged();
            }
        }
        private Nullable<global::System.Boolean> _showInfoButton;
        partial void OnshowInfoButtonChanging(Nullable<global::System.Boolean> value);
        partial void OnshowInfoButtonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> showPhotosButton
        {
            get
            {
                return _showPhotosButton;
            }
            set
            {
                OnshowPhotosButtonChanging(value);
                ReportPropertyChanging("showPhotosButton");
                _showPhotosButton = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showPhotosButton");
                OnshowPhotosButtonChanged();
            }
        }
        private Nullable<global::System.Boolean> _showPhotosButton;
        partial void OnshowPhotosButtonChanging(Nullable<global::System.Boolean> value);
        partial void OnshowPhotosButtonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String header
        {
            get
            {
                return _header;
            }
            set
            {
                OnheaderChanging(value);
                ReportPropertyChanging("header");
                _header = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("header");
                OnheaderChanged();
            }
        }
        private global::System.String _header;
        partial void OnheaderChanging(global::System.String value);
        partial void OnheaderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HaFBackgroundColor
        {
            get
            {
                return _HaFBackgroundColor;
            }
            set
            {
                OnHaFBackgroundColorChanging(value);
                ReportPropertyChanging("HaFBackgroundColor");
                _HaFBackgroundColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HaFBackgroundColor");
                OnHaFBackgroundColorChanged();
            }
        }
        private global::System.String _HaFBackgroundColor;
        partial void OnHaFBackgroundColorChanging(global::System.String value);
        partial void OnHaFBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackgroundColor
        {
            get
            {
                return _BackgroundColor;
            }
            set
            {
                OnBackgroundColorChanging(value);
                ReportPropertyChanging("BackgroundColor");
                _BackgroundColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackgroundColor");
                OnBackgroundColorChanged();
            }
        }
        private global::System.String _BackgroundColor;
        partial void OnBackgroundColorChanging(global::System.String value);
        partial void OnBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeftSectionColor
        {
            get
            {
                return _LeftSectionColor;
            }
            set
            {
                OnLeftSectionColorChanging(value);
                ReportPropertyChanging("LeftSectionColor");
                _LeftSectionColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LeftSectionColor");
                OnLeftSectionColorChanged();
            }
        }
        private global::System.String _LeftSectionColor;
        partial void OnLeftSectionColorChanging(global::System.String value);
        partial void OnLeftSectionColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RightSectionColor
        {
            get
            {
                return _RightSectionColor;
            }
            set
            {
                OnRightSectionColorChanging(value);
                ReportPropertyChanging("RightSectionColor");
                _RightSectionColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RightSectionColor");
                OnRightSectionColorChanged();
            }
        }
        private global::System.String _RightSectionColor;
        partial void OnRightSectionColorChanging(global::System.String value);
        partial void OnRightSectionColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ButtonsBackgroundColor
        {
            get
            {
                return _ButtonsBackgroundColor;
            }
            set
            {
                OnButtonsBackgroundColorChanging(value);
                ReportPropertyChanging("ButtonsBackgroundColor");
                _ButtonsBackgroundColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ButtonsBackgroundColor");
                OnButtonsBackgroundColorChanged();
            }
        }
        private global::System.String _ButtonsBackgroundColor;
        partial void OnButtonsBackgroundColorChanging(global::System.String value);
        partial void OnButtonsBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SongBackgroundColor
        {
            get
            {
                return _SongBackgroundColor;
            }
            set
            {
                OnSongBackgroundColorChanging(value);
                ReportPropertyChanging("SongBackgroundColor");
                _SongBackgroundColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SongBackgroundColor");
                OnSongBackgroundColorChanged();
            }
        }
        private global::System.String _SongBackgroundColor;
        partial void OnSongBackgroundColorChanging(global::System.String value);
        partial void OnSongBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TextColor
        {
            get
            {
                return _TextColor;
            }
            set
            {
                OnTextColorChanging(value);
                ReportPropertyChanging("TextColor");
                _TextColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TextColor");
                OnTextColorChanged();
            }
        }
        private global::System.String _TextColor;
        partial void OnTextColorChanging(global::System.String value);
        partial void OnTextColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ButtonsColor
        {
            get
            {
                return _ButtonsColor;
            }
            set
            {
                OnButtonsColorChanging(value);
                ReportPropertyChanging("ButtonsColor");
                _ButtonsColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ButtonsColor");
                OnButtonsColorChanged();
            }
        }
        private global::System.String _ButtonsColor;
        partial void OnButtonsColorChanging(global::System.String value);
        partial void OnButtonsColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Playlist_ID
        {
            get
            {
                return _Playlist_ID;
            }
            set
            {
                OnPlaylist_IDChanging(value);
                ReportPropertyChanging("Playlist_ID");
                _Playlist_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Playlist_ID");
                OnPlaylist_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Playlist_ID;
        partial void OnPlaylist_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPlaylist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Playlist_Layout
        {
            get
            {
                return _Playlist_Layout;
            }
            set
            {
                OnPlaylist_LayoutChanging(value);
                ReportPropertyChanging("Playlist_Layout");
                _Playlist_Layout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Playlist_Layout");
                OnPlaylist_LayoutChanged();
            }
        }
        private Nullable<global::System.Int32> _Playlist_Layout;
        partial void OnPlaylist_LayoutChanging(Nullable<global::System.Int32> value);
        partial void OnPlaylist_LayoutChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="MemberSongSkip")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MemberSongSkip : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MemberSongSkip object.
        /// </summary>
        /// <param name="songSkip_ID">Initial value of the SongSkip_ID property.</param>
        public static MemberSongSkip CreateMemberSongSkip(global::System.Int32 songSkip_ID)
        {
            MemberSongSkip memberSongSkip = new MemberSongSkip();
            memberSongSkip.SongSkip_ID = songSkip_ID;
            return memberSongSkip;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SongSkip_ID
        {
            get
            {
                return _SongSkip_ID;
            }
            set
            {
                if (_SongSkip_ID != value)
                {
                    OnSongSkip_IDChanging(value);
                    ReportPropertyChanging("SongSkip_ID");
                    _SongSkip_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SongSkip_ID");
                    OnSongSkip_IDChanged();
                }
            }
        }
        private global::System.Int32 _SongSkip_ID;
        partial void OnSongSkip_IDChanging(global::System.Int32 value);
        partial void OnSongSkip_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SongSkip_UserID
        {
            get
            {
                return _SongSkip_UserID;
            }
            set
            {
                OnSongSkip_UserIDChanging(value);
                ReportPropertyChanging("SongSkip_UserID");
                _SongSkip_UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SongSkip_UserID");
                OnSongSkip_UserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SongSkip_UserID;
        partial void OnSongSkip_UserIDChanging(Nullable<global::System.Int32> value);
        partial void OnSongSkip_UserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SongSkip_SongID
        {
            get
            {
                return _SongSkip_SongID;
            }
            set
            {
                OnSongSkip_SongIDChanging(value);
                ReportPropertyChanging("SongSkip_SongID");
                _SongSkip_SongID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SongSkip_SongID");
                OnSongSkip_SongIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SongSkip_SongID;
        partial void OnSongSkip_SongIDChanging(Nullable<global::System.Int32> value);
        partial void OnSongSkip_SongIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SongSkip_SongGuid
        {
            get
            {
                return _SongSkip_SongGuid;
            }
            set
            {
                OnSongSkip_SongGuidChanging(value);
                ReportPropertyChanging("SongSkip_SongGuid");
                _SongSkip_SongGuid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SongSkip_SongGuid");
                OnSongSkip_SongGuidChanged();
            }
        }
        private global::System.String _SongSkip_SongGuid;
        partial void OnSongSkip_SongGuidChanging(global::System.String value);
        partial void OnSongSkip_SongGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SongSkip_Date
        {
            get
            {
                return _SongSkip_Date;
            }
            set
            {
                OnSongSkip_DateChanging(value);
                ReportPropertyChanging("SongSkip_Date");
                _SongSkip_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SongSkip_Date");
                OnSongSkip_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SongSkip_Date;
        partial void OnSongSkip_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnSongSkip_DateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Mix_Mobile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Mix_Mobile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Mix_Mobile object.
        /// </summary>
        /// <param name="mix_Mobile_ID">Initial value of the Mix_Mobile_ID property.</param>
        public static Mix_Mobile CreateMix_Mobile(global::System.Int32 mix_Mobile_ID)
        {
            Mix_Mobile mix_Mobile = new Mix_Mobile();
            mix_Mobile.Mix_Mobile_ID = mix_Mobile_ID;
            return mix_Mobile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Mix_Mobile_ID
        {
            get
            {
                return _Mix_Mobile_ID;
            }
            set
            {
                if (_Mix_Mobile_ID != value)
                {
                    OnMix_Mobile_IDChanging(value);
                    ReportPropertyChanging("Mix_Mobile_ID");
                    _Mix_Mobile_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Mix_Mobile_ID");
                    OnMix_Mobile_IDChanged();
                }
            }
        }
        private global::System.Int32 _Mix_Mobile_ID;
        partial void OnMix_Mobile_IDChanging(global::System.Int32 value);
        partial void OnMix_Mobile_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Mix_ID
        {
            get
            {
                return _Mix_ID;
            }
            set
            {
                OnMix_IDChanging(value);
                ReportPropertyChanging("Mix_ID");
                _Mix_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mix_ID");
                OnMix_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Mix_ID;
        partial void OnMix_IDChanging(Nullable<global::System.Int32> value);
        partial void OnMix_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mix_Name
        {
            get
            {
                return _Mix_Name;
            }
            set
            {
                OnMix_NameChanging(value);
                ReportPropertyChanging("Mix_Name");
                _Mix_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mix_Name");
                OnMix_NameChanged();
            }
        }
        private global::System.String _Mix_Name;
        partial void OnMix_NameChanging(global::System.String value);
        partial void OnMix_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Mix_Genre_ID
        {
            get
            {
                return _Mix_Genre_ID;
            }
            set
            {
                OnMix_Genre_IDChanging(value);
                ReportPropertyChanging("Mix_Genre_ID");
                _Mix_Genre_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mix_Genre_ID");
                OnMix_Genre_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Mix_Genre_ID;
        partial void OnMix_Genre_IDChanging(Nullable<global::System.Int32> value);
        partial void OnMix_Genre_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mix_Cover
        {
            get
            {
                return _Mix_Cover;
            }
            set
            {
                OnMix_CoverChanging(value);
                ReportPropertyChanging("Mix_Cover");
                _Mix_Cover = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mix_Cover");
                OnMix_CoverChanged();
            }
        }
        private global::System.String _Mix_Cover;
        partial void OnMix_CoverChanging(global::System.String value);
        partial void OnMix_CoverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Mix_Category
        {
            get
            {
                return _Mix_Category;
            }
            set
            {
                OnMix_CategoryChanging(value);
                ReportPropertyChanging("Mix_Category");
                _Mix_Category = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mix_Category");
                OnMix_CategoryChanged();
            }
        }
        private Nullable<global::System.Int32> _Mix_Category;
        partial void OnMix_CategoryChanging(Nullable<global::System.Int32> value);
        partial void OnMix_CategoryChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="MusicGenre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MusicGenre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MusicGenre object.
        /// </summary>
        /// <param name="genre_ID">Initial value of the Genre_ID property.</param>
        public static MusicGenre CreateMusicGenre(global::System.Int32 genre_ID)
        {
            MusicGenre musicGenre = new MusicGenre();
            musicGenre.Genre_ID = genre_ID;
            return musicGenre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Genre_ID
        {
            get
            {
                return _Genre_ID;
            }
            set
            {
                if (_Genre_ID != value)
                {
                    OnGenre_IDChanging(value);
                    ReportPropertyChanging("Genre_ID");
                    _Genre_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Genre_ID");
                    OnGenre_IDChanged();
                }
            }
        }
        private global::System.Int32 _Genre_ID;
        partial void OnGenre_IDChanging(global::System.Int32 value);
        partial void OnGenre_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GenreName
        {
            get
            {
                return _GenreName;
            }
            set
            {
                OnGenreNameChanging(value);
                ReportPropertyChanging("GenreName");
                _GenreName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GenreName");
                OnGenreNameChanged();
            }
        }
        private global::System.String _GenreName;
        partial void OnGenreNameChanging(global::System.String value);
        partial void OnGenreNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> User_ID
        {
            get
            {
                return _User_ID;
            }
            set
            {
                OnUser_IDChanging(value);
                ReportPropertyChanging("User_ID");
                _User_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_ID");
                OnUser_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _User_ID;
        partial void OnUser_IDChanging(Nullable<global::System.Int32> value);
        partial void OnUser_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Playlist_ID
        {
            get
            {
                return _Playlist_ID;
            }
            set
            {
                OnPlaylist_IDChanging(value);
                ReportPropertyChanging("Playlist_ID");
                _Playlist_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Playlist_ID");
                OnPlaylist_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Playlist_ID;
        partial void OnPlaylist_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPlaylist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> popular
        {
            get
            {
                return _popular;
            }
            set
            {
                OnpopularChanging(value);
                ReportPropertyChanging("popular");
                _popular = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("popular");
                OnpopularChanged();
            }
        }
        private Nullable<global::System.Boolean> _popular;
        partial void OnpopularChanging(Nullable<global::System.Boolean> value);
        partial void OnpopularChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="newsCeleb")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class newsCeleb : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new newsCeleb object.
        /// </summary>
        /// <param name="celeb_id">Initial value of the celeb_id property.</param>
        public static newsCeleb CreatenewsCeleb(global::System.Int32 celeb_id)
        {
            newsCeleb newsCeleb = new newsCeleb();
            newsCeleb.celeb_id = celeb_id;
            return newsCeleb;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 celeb_id
        {
            get
            {
                return _celeb_id;
            }
            set
            {
                if (_celeb_id != value)
                {
                    Onceleb_idChanging(value);
                    ReportPropertyChanging("celeb_id");
                    _celeb_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("celeb_id");
                    Onceleb_idChanged();
                }
            }
        }
        private global::System.Int32 _celeb_id;
        partial void Onceleb_idChanging(global::System.Int32 value);
        partial void Onceleb_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String celeb_name
        {
            get
            {
                return _celeb_name;
            }
            set
            {
                Onceleb_nameChanging(value);
                ReportPropertyChanging("celeb_name");
                _celeb_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("celeb_name");
                Onceleb_nameChanged();
            }
        }
        private global::System.String _celeb_name;
        partial void Onceleb_nameChanging(global::System.String value);
        partial void Onceleb_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String celeb_url
        {
            get
            {
                return _celeb_url;
            }
            set
            {
                Onceleb_urlChanging(value);
                ReportPropertyChanging("celeb_url");
                _celeb_url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("celeb_url");
                Onceleb_urlChanged();
            }
        }
        private global::System.String _celeb_url;
        partial void Onceleb_urlChanging(global::System.String value);
        partial void Onceleb_urlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String celeb_image
        {
            get
            {
                return _celeb_image;
            }
            set
            {
                Onceleb_imageChanging(value);
                ReportPropertyChanging("celeb_image");
                _celeb_image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("celeb_image");
                Onceleb_imageChanged();
            }
        }
        private global::System.String _celeb_image;
        partial void Onceleb_imageChanging(global::System.String value);
        partial void Onceleb_imageChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="newsComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class newsComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new newsComment object.
        /// </summary>
        /// <param name="newsComment_ID">Initial value of the newsComment_ID property.</param>
        public static newsComment CreatenewsComment(global::System.Int32 newsComment_ID)
        {
            newsComment newsComment = new newsComment();
            newsComment.newsComment_ID = newsComment_ID;
            return newsComment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 newsComment_ID
        {
            get
            {
                return _newsComment_ID;
            }
            set
            {
                if (_newsComment_ID != value)
                {
                    OnnewsComment_IDChanging(value);
                    ReportPropertyChanging("newsComment_ID");
                    _newsComment_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("newsComment_ID");
                    OnnewsComment_IDChanged();
                }
            }
        }
        private global::System.Int32 _newsComment_ID;
        partial void OnnewsComment_IDChanging(global::System.Int32 value);
        partial void OnnewsComment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> newsPost_ID
        {
            get
            {
                return _newsPost_ID;
            }
            set
            {
                OnnewsPost_IDChanging(value);
                ReportPropertyChanging("newsPost_ID");
                _newsPost_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("newsPost_ID");
                OnnewsPost_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _newsPost_ID;
        partial void OnnewsPost_IDChanging(Nullable<global::System.Int32> value);
        partial void OnnewsPost_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_ID
        {
            get
            {
                return _user_ID;
            }
            set
            {
                Onuser_IDChanging(value);
                ReportPropertyChanging("user_ID");
                _user_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_ID");
                Onuser_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _user_ID;
        partial void Onuser_IDChanging(Nullable<global::System.Int32> value);
        partial void Onuser_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private Nullable<global::System.Int32> _status;
        partial void OnstatusChanging(Nullable<global::System.Int32> value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ipAddress
        {
            get
            {
                return _ipAddress;
            }
            set
            {
                OnipAddressChanging(value);
                ReportPropertyChanging("ipAddress");
                _ipAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ipAddress");
                OnipAddressChanged();
            }
        }
        private global::System.String _ipAddress;
        partial void OnipAddressChanging(global::System.String value);
        partial void OnipAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> postDate
        {
            get
            {
                return _postDate;
            }
            set
            {
                OnpostDateChanging(value);
                ReportPropertyChanging("postDate");
                _postDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("postDate");
                OnpostDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _postDate;
        partial void OnpostDateChanging(Nullable<global::System.DateTime> value);
        partial void OnpostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userName
        {
            get
            {
                return _userName;
            }
            set
            {
                OnuserNameChanging(value);
                ReportPropertyChanging("userName");
                _userName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userName");
                OnuserNameChanged();
            }
        }
        private global::System.String _userName;
        partial void OnuserNameChanging(global::System.String value);
        partial void OnuserNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="newsPost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class newsPost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new newsPost object.
        /// </summary>
        /// <param name="post_id">Initial value of the post_id property.</param>
        public static newsPost CreatenewsPost(global::System.Int32 post_id)
        {
            newsPost newsPost = new newsPost();
            newsPost.post_id = post_id;
            return newsPost;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 post_id
        {
            get
            {
                return _post_id;
            }
            set
            {
                if (_post_id != value)
                {
                    Onpost_idChanging(value);
                    ReportPropertyChanging("post_id");
                    _post_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("post_id");
                    Onpost_idChanged();
                }
            }
        }
        private global::System.Int32 _post_id;
        partial void Onpost_idChanging(global::System.Int32 value);
        partial void Onpost_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> post_author
        {
            get
            {
                return _post_author;
            }
            set
            {
                Onpost_authorChanging(value);
                ReportPropertyChanging("post_author");
                _post_author = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("post_author");
                Onpost_authorChanged();
            }
        }
        private Nullable<global::System.Int32> _post_author;
        partial void Onpost_authorChanging(Nullable<global::System.Int32> value);
        partial void Onpost_authorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> post_date
        {
            get
            {
                return _post_date;
            }
            set
            {
                Onpost_dateChanging(value);
                ReportPropertyChanging("post_date");
                _post_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("post_date");
                Onpost_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _post_date;
        partial void Onpost_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onpost_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String post_content
        {
            get
            {
                return _post_content;
            }
            set
            {
                Onpost_contentChanging(value);
                ReportPropertyChanging("post_content");
                _post_content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("post_content");
                Onpost_contentChanged();
            }
        }
        private global::System.String _post_content;
        partial void Onpost_contentChanging(global::System.String value);
        partial void Onpost_contentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String post_title
        {
            get
            {
                return _post_title;
            }
            set
            {
                Onpost_titleChanging(value);
                ReportPropertyChanging("post_title");
                _post_title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("post_title");
                Onpost_titleChanged();
            }
        }
        private global::System.String _post_title;
        partial void Onpost_titleChanging(global::System.String value);
        partial void Onpost_titleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> post_status
        {
            get
            {
                return _post_status;
            }
            set
            {
                Onpost_statusChanging(value);
                ReportPropertyChanging("post_status");
                _post_status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("post_status");
                Onpost_statusChanged();
            }
        }
        private Nullable<global::System.Int32> _post_status;
        partial void Onpost_statusChanging(Nullable<global::System.Int32> value);
        partial void Onpost_statusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String post_guid
        {
            get
            {
                return _post_guid;
            }
            set
            {
                Onpost_guidChanging(value);
                ReportPropertyChanging("post_guid");
                _post_guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("post_guid");
                Onpost_guidChanged();
            }
        }
        private global::System.String _post_guid;
        partial void Onpost_guidChanging(global::System.String value);
        partial void Onpost_guidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> post_type
        {
            get
            {
                return _post_type;
            }
            set
            {
                Onpost_typeChanging(value);
                ReportPropertyChanging("post_type");
                _post_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("post_type");
                Onpost_typeChanged();
            }
        }
        private Nullable<global::System.Int32> _post_type;
        partial void Onpost_typeChanging(Nullable<global::System.Int32> value);
        partial void Onpost_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> comment_count
        {
            get
            {
                return _comment_count;
            }
            set
            {
                Oncomment_countChanging(value);
                ReportPropertyChanging("comment_count");
                _comment_count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("comment_count");
                Oncomment_countChanged();
            }
        }
        private Nullable<global::System.Int32> _comment_count;
        partial void Oncomment_countChanging(Nullable<global::System.Int32> value);
        partial void Oncomment_countChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> post_voteUp
        {
            get
            {
                return _post_voteUp;
            }
            set
            {
                Onpost_voteUpChanging(value);
                ReportPropertyChanging("post_voteUp");
                _post_voteUp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("post_voteUp");
                Onpost_voteUpChanged();
            }
        }
        private Nullable<global::System.Int32> _post_voteUp;
        partial void Onpost_voteUpChanging(Nullable<global::System.Int32> value);
        partial void Onpost_voteUpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> post_voteDown
        {
            get
            {
                return _post_voteDown;
            }
            set
            {
                Onpost_voteDownChanging(value);
                ReportPropertyChanging("post_voteDown");
                _post_voteDown = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("post_voteDown");
                Onpost_voteDownChanged();
            }
        }
        private Nullable<global::System.Int32> _post_voteDown;
        partial void Onpost_voteDownChanging(Nullable<global::System.Int32> value);
        partial void Onpost_voteDownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String post_image
        {
            get
            {
                return _post_image;
            }
            set
            {
                Onpost_imageChanging(value);
                ReportPropertyChanging("post_image");
                _post_image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("post_image");
                Onpost_imageChanged();
            }
        }
        private global::System.String _post_image;
        partial void Onpost_imageChanging(global::System.String value);
        partial void Onpost_imageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String post_short_content
        {
            get
            {
                return _post_short_content;
            }
            set
            {
                Onpost_short_contentChanging(value);
                ReportPropertyChanging("post_short_content");
                _post_short_content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("post_short_content");
                Onpost_short_contentChanged();
            }
        }
        private global::System.String _post_short_content;
        partial void Onpost_short_contentChanging(global::System.String value);
        partial void Onpost_short_contentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MusicPlayer
        {
            get
            {
                return _MusicPlayer;
            }
            set
            {
                OnMusicPlayerChanging(value);
                ReportPropertyChanging("MusicPlayer");
                _MusicPlayer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MusicPlayer");
                OnMusicPlayerChanged();
            }
        }
        private global::System.String _MusicPlayer;
        partial void OnMusicPlayerChanging(global::System.String value);
        partial void OnMusicPlayerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ad_id
        {
            get
            {
                return _ad_id;
            }
            set
            {
                Onad_idChanging(value);
                ReportPropertyChanging("ad_id");
                _ad_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ad_id");
                Onad_idChanged();
            }
        }
        private global::System.String _ad_id;
        partial void Onad_idChanging(global::System.String value);
        partial void Onad_idChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="userid">Initial value of the userid property.</param>
        /// <param name="is_artist">Initial value of the is_artist property.</param>
        /// <param name="hidden">Initial value of the hidden property.</param>
        public static Photo CreatePhoto(global::System.Int32 id, global::System.Int32 userid, global::System.Boolean is_artist, global::System.Boolean hidden)
        {
            Photo photo = new Photo();
            photo.id = id;
            photo.userid = userid;
            photo.is_artist = is_artist;
            photo.hidden = hidden;
            return photo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String caption
        {
            get
            {
                return _caption;
            }
            set
            {
                OncaptionChanging(value);
                ReportPropertyChanging("caption");
                _caption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("caption");
                OncaptionChanged();
            }
        }
        private global::System.String _caption;
        partial void OncaptionChanging(global::System.String value);
        partial void OncaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean is_artist
        {
            get
            {
                return _is_artist;
            }
            set
            {
                Onis_artistChanging(value);
                ReportPropertyChanging("is_artist");
                _is_artist = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_artist");
                Onis_artistChanged();
            }
        }
        private global::System.Boolean _is_artist;
        partial void Onis_artistChanging(global::System.Boolean value);
        partial void Onis_artistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean hidden
        {
            get
            {
                return _hidden;
            }
            set
            {
                OnhiddenChanging(value);
                ReportPropertyChanging("hidden");
                _hidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hidden");
                OnhiddenChanged();
            }
        }
        private global::System.Boolean _hidden;
        partial void OnhiddenChanging(global::System.Boolean value);
        partial void OnhiddenChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hypster_tv_Model", "FK_pl_photos_pl_member", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("hypster_tv_Model.FK_pl_photos_pl_member", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("hypster_tv_Model.FK_pl_photos_pl_member", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("hypster_tv_Model.FK_pl_photos_pl_member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("hypster_tv_Model.FK_pl_photos_pl_member", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="player_ID">Initial value of the player_ID property.</param>
        public static Player CreatePlayer(global::System.Int32 player_ID)
        {
            Player player = new Player();
            player.player_ID = player_ID;
            return player;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 player_ID
        {
            get
            {
                return _player_ID;
            }
            set
            {
                if (_player_ID != value)
                {
                    Onplayer_IDChanging(value);
                    ReportPropertyChanging("player_ID");
                    _player_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("player_ID");
                    Onplayer_IDChanged();
                }
            }
        }
        private global::System.Int32 _player_ID;
        partial void Onplayer_IDChanging(global::System.Int32 value);
        partial void Onplayer_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String player_Name
        {
            get
            {
                return _player_Name;
            }
            set
            {
                Onplayer_NameChanging(value);
                ReportPropertyChanging("player_Name");
                _player_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("player_Name");
                Onplayer_NameChanged();
            }
        }
        private global::System.String _player_Name;
        partial void Onplayer_NameChanging(global::System.String value);
        partial void Onplayer_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Player_Type
        {
            get
            {
                return _Player_Type;
            }
            set
            {
                OnPlayer_TypeChanging(value);
                ReportPropertyChanging("Player_Type");
                _Player_Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Player_Type");
                OnPlayer_TypeChanged();
            }
        }
        private global::System.String _Player_Type;
        partial void OnPlayer_TypeChanging(global::System.String value);
        partial void OnPlayer_TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_ID
        {
            get
            {
                return _user_ID;
            }
            set
            {
                Onuser_IDChanging(value);
                ReportPropertyChanging("user_ID");
                _user_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_ID");
                Onuser_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _user_ID;
        partial void Onuser_IDChanging(Nullable<global::System.Int32> value);
        partial void Onuser_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> playlist_ID
        {
            get
            {
                return _playlist_ID;
            }
            set
            {
                Onplaylist_IDChanging(value);
                ReportPropertyChanging("playlist_ID");
                _playlist_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlist_ID");
                Onplaylist_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _playlist_ID;
        partial void Onplaylist_IDChanging(Nullable<global::System.Int32> value);
        partial void Onplaylist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> BAR_autostart
        {
            get
            {
                return _BAR_autostart;
            }
            set
            {
                OnBAR_autostartChanging(value);
                ReportPropertyChanging("BAR_autostart");
                _BAR_autostart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BAR_autostart");
                OnBAR_autostartChanged();
            }
        }
        private Nullable<global::System.Boolean> _BAR_autostart;
        partial void OnBAR_autostartChanging(Nullable<global::System.Boolean> value);
        partial void OnBAR_autostartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> BAR_shufflePlayback
        {
            get
            {
                return _BAR_shufflePlayback;
            }
            set
            {
                OnBAR_shufflePlaybackChanging(value);
                ReportPropertyChanging("BAR_shufflePlayback");
                _BAR_shufflePlayback = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BAR_shufflePlayback");
                OnBAR_shufflePlaybackChanged();
            }
        }
        private Nullable<global::System.Boolean> _BAR_shufflePlayback;
        partial void OnBAR_shufflePlaybackChanging(Nullable<global::System.Boolean> value);
        partial void OnBAR_shufflePlaybackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BAR_placementOfThePlayer
        {
            get
            {
                return _BAR_placementOfThePlayer;
            }
            set
            {
                OnBAR_placementOfThePlayerChanging(value);
                ReportPropertyChanging("BAR_placementOfThePlayer");
                _BAR_placementOfThePlayer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BAR_placementOfThePlayer");
                OnBAR_placementOfThePlayerChanged();
            }
        }
        private global::System.String _BAR_placementOfThePlayer;
        partial void OnBAR_placementOfThePlayerChanging(global::System.String value);
        partial void OnBAR_placementOfThePlayerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> BAR_showPlaylistByDefault
        {
            get
            {
                return _BAR_showPlaylistByDefault;
            }
            set
            {
                OnBAR_showPlaylistByDefaultChanging(value);
                ReportPropertyChanging("BAR_showPlaylistByDefault");
                _BAR_showPlaylistByDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BAR_showPlaylistByDefault");
                OnBAR_showPlaylistByDefaultChanged();
            }
        }
        private Nullable<global::System.Boolean> _BAR_showPlaylistByDefault;
        partial void OnBAR_showPlaylistByDefaultChanging(Nullable<global::System.Boolean> value);
        partial void OnBAR_showPlaylistByDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BAR_playerSkin
        {
            get
            {
                return _BAR_playerSkin;
            }
            set
            {
                OnBAR_playerSkinChanging(value);
                ReportPropertyChanging("BAR_playerSkin");
                _BAR_playerSkin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BAR_playerSkin");
                OnBAR_playerSkinChanged();
            }
        }
        private global::System.String _BAR_playerSkin;
        partial void OnBAR_playerSkinChanging(global::System.String value);
        partial void OnBAR_playerSkinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CLASSIC_autostart
        {
            get
            {
                return _CLASSIC_autostart;
            }
            set
            {
                OnCLASSIC_autostartChanging(value);
                ReportPropertyChanging("CLASSIC_autostart");
                _CLASSIC_autostart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLASSIC_autostart");
                OnCLASSIC_autostartChanged();
            }
        }
        private Nullable<global::System.Boolean> _CLASSIC_autostart;
        partial void OnCLASSIC_autostartChanging(Nullable<global::System.Boolean> value);
        partial void OnCLASSIC_autostartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CLASSIC_shufflePlayback
        {
            get
            {
                return _CLASSIC_shufflePlayback;
            }
            set
            {
                OnCLASSIC_shufflePlaybackChanging(value);
                ReportPropertyChanging("CLASSIC_shufflePlayback");
                _CLASSIC_shufflePlayback = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLASSIC_shufflePlayback");
                OnCLASSIC_shufflePlaybackChanged();
            }
        }
        private Nullable<global::System.Boolean> _CLASSIC_shufflePlayback;
        partial void OnCLASSIC_shufflePlaybackChanging(Nullable<global::System.Boolean> value);
        partial void OnCLASSIC_shufflePlaybackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLASSIC_playerSkin
        {
            get
            {
                return _CLASSIC_playerSkin;
            }
            set
            {
                OnCLASSIC_playerSkinChanging(value);
                ReportPropertyChanging("CLASSIC_playerSkin");
                _CLASSIC_playerSkin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLASSIC_playerSkin");
                OnCLASSIC_playerSkinChanged();
            }
        }
        private global::System.String _CLASSIC_playerSkin;
        partial void OnCLASSIC_playerSkinChanging(global::System.String value);
        partial void OnCLASSIC_playerSkinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> RADIO_autostart
        {
            get
            {
                return _RADIO_autostart;
            }
            set
            {
                OnRADIO_autostartChanging(value);
                ReportPropertyChanging("RADIO_autostart");
                _RADIO_autostart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RADIO_autostart");
                OnRADIO_autostartChanged();
            }
        }
        private Nullable<global::System.Boolean> _RADIO_autostart;
        partial void OnRADIO_autostartChanging(Nullable<global::System.Boolean> value);
        partial void OnRADIO_autostartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RADIO_Genre
        {
            get
            {
                return _RADIO_Genre;
            }
            set
            {
                OnRADIO_GenreChanging(value);
                ReportPropertyChanging("RADIO_Genre");
                _RADIO_Genre = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RADIO_Genre");
                OnRADIO_GenreChanged();
            }
        }
        private global::System.String _RADIO_Genre;
        partial void OnRADIO_GenreChanging(global::System.String value);
        partial void OnRADIO_GenreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RADIO_Genre_ID
        {
            get
            {
                return _RADIO_Genre_ID;
            }
            set
            {
                OnRADIO_Genre_IDChanging(value);
                ReportPropertyChanging("RADIO_Genre_ID");
                _RADIO_Genre_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RADIO_Genre_ID");
                OnRADIO_Genre_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _RADIO_Genre_ID;
        partial void OnRADIO_Genre_IDChanging(Nullable<global::System.Int32> value);
        partial void OnRADIO_Genre_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Playlist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Playlist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Playlist object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="userid">Initial value of the userid property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="create_time">Initial value of the create_time property.</param>
        /// <param name="update_time">Initial value of the update_time property.</param>
        /// <param name="is_artist_playlist">Initial value of the is_artist_playlist property.</param>
        public static Playlist CreatePlaylist(global::System.Int32 id, global::System.Int32 userid, global::System.String name, global::System.Int32 create_time, global::System.Int32 update_time, global::System.Boolean is_artist_playlist)
        {
            Playlist playlist = new Playlist();
            playlist.id = id;
            playlist.userid = userid;
            playlist.name = name;
            playlist.create_time = create_time;
            playlist.update_time = update_time;
            playlist.is_artist_playlist = is_artist_playlist;
            return playlist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 create_time
        {
            get
            {
                return _create_time;
            }
            set
            {
                Oncreate_timeChanging(value);
                ReportPropertyChanging("create_time");
                _create_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("create_time");
                Oncreate_timeChanged();
            }
        }
        private global::System.Int32 _create_time;
        partial void Oncreate_timeChanging(global::System.Int32 value);
        partial void Oncreate_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 update_time
        {
            get
            {
                return _update_time;
            }
            set
            {
                Onupdate_timeChanging(value);
                ReportPropertyChanging("update_time");
                _update_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("update_time");
                Onupdate_timeChanged();
            }
        }
        private global::System.Int32 _update_time;
        partial void Onupdate_timeChanging(global::System.Int32 value);
        partial void Onupdate_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean is_artist_playlist
        {
            get
            {
                return _is_artist_playlist;
            }
            set
            {
                Onis_artist_playlistChanging(value);
                ReportPropertyChanging("is_artist_playlist");
                _is_artist_playlist = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_artist_playlist");
                Onis_artist_playlistChanged();
            }
        }
        private global::System.Boolean _is_artist_playlist;
        partial void Onis_artist_playlistChanging(global::System.Boolean value);
        partial void Onis_artist_playlistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ViewsNum
        {
            get
            {
                return _ViewsNum;
            }
            set
            {
                OnViewsNumChanging(value);
                ReportPropertyChanging("ViewsNum");
                _ViewsNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewsNum");
                OnViewsNumChanged();
            }
        }
        private Nullable<global::System.Int32> _ViewsNum;
        partial void OnViewsNumChanging(Nullable<global::System.Int32> value);
        partial void OnViewsNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Likes
        {
            get
            {
                return _Likes;
            }
            set
            {
                OnLikesChanging(value);
                ReportPropertyChanging("Likes");
                _Likes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Likes");
                OnLikesChanged();
            }
        }
        private Nullable<global::System.Int32> _Likes;
        partial void OnLikesChanging(Nullable<global::System.Int32> value);
        partial void OnLikesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Shares
        {
            get
            {
                return _Shares;
            }
            set
            {
                OnSharesChanging(value);
                ReportPropertyChanging("Shares");
                _Shares = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shares");
                OnSharesChanged();
            }
        }
        private Nullable<global::System.Int32> _Shares;
        partial void OnSharesChanging(Nullable<global::System.Int32> value);
        partial void OnSharesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("hypster_tv_Model", "FK_pl_playlists_pl_member", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("hypster_tv_Model.FK_pl_playlists_pl_member", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("hypster_tv_Model.FK_pl_playlists_pl_member", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("hypster_tv_Model.FK_pl_playlists_pl_member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("hypster_tv_Model.FK_pl_playlists_pl_member", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="PlaylistData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlaylistData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlaylistData object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="userid">Initial value of the userid property.</param>
        /// <param name="songid">Initial value of the songid property.</param>
        /// <param name="sortid">Initial value of the sortid property.</param>
        public static PlaylistData CreatePlaylistData(global::System.Int32 id, global::System.Int32 userid, global::System.Int32 songid, global::System.Int16 sortid)
        {
            PlaylistData playlistData = new PlaylistData();
            playlistData.id = id;
            playlistData.userid = userid;
            playlistData.songid = songid;
            playlistData.sortid = sortid;
            return playlistData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 songid
        {
            get
            {
                return _songid;
            }
            set
            {
                OnsongidChanging(value);
                ReportPropertyChanging("songid");
                _songid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("songid");
                OnsongidChanged();
            }
        }
        private global::System.Int32 _songid;
        partial void OnsongidChanging(global::System.Int32 value);
        partial void OnsongidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 sortid
        {
            get
            {
                return _sortid;
            }
            set
            {
                OnsortidChanging(value);
                ReportPropertyChanging("sortid");
                _sortid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sortid");
                OnsortidChanged();
            }
        }
        private global::System.Int16 _sortid;
        partial void OnsortidChanging(global::System.Int16 value);
        partial void OnsortidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> playlist_id
        {
            get
            {
                return _playlist_id;
            }
            set
            {
                Onplaylist_idChanging(value);
                ReportPropertyChanging("playlist_id");
                _playlist_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlist_id");
                Onplaylist_idChanged();
            }
        }
        private Nullable<global::System.Int32> _playlist_id;
        partial void Onplaylist_idChanging(Nullable<global::System.Int32> value);
        partial void Onplaylist_idChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="PlaylistLike")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlaylistLike : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlaylistLike object.
        /// </summary>
        /// <param name="playlistLikesId">Initial value of the PlaylistLikesId property.</param>
        /// <param name="playlistId">Initial value of the PlaylistId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="likeValue">Initial value of the LikeValue property.</param>
        public static PlaylistLike CreatePlaylistLike(global::System.Int32 playlistLikesId, global::System.Int32 playlistId, global::System.Int32 userId, global::System.Int32 ownerId, global::System.Int32 likeValue)
        {
            PlaylistLike playlistLike = new PlaylistLike();
            playlistLike.PlaylistLikesId = playlistLikesId;
            playlistLike.PlaylistId = playlistId;
            playlistLike.UserId = userId;
            playlistLike.OwnerId = ownerId;
            playlistLike.LikeValue = likeValue;
            return playlistLike;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlaylistLikesId
        {
            get
            {
                return _PlaylistLikesId;
            }
            set
            {
                if (_PlaylistLikesId != value)
                {
                    OnPlaylistLikesIdChanging(value);
                    ReportPropertyChanging("PlaylistLikesId");
                    _PlaylistLikesId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlaylistLikesId");
                    OnPlaylistLikesIdChanged();
                }
            }
        }
        private global::System.Int32 _PlaylistLikesId;
        partial void OnPlaylistLikesIdChanging(global::System.Int32 value);
        partial void OnPlaylistLikesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlaylistId
        {
            get
            {
                return _PlaylistId;
            }
            set
            {
                OnPlaylistIdChanging(value);
                ReportPropertyChanging("PlaylistId");
                _PlaylistId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaylistId");
                OnPlaylistIdChanged();
            }
        }
        private global::System.Int32 _PlaylistId;
        partial void OnPlaylistIdChanging(global::System.Int32 value);
        partial void OnPlaylistIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Int32 _OwnerId;
        partial void OnOwnerIdChanging(global::System.Int32 value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LikeValue
        {
            get
            {
                return _LikeValue;
            }
            set
            {
                OnLikeValueChanging(value);
                ReportPropertyChanging("LikeValue");
                _LikeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LikeValue");
                OnLikeValueChanged();
            }
        }
        private global::System.Int32 _LikeValue;
        partial void OnLikeValueChanging(global::System.Int32 value);
        partial void OnLikeValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Radio_Usage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Radio_Usage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Radio_Usage object.
        /// </summary>
        /// <param name="radio_Usage_ID">Initial value of the Radio_Usage_ID property.</param>
        public static Radio_Usage CreateRadio_Usage(global::System.Int32 radio_Usage_ID)
        {
            Radio_Usage radio_Usage = new Radio_Usage();
            radio_Usage.Radio_Usage_ID = radio_Usage_ID;
            return radio_Usage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Radio_Usage_ID
        {
            get
            {
                return _Radio_Usage_ID;
            }
            set
            {
                if (_Radio_Usage_ID != value)
                {
                    OnRadio_Usage_IDChanging(value);
                    ReportPropertyChanging("Radio_Usage_ID");
                    _Radio_Usage_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Radio_Usage_ID");
                    OnRadio_Usage_IDChanged();
                }
            }
        }
        private global::System.Int32 _Radio_Usage_ID;
        partial void OnRadio_Usage_IDChanging(global::System.Int32 value);
        partial void OnRadio_Usage_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Radio_Usage_Date
        {
            get
            {
                return _Radio_Usage_Date;
            }
            set
            {
                OnRadio_Usage_DateChanging(value);
                ReportPropertyChanging("Radio_Usage_Date");
                _Radio_Usage_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Radio_Usage_Date");
                OnRadio_Usage_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Radio_Usage_Date;
        partial void OnRadio_Usage_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnRadio_Usage_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PLAY_TOKEN
        {
            get
            {
                return _PLAY_TOKEN;
            }
            set
            {
                OnPLAY_TOKENChanging(value);
                ReportPropertyChanging("PLAY_TOKEN");
                _PLAY_TOKEN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PLAY_TOKEN");
                OnPLAY_TOKENChanged();
            }
        }
        private Nullable<global::System.Int32> _PLAY_TOKEN;
        partial void OnPLAY_TOKENChanging(Nullable<global::System.Int32> value);
        partial void OnPLAY_TOKENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TRACK_ID
        {
            get
            {
                return _TRACK_ID;
            }
            set
            {
                OnTRACK_IDChanging(value);
                ReportPropertyChanging("TRACK_ID");
                _TRACK_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TRACK_ID");
                OnTRACK_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _TRACK_ID;
        partial void OnTRACK_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTRACK_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MIX_ID
        {
            get
            {
                return _MIX_ID;
            }
            set
            {
                OnMIX_IDChanging(value);
                ReportPropertyChanging("MIX_ID");
                _MIX_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MIX_ID");
                OnMIX_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _MIX_ID;
        partial void OnMIX_IDChanging(Nullable<global::System.Int32> value);
        partial void OnMIX_IDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="RadioStation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RadioStation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RadioStation object.
        /// </summary>
        /// <param name="radioStation_ID">Initial value of the RadioStation_ID property.</param>
        public static RadioStation CreateRadioStation(global::System.Int32 radioStation_ID)
        {
            RadioStation radioStation = new RadioStation();
            radioStation.RadioStation_ID = radioStation_ID;
            return radioStation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RadioStation_ID
        {
            get
            {
                return _RadioStation_ID;
            }
            set
            {
                if (_RadioStation_ID != value)
                {
                    OnRadioStation_IDChanging(value);
                    ReportPropertyChanging("RadioStation_ID");
                    _RadioStation_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RadioStation_ID");
                    OnRadioStation_IDChanged();
                }
            }
        }
        private global::System.Int32 _RadioStation_ID;
        partial void OnRadioStation_IDChanging(global::System.Int32 value);
        partial void OnRadioStation_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_ID
        {
            get
            {
                return _user_ID;
            }
            set
            {
                Onuser_IDChanging(value);
                ReportPropertyChanging("user_ID");
                _user_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_ID");
                Onuser_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _user_ID;
        partial void Onuser_IDChanging(Nullable<global::System.Int32> value);
        partial void Onuser_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RadioStationName
        {
            get
            {
                return _RadioStationName;
            }
            set
            {
                OnRadioStationNameChanging(value);
                ReportPropertyChanging("RadioStationName");
                _RadioStationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RadioStationName");
                OnRadioStationNameChanged();
            }
        }
        private global::System.String _RadioStationName;
        partial void OnRadioStationNameChanging(global::System.String value);
        partial void OnRadioStationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RadioStationQuery
        {
            get
            {
                return _RadioStationQuery;
            }
            set
            {
                OnRadioStationQueryChanging(value);
                ReportPropertyChanging("RadioStationQuery");
                _RadioStationQuery = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RadioStationQuery");
                OnRadioStationQueryChanged();
            }
        }
        private global::System.String _RadioStationQuery;
        partial void OnRadioStationQueryChanging(global::System.String value);
        partial void OnRadioStationQueryChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="ScheduledPost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduledPost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScheduledPost object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static ScheduledPost CreateScheduledPost(global::System.Int32 id)
        {
            ScheduledPost scheduledPost = new ScheduledPost();
            scheduledPost.id = id;
            return scheduledPost;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> scheduled_date
        {
            get
            {
                return _scheduled_date;
            }
            set
            {
                Onscheduled_dateChanging(value);
                ReportPropertyChanging("scheduled_date");
                _scheduled_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("scheduled_date");
                Onscheduled_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _scheduled_date;
        partial void Onscheduled_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onscheduled_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> post_id
        {
            get
            {
                return _post_id;
            }
            set
            {
                Onpost_idChanging(value);
                ReportPropertyChanging("post_id");
                _post_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("post_id");
                Onpost_idChanged();
            }
        }
        private Nullable<global::System.Int32> _post_id;
        partial void Onpost_idChanging(Nullable<global::System.Int32> value);
        partial void Onpost_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> activated
        {
            get
            {
                return _activated;
            }
            set
            {
                OnactivatedChanging(value);
                ReportPropertyChanging("activated");
                _activated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("activated");
                OnactivatedChanged();
            }
        }
        private Nullable<global::System.Int32> _activated;
        partial void OnactivatedChanging(Nullable<global::System.Int32> value);
        partial void OnactivatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="SessionCrossover")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionCrossover : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionCrossover object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        /// <param name="lastSet">Initial value of the LastSet property.</param>
        public static SessionCrossover CreateSessionCrossover(global::System.Int32 userId, global::System.String sessionId, global::System.Int32 lastSet)
        {
            SessionCrossover sessionCrossover = new SessionCrossover();
            sessionCrossover.UserId = userId;
            sessionCrossover.SessionId = sessionId;
            sessionCrossover.LastSet = lastSet;
            return sessionCrossover;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.String _SessionId;
        partial void OnSessionIdChanging(global::System.String value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastSet
        {
            get
            {
                return _LastSet;
            }
            set
            {
                OnLastSetChanging(value);
                ReportPropertyChanging("LastSet");
                _LastSet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastSet");
                OnLastSetChanged();
            }
        }
        private global::System.Int32 _LastSet;
        partial void OnLastSetChanging(global::System.Int32 value);
        partial void OnLastSetChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Sitemap_Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sitemap_Content : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sitemap_Content object.
        /// </summary>
        /// <param name="sitemap_ID">Initial value of the Sitemap_ID property.</param>
        public static Sitemap_Content CreateSitemap_Content(global::System.Int32 sitemap_ID)
        {
            Sitemap_Content sitemap_Content = new Sitemap_Content();
            sitemap_Content.Sitemap_ID = sitemap_ID;
            return sitemap_Content;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sitemap_ID
        {
            get
            {
                return _Sitemap_ID;
            }
            set
            {
                if (_Sitemap_ID != value)
                {
                    OnSitemap_IDChanging(value);
                    ReportPropertyChanging("Sitemap_ID");
                    _Sitemap_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Sitemap_ID");
                    OnSitemap_IDChanged();
                }
            }
        }
        private global::System.Int32 _Sitemap_ID;
        partial void OnSitemap_IDChanging(global::System.Int32 value);
        partial void OnSitemap_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sitemap_URL
        {
            get
            {
                return _Sitemap_URL;
            }
            set
            {
                OnSitemap_URLChanging(value);
                ReportPropertyChanging("Sitemap_URL");
                _Sitemap_URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sitemap_URL");
                OnSitemap_URLChanged();
            }
        }
        private global::System.String _Sitemap_URL;
        partial void OnSitemap_URLChanging(global::System.String value);
        partial void OnSitemap_URLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Sitemap_Updated
        {
            get
            {
                return _Sitemap_Updated;
            }
            set
            {
                OnSitemap_UpdatedChanging(value);
                ReportPropertyChanging("Sitemap_Updated");
                _Sitemap_Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sitemap_Updated");
                OnSitemap_UpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Sitemap_Updated;
        partial void OnSitemap_UpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnSitemap_UpdatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Song")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Song : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Song object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="trackcount">Initial value of the trackcount property.</param>
        /// <param name="adddate">Initial value of the adddate property.</param>
        public static Song CreateSong(global::System.Int32 id, global::System.String title, global::System.Int32 trackcount, global::System.DateTime adddate)
        {
            Song song = new Song();
            song.id = id;
            song.Title = title;
            song.trackcount = trackcount;
            song.adddate = adddate;
            return song;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String songurl
        {
            get
            {
                return _songurl;
            }
            set
            {
                OnsongurlChanging(value);
                ReportPropertyChanging("songurl");
                _songurl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("songurl");
                OnsongurlChanged();
            }
        }
        private global::System.String _songurl;
        partial void OnsongurlChanging(global::System.String value);
        partial void OnsongurlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 trackcount
        {
            get
            {
                return _trackcount;
            }
            set
            {
                OntrackcountChanging(value);
                ReportPropertyChanging("trackcount");
                _trackcount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("trackcount");
                OntrackcountChanged();
            }
        }
        private global::System.Int32 _trackcount;
        partial void OntrackcountChanging(global::System.Int32 value);
        partial void OntrackcountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime adddate
        {
            get
            {
                return _adddate;
            }
            set
            {
                OnadddateChanging(value);
                ReportPropertyChanging("adddate");
                _adddate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("adddate");
                OnadddateChanged();
            }
        }
        private global::System.DateTime _adddate;
        partial void OnadddateChanging(global::System.DateTime value);
        partial void OnadddateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fileid
        {
            get
            {
                return _fileid;
            }
            set
            {
                OnfileidChanging(value);
                ReportPropertyChanging("fileid");
                _fileid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fileid");
                OnfileidChanged();
            }
        }
        private Nullable<global::System.Int32> _fileid;
        partial void OnfileidChanging(Nullable<global::System.Int32> value);
        partial void OnfileidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> artist_track_id
        {
            get
            {
                return _artist_track_id;
            }
            set
            {
                Onartist_track_idChanging(value);
                ReportPropertyChanging("artist_track_id");
                _artist_track_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("artist_track_id");
                Onartist_track_idChanged();
            }
        }
        private Nullable<global::System.Int32> _artist_track_id;
        partial void Onartist_track_idChanging(Nullable<global::System.Int32> value);
        partial void Onartist_track_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> copyright
        {
            get
            {
                return _copyright;
            }
            set
            {
                OncopyrightChanging(value);
                ReportPropertyChanging("copyright");
                _copyright = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("copyright");
                OncopyrightChanged();
            }
        }
        private Nullable<global::System.Byte> _copyright;
        partial void OncopyrightChanging(Nullable<global::System.Byte> value);
        partial void OncopyrightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullTitle
        {
            get
            {
                return _FullTitle;
            }
            set
            {
                OnFullTitleChanging(value);
                ReportPropertyChanging("FullTitle");
                _FullTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullTitle");
                OnFullTitleChanged();
            }
        }
        private global::System.String _FullTitle;
        partial void OnFullTitleChanging(global::System.String value);
        partial void OnFullTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StrippedTitle
        {
            get
            {
                return _StrippedTitle;
            }
            set
            {
                OnStrippedTitleChanging(value);
                ReportPropertyChanging("StrippedTitle");
                _StrippedTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StrippedTitle");
                OnStrippedTitleChanged();
            }
        }
        private global::System.String _StrippedTitle;
        partial void OnStrippedTitleChanging(global::System.String value);
        partial void OnStrippedTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YoutubeId
        {
            get
            {
                return _YoutubeId;
            }
            set
            {
                OnYoutubeIdChanging(value);
                ReportPropertyChanging("YoutubeId");
                _YoutubeId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YoutubeId");
                OnYoutubeIdChanged();
            }
        }
        private global::System.String _YoutubeId;
        partial void OnYoutubeIdChanging(global::System.String value);
        partial void OnYoutubeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> YoutubeProcessed
        {
            get
            {
                return _YoutubeProcessed;
            }
            set
            {
                OnYoutubeProcessedChanging(value);
                ReportPropertyChanging("YoutubeProcessed");
                _YoutubeProcessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YoutubeProcessed");
                OnYoutubeProcessedChanged();
            }
        }
        private Nullable<global::System.Boolean> _YoutubeProcessed;
        partial void OnYoutubeProcessedChanging(Nullable<global::System.Boolean> value);
        partial void OnYoutubeProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> like_count
        {
            get
            {
                return _like_count;
            }
            set
            {
                Onlike_countChanging(value);
                ReportPropertyChanging("like_count");
                _like_count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("like_count");
                Onlike_countChanged();
            }
        }
        private Nullable<global::System.Int32> _like_count;
        partial void Onlike_countChanging(Nullable<global::System.Int32> value);
        partial void Onlike_countChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UploaderId
        {
            get
            {
                return _UploaderId;
            }
            set
            {
                OnUploaderIdChanging(value);
                ReportPropertyChanging("UploaderId");
                _UploaderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploaderId");
                OnUploaderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UploaderId;
        partial void OnUploaderIdChanging(Nullable<global::System.Int32> value);
        partial void OnUploaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Double> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Double> value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Syndication
        {
            get
            {
                return _Syndication;
            }
            set
            {
                OnSyndicationChanging(value);
                ReportPropertyChanging("Syndication");
                _Syndication = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Syndication");
                OnSyndicationChanged();
            }
        }
        private Nullable<global::System.Byte> _Syndication;
        partial void OnSyndicationChanging(Nullable<global::System.Byte> value);
        partial void OnSyndicationChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="songComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class songComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new songComment object.
        /// </summary>
        /// <param name="songComment_ID">Initial value of the songComment_ID property.</param>
        public static songComment CreatesongComment(global::System.Int32 songComment_ID)
        {
            songComment songComment = new songComment();
            songComment.songComment_ID = songComment_ID;
            return songComment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 songComment_ID
        {
            get
            {
                return _songComment_ID;
            }
            set
            {
                if (_songComment_ID != value)
                {
                    OnsongComment_IDChanging(value);
                    ReportPropertyChanging("songComment_ID");
                    _songComment_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("songComment_ID");
                    OnsongComment_IDChanged();
                }
            }
        }
        private global::System.Int32 _songComment_ID;
        partial void OnsongComment_IDChanging(global::System.Int32 value);
        partial void OnsongComment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> song_ID
        {
            get
            {
                return _song_ID;
            }
            set
            {
                Onsong_IDChanging(value);
                ReportPropertyChanging("song_ID");
                _song_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("song_ID");
                Onsong_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _song_ID;
        partial void Onsong_IDChanging(Nullable<global::System.Int32> value);
        partial void Onsong_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_ID
        {
            get
            {
                return _user_ID;
            }
            set
            {
                Onuser_IDChanging(value);
                ReportPropertyChanging("user_ID");
                _user_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_ID");
                Onuser_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _user_ID;
        partial void Onuser_IDChanging(Nullable<global::System.Int32> value);
        partial void Onuser_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private Nullable<global::System.Int32> _status;
        partial void OnstatusChanging(Nullable<global::System.Int32> value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ipAddress
        {
            get
            {
                return _ipAddress;
            }
            set
            {
                OnipAddressChanging(value);
                ReportPropertyChanging("ipAddress");
                _ipAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ipAddress");
                OnipAddressChanged();
            }
        }
        private global::System.String _ipAddress;
        partial void OnipAddressChanging(global::System.String value);
        partial void OnipAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> postDate
        {
            get
            {
                return _postDate;
            }
            set
            {
                OnpostDateChanging(value);
                ReportPropertyChanging("postDate");
                _postDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("postDate");
                OnpostDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _postDate;
        partial void OnpostDateChanging(Nullable<global::System.DateTime> value);
        partial void OnpostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userName
        {
            get
            {
                return _userName;
            }
            set
            {
                OnuserNameChanging(value);
                ReportPropertyChanging("userName");
                _userName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userName");
                OnuserNameChanged();
            }
        }
        private global::System.String _userName;
        partial void OnuserNameChanging(global::System.String value);
        partial void OnuserNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="tag_ID">Initial value of the Tag_ID property.</param>
        public static Tag CreateTag(global::System.Int32 tag_ID)
        {
            Tag tag = new Tag();
            tag.Tag_ID = tag_ID;
            return tag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Tag_ID
        {
            get
            {
                return _Tag_ID;
            }
            set
            {
                if (_Tag_ID != value)
                {
                    OnTag_IDChanging(value);
                    ReportPropertyChanging("Tag_ID");
                    _Tag_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Tag_ID");
                    OnTag_IDChanged();
                }
            }
        }
        private global::System.Int32 _Tag_ID;
        partial void OnTag_IDChanging(global::System.Int32 value);
        partial void OnTag_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag_Name
        {
            get
            {
                return _Tag_Name;
            }
            set
            {
                OnTag_NameChanging(value);
                ReportPropertyChanging("Tag_Name");
                _Tag_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tag_Name");
                OnTag_NameChanged();
            }
        }
        private global::System.String _Tag_Name;
        partial void OnTag_NameChanging(global::System.String value);
        partial void OnTag_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_Group_ID
        {
            get
            {
                return _Tag_Group_ID;
            }
            set
            {
                OnTag_Group_IDChanging(value);
                ReportPropertyChanging("Tag_Group_ID");
                _Tag_Group_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_Group_ID");
                OnTag_Group_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_Group_ID;
        partial void OnTag_Group_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTag_Group_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_Genre_ID
        {
            get
            {
                return _Tag_Genre_ID;
            }
            set
            {
                OnTag_Genre_IDChanging(value);
                ReportPropertyChanging("Tag_Genre_ID");
                _Tag_Genre_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_Genre_ID");
                OnTag_Genre_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_Genre_ID;
        partial void OnTag_Genre_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTag_Genre_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_Click_Num
        {
            get
            {
                return _Tag_Click_Num;
            }
            set
            {
                OnTag_Click_NumChanging(value);
                ReportPropertyChanging("Tag_Click_Num");
                _Tag_Click_Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_Click_Num");
                OnTag_Click_NumChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_Click_Num;
        partial void OnTag_Click_NumChanging(Nullable<global::System.Int32> value);
        partial void OnTag_Click_NumChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Tag_News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag_News : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag_News object.
        /// </summary>
        /// <param name="tag_News_ID">Initial value of the Tag_News_ID property.</param>
        public static Tag_News CreateTag_News(global::System.Int32 tag_News_ID)
        {
            Tag_News tag_News = new Tag_News();
            tag_News.Tag_News_ID = tag_News_ID;
            return tag_News;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Tag_News_ID
        {
            get
            {
                return _Tag_News_ID;
            }
            set
            {
                if (_Tag_News_ID != value)
                {
                    OnTag_News_IDChanging(value);
                    ReportPropertyChanging("Tag_News_ID");
                    _Tag_News_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Tag_News_ID");
                    OnTag_News_IDChanged();
                }
            }
        }
        private global::System.Int32 _Tag_News_ID;
        partial void OnTag_News_IDChanging(global::System.Int32 value);
        partial void OnTag_News_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_ID
        {
            get
            {
                return _Tag_ID;
            }
            set
            {
                OnTag_IDChanging(value);
                ReportPropertyChanging("Tag_ID");
                _Tag_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_ID");
                OnTag_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_ID;
        partial void OnTag_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTag_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Article_ID
        {
            get
            {
                return _Article_ID;
            }
            set
            {
                OnArticle_IDChanging(value);
                ReportPropertyChanging("Article_ID");
                _Article_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Article_ID");
                OnArticle_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Article_ID;
        partial void OnArticle_IDChanging(Nullable<global::System.Int32> value);
        partial void OnArticle_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_Click_Num
        {
            get
            {
                return _Tag_Click_Num;
            }
            set
            {
                OnTag_Click_NumChanging(value);
                ReportPropertyChanging("Tag_Click_Num");
                _Tag_Click_Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_Click_Num");
                OnTag_Click_NumChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_Click_Num;
        partial void OnTag_Click_NumChanging(Nullable<global::System.Int32> value);
        partial void OnTag_Click_NumChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="Tag_Playlist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag_Playlist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag_Playlist object.
        /// </summary>
        /// <param name="tag_Playlist_ID">Initial value of the Tag_Playlist_ID property.</param>
        public static Tag_Playlist CreateTag_Playlist(global::System.Int32 tag_Playlist_ID)
        {
            Tag_Playlist tag_Playlist = new Tag_Playlist();
            tag_Playlist.Tag_Playlist_ID = tag_Playlist_ID;
            return tag_Playlist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Tag_Playlist_ID
        {
            get
            {
                return _Tag_Playlist_ID;
            }
            set
            {
                if (_Tag_Playlist_ID != value)
                {
                    OnTag_Playlist_IDChanging(value);
                    ReportPropertyChanging("Tag_Playlist_ID");
                    _Tag_Playlist_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Tag_Playlist_ID");
                    OnTag_Playlist_IDChanged();
                }
            }
        }
        private global::System.Int32 _Tag_Playlist_ID;
        partial void OnTag_Playlist_IDChanging(global::System.Int32 value);
        partial void OnTag_Playlist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_ID
        {
            get
            {
                return _Tag_ID;
            }
            set
            {
                OnTag_IDChanging(value);
                ReportPropertyChanging("Tag_ID");
                _Tag_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_ID");
                OnTag_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_ID;
        partial void OnTag_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTag_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Playlist_ID
        {
            get
            {
                return _Playlist_ID;
            }
            set
            {
                OnPlaylist_IDChanging(value);
                ReportPropertyChanging("Playlist_ID");
                _Playlist_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Playlist_ID");
                OnPlaylist_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Playlist_ID;
        partial void OnPlaylist_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPlaylist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_Click_Num
        {
            get
            {
                return _Tag_Click_Num;
            }
            set
            {
                OnTag_Click_NumChanging(value);
                ReportPropertyChanging("Tag_Click_Num");
                _Tag_Click_Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_Click_Num");
                OnTag_Click_NumChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_Click_Num;
        partial void OnTag_Click_NumChanging(Nullable<global::System.Int32> value);
        partial void OnTag_Click_NumChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="TrackLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackLogin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackLogin object.
        /// </summary>
        /// <param name="trackLogin_ID">Initial value of the TrackLogin_ID property.</param>
        public static TrackLogin CreateTrackLogin(global::System.Int32 trackLogin_ID)
        {
            TrackLogin trackLogin = new TrackLogin();
            trackLogin.TrackLogin_ID = trackLogin_ID;
            return trackLogin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrackLogin_ID
        {
            get
            {
                return _TrackLogin_ID;
            }
            set
            {
                if (_TrackLogin_ID != value)
                {
                    OnTrackLogin_IDChanging(value);
                    ReportPropertyChanging("TrackLogin_ID");
                    _TrackLogin_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrackLogin_ID");
                    OnTrackLogin_IDChanged();
                }
            }
        }
        private global::System.Int32 _TrackLogin_ID;
        partial void OnTrackLogin_IDChanging(global::System.Int32 value);
        partial void OnTrackLogin_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Login_Date
        {
            get
            {
                return _Login_Date;
            }
            set
            {
                OnLogin_DateChanging(value);
                ReportPropertyChanging("Login_Date");
                _Login_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Login_Date");
                OnLogin_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Login_Date;
        partial void OnLogin_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnLogin_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> User_id
        {
            get
            {
                return _User_id;
            }
            set
            {
                OnUser_idChanging(value);
                ReportPropertyChanging("User_id");
                _User_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_id");
                OnUser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _User_id;
        partial void OnUser_idChanging(Nullable<global::System.Int32> value);
        partial void OnUser_idChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="TrackWebsite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackWebsite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackWebsite object.
        /// </summary>
        /// <param name="trackWebsite_ID">Initial value of the TrackWebsite_ID property.</param>
        public static TrackWebsite CreateTrackWebsite(global::System.Int32 trackWebsite_ID)
        {
            TrackWebsite trackWebsite = new TrackWebsite();
            trackWebsite.TrackWebsite_ID = trackWebsite_ID;
            return trackWebsite;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrackWebsite_ID
        {
            get
            {
                return _TrackWebsite_ID;
            }
            set
            {
                if (_TrackWebsite_ID != value)
                {
                    OnTrackWebsite_IDChanging(value);
                    ReportPropertyChanging("TrackWebsite_ID");
                    _TrackWebsite_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrackWebsite_ID");
                    OnTrackWebsite_IDChanged();
                }
            }
        }
        private global::System.Int32 _TrackWebsite_ID;
        partial void OnTrackWebsite_IDChanging(global::System.Int32 value);
        partial void OnTrackWebsite_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackWebsite_Key
        {
            get
            {
                return _TrackWebsite_Key;
            }
            set
            {
                OnTrackWebsite_KeyChanging(value);
                ReportPropertyChanging("TrackWebsite_Key");
                _TrackWebsite_Key = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackWebsite_Key");
                OnTrackWebsite_KeyChanged();
            }
        }
        private global::System.String _TrackWebsite_Key;
        partial void OnTrackWebsite_KeyChanging(global::System.String value);
        partial void OnTrackWebsite_KeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TrackWebsite_KeyID
        {
            get
            {
                return _TrackWebsite_KeyID;
            }
            set
            {
                OnTrackWebsite_KeyIDChanging(value);
                ReportPropertyChanging("TrackWebsite_KeyID");
                _TrackWebsite_KeyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackWebsite_KeyID");
                OnTrackWebsite_KeyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TrackWebsite_KeyID;
        partial void OnTrackWebsite_KeyIDChanging(Nullable<global::System.Int32> value);
        partial void OnTrackWebsite_KeyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackWebsite_Val
        {
            get
            {
                return _TrackWebsite_Val;
            }
            set
            {
                OnTrackWebsite_ValChanging(value);
                ReportPropertyChanging("TrackWebsite_Val");
                _TrackWebsite_Val = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackWebsite_Val");
                OnTrackWebsite_ValChanged();
            }
        }
        private global::System.String _TrackWebsite_Val;
        partial void OnTrackWebsite_ValChanging(global::System.String value);
        partial void OnTrackWebsite_ValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackDate
        {
            get
            {
                return _TrackDate;
            }
            set
            {
                OnTrackDateChanging(value);
                ReportPropertyChanging("TrackDate");
                _TrackDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackDate");
                OnTrackDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackDate;
        partial void OnTrackDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="userContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class userContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new userContact object.
        /// </summary>
        /// <param name="contactID">Initial value of the contactID property.</param>
        public static userContact CreateuserContact(global::System.Int32 contactID)
        {
            userContact userContact = new userContact();
            userContact.contactID = contactID;
            return userContact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 contactID
        {
            get
            {
                return _contactID;
            }
            set
            {
                if (_contactID != value)
                {
                    OncontactIDChanging(value);
                    ReportPropertyChanging("contactID");
                    _contactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("contactID");
                    OncontactIDChanged();
                }
            }
        }
        private global::System.Int32 _contactID;
        partial void OncontactIDChanging(global::System.Int32 value);
        partial void OncontactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> contactType
        {
            get
            {
                return _contactType;
            }
            set
            {
                OncontactTypeChanging(value);
                ReportPropertyChanging("contactType");
                _contactType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("contactType");
                OncontactTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _contactType;
        partial void OncontactTypeChanging(Nullable<global::System.Int32> value);
        partial void OncontactTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactText
        {
            get
            {
                return _contactText;
            }
            set
            {
                OncontactTextChanging(value);
                ReportPropertyChanging("contactText");
                _contactText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactText");
                OncontactTextChanged();
            }
        }
        private global::System.String _contactText;
        partial void OncontactTextChanging(global::System.String value);
        partial void OncontactTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactEmail
        {
            get
            {
                return _contactEmail;
            }
            set
            {
                OncontactEmailChanging(value);
                ReportPropertyChanging("contactEmail");
                _contactEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactEmail");
                OncontactEmailChanged();
            }
        }
        private global::System.String _contactEmail;
        partial void OncontactEmailChanging(global::System.String value);
        partial void OncontactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactSubject
        {
            get
            {
                return _contactSubject;
            }
            set
            {
                OncontactSubjectChanging(value);
                ReportPropertyChanging("contactSubject");
                _contactSubject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactSubject");
                OncontactSubjectChanged();
            }
        }
        private global::System.String _contactSubject;
        partial void OncontactSubjectChanging(global::System.String value);
        partial void OncontactSubjectChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="videoClip")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class videoClip : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new videoClip object.
        /// </summary>
        /// <param name="videoClip_ID">Initial value of the videoClip_ID property.</param>
        public static videoClip CreatevideoClip(global::System.Int32 videoClip_ID)
        {
            videoClip videoClip = new videoClip();
            videoClip.videoClip_ID = videoClip_ID;
            return videoClip;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 videoClip_ID
        {
            get
            {
                return _videoClip_ID;
            }
            set
            {
                if (_videoClip_ID != value)
                {
                    OnvideoClip_IDChanging(value);
                    ReportPropertyChanging("videoClip_ID");
                    _videoClip_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("videoClip_ID");
                    OnvideoClip_IDChanged();
                }
            }
        }
        private global::System.Int32 _videoClip_ID;
        partial void OnvideoClip_IDChanging(global::System.Int32 value);
        partial void OnvideoClip_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpVotes
        {
            get
            {
                return _UpVotes;
            }
            set
            {
                OnUpVotesChanging(value);
                ReportPropertyChanging("UpVotes");
                _UpVotes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpVotes");
                OnUpVotesChanged();
            }
        }
        private Nullable<global::System.Int32> _UpVotes;
        partial void OnUpVotesChanging(Nullable<global::System.Int32> value);
        partial void OnUpVotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DownVotes
        {
            get
            {
                return _DownVotes;
            }
            set
            {
                OnDownVotesChanging(value);
                ReportPropertyChanging("DownVotes");
                _DownVotes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownVotes");
                OnDownVotesChanged();
            }
        }
        private Nullable<global::System.Int32> _DownVotes;
        partial void OnDownVotesChanging(Nullable<global::System.Int32> value);
        partial void OnDownVotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ViewsNum
        {
            get
            {
                return _ViewsNum;
            }
            set
            {
                OnViewsNumChanging(value);
                ReportPropertyChanging("ViewsNum");
                _ViewsNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewsNum");
                OnViewsNumChanged();
            }
        }
        private Nullable<global::System.Int32> _ViewsNum;
        partial void OnViewsNumChanging(Nullable<global::System.Int32> value);
        partial void OnViewsNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UploadedBy
        {
            get
            {
                return _UploadedBy;
            }
            set
            {
                OnUploadedByChanging(value);
                ReportPropertyChanging("UploadedBy");
                _UploadedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedBy");
                OnUploadedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UploadedBy;
        partial void OnUploadedByChanging(Nullable<global::System.Int32> value);
        partial void OnUploadedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UploadedByName
        {
            get
            {
                return _UploadedByName;
            }
            set
            {
                OnUploadedByNameChanging(value);
                ReportPropertyChanging("UploadedByName");
                _UploadedByName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UploadedByName");
                OnUploadedByNameChanged();
            }
        }
        private global::System.String _UploadedByName;
        partial void OnUploadedByNameChanging(global::System.String value);
        partial void OnUploadedByNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UploadDate
        {
            get
            {
                return _UploadDate;
            }
            set
            {
                OnUploadDateChanging(value);
                ReportPropertyChanging("UploadDate");
                _UploadDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadDate");
                OnUploadDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UploadDate;
        partial void OnUploadDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUploadDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int16> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int16> value);
        partial void OnStatusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="videoComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class videoComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new videoComment object.
        /// </summary>
        /// <param name="videoComment_ID">Initial value of the videoComment_ID property.</param>
        public static videoComment CreatevideoComment(global::System.Int32 videoComment_ID)
        {
            videoComment videoComment = new videoComment();
            videoComment.videoComment_ID = videoComment_ID;
            return videoComment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 videoComment_ID
        {
            get
            {
                return _videoComment_ID;
            }
            set
            {
                if (_videoComment_ID != value)
                {
                    OnvideoComment_IDChanging(value);
                    ReportPropertyChanging("videoComment_ID");
                    _videoComment_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("videoComment_ID");
                    OnvideoComment_IDChanged();
                }
            }
        }
        private global::System.Int32 _videoComment_ID;
        partial void OnvideoComment_IDChanging(global::System.Int32 value);
        partial void OnvideoComment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> videoClip_ID
        {
            get
            {
                return _videoClip_ID;
            }
            set
            {
                OnvideoClip_IDChanging(value);
                ReportPropertyChanging("videoClip_ID");
                _videoClip_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("videoClip_ID");
                OnvideoClip_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _videoClip_ID;
        partial void OnvideoClip_IDChanging(Nullable<global::System.Int32> value);
        partial void OnvideoClip_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_ID
        {
            get
            {
                return _user_ID;
            }
            set
            {
                Onuser_IDChanging(value);
                ReportPropertyChanging("user_ID");
                _user_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_ID");
                Onuser_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _user_ID;
        partial void Onuser_IDChanging(Nullable<global::System.Int32> value);
        partial void Onuser_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private Nullable<global::System.Int32> _status;
        partial void OnstatusChanging(Nullable<global::System.Int32> value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ipAddress
        {
            get
            {
                return _ipAddress;
            }
            set
            {
                OnipAddressChanging(value);
                ReportPropertyChanging("ipAddress");
                _ipAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ipAddress");
                OnipAddressChanged();
            }
        }
        private global::System.String _ipAddress;
        partial void OnipAddressChanging(global::System.String value);
        partial void OnipAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> postDate
        {
            get
            {
                return _postDate;
            }
            set
            {
                OnpostDateChanging(value);
                ReportPropertyChanging("postDate");
                _postDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("postDate");
                OnpostDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _postDate;
        partial void OnpostDateChanging(Nullable<global::System.DateTime> value);
        partial void OnpostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userName
        {
            get
            {
                return _userName;
            }
            set
            {
                OnuserNameChanging(value);
                ReportPropertyChanging("userName");
                _userName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userName");
                OnuserNameChanged();
            }
        }
        private global::System.String _userName;
        partial void OnuserNameChanging(global::System.String value);
        partial void OnuserNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="videoFeatured")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class videoFeatured : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new videoFeatured object.
        /// </summary>
        /// <param name="videoFeatured_ID">Initial value of the videoFeatured_ID property.</param>
        public static videoFeatured CreatevideoFeatured(global::System.Int32 videoFeatured_ID)
        {
            videoFeatured videoFeatured = new videoFeatured();
            videoFeatured.videoFeatured_ID = videoFeatured_ID;
            return videoFeatured;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 videoFeatured_ID
        {
            get
            {
                return _videoFeatured_ID;
            }
            set
            {
                if (_videoFeatured_ID != value)
                {
                    OnvideoFeatured_IDChanging(value);
                    ReportPropertyChanging("videoFeatured_ID");
                    _videoFeatured_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("videoFeatured_ID");
                    OnvideoFeatured_IDChanged();
                }
            }
        }
        private global::System.Int32 _videoFeatured_ID;
        partial void OnvideoFeatured_IDChanging(global::System.Int32 value);
        partial void OnvideoFeatured_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> videoClip_ID
        {
            get
            {
                return _videoClip_ID;
            }
            set
            {
                OnvideoClip_IDChanging(value);
                ReportPropertyChanging("videoClip_ID");
                _videoClip_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("videoClip_ID");
                OnvideoClip_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _videoClip_ID;
        partial void OnvideoClip_IDChanging(Nullable<global::System.Int32> value);
        partial void OnvideoClip_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageSrc
        {
            get
            {
                return _ImageSrc;
            }
            set
            {
                OnImageSrcChanging(value);
                ReportPropertyChanging("ImageSrc");
                _ImageSrc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageSrc");
                OnImageSrcChanged();
            }
        }
        private global::System.String _ImageSrc;
        partial void OnImageSrcChanging(global::System.String value);
        partial void OnImageSrcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="VisualSearch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VisualSearch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VisualSearch object.
        /// </summary>
        /// <param name="visualSearch_ID">Initial value of the VisualSearch_ID property.</param>
        public static VisualSearch CreateVisualSearch(global::System.Int32 visualSearch_ID)
        {
            VisualSearch visualSearch = new VisualSearch();
            visualSearch.VisualSearch_ID = visualSearch_ID;
            return visualSearch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VisualSearch_ID
        {
            get
            {
                return _VisualSearch_ID;
            }
            set
            {
                if (_VisualSearch_ID != value)
                {
                    OnVisualSearch_IDChanging(value);
                    ReportPropertyChanging("VisualSearch_ID");
                    _VisualSearch_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VisualSearch_ID");
                    OnVisualSearch_IDChanged();
                }
            }
        }
        private global::System.Int32 _VisualSearch_ID;
        partial void OnVisualSearch_IDChanging(global::System.Int32 value);
        partial void OnVisualSearch_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Artist_Name
        {
            get
            {
                return _Artist_Name;
            }
            set
            {
                OnArtist_NameChanging(value);
                ReportPropertyChanging("Artist_Name");
                _Artist_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Artist_Name");
                OnArtist_NameChanged();
            }
        }
        private global::System.String _Artist_Name;
        partial void OnArtist_NameChanging(global::System.String value);
        partial void OnArtist_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Genre_ID
        {
            get
            {
                return _Genre_ID;
            }
            set
            {
                OnGenre_IDChanging(value);
                ReportPropertyChanging("Genre_ID");
                _Genre_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Genre_ID");
                OnGenre_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Genre_ID;
        partial void OnGenre_IDChanging(Nullable<global::System.Int32> value);
        partial void OnGenre_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ImWidth
        {
            get
            {
                return _ImWidth;
            }
            set
            {
                OnImWidthChanging(value);
                ReportPropertyChanging("ImWidth");
                _ImWidth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImWidth");
                OnImWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _ImWidth;
        partial void OnImWidthChanging(Nullable<global::System.Int32> value);
        partial void OnImWidthChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hypster_tv_Model", Name="VoteForSong")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VoteForSong : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VoteForSong object.
        /// </summary>
        /// <param name="voteForSong_ID">Initial value of the VoteForSong_ID property.</param>
        public static VoteForSong CreateVoteForSong(global::System.Int32 voteForSong_ID)
        {
            VoteForSong voteForSong = new VoteForSong();
            voteForSong.VoteForSong_ID = voteForSong_ID;
            return voteForSong;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VoteForSong_ID
        {
            get
            {
                return _VoteForSong_ID;
            }
            set
            {
                if (_VoteForSong_ID != value)
                {
                    OnVoteForSong_IDChanging(value);
                    ReportPropertyChanging("VoteForSong_ID");
                    _VoteForSong_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VoteForSong_ID");
                    OnVoteForSong_IDChanged();
                }
            }
        }
        private global::System.Int32 _VoteForSong_ID;
        partial void OnVoteForSong_IDChanging(global::System.Int32 value);
        partial void OnVoteForSong_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Song1_ID
        {
            get
            {
                return _Song1_ID;
            }
            set
            {
                OnSong1_IDChanging(value);
                ReportPropertyChanging("Song1_ID");
                _Song1_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Song1_ID");
                OnSong1_IDChanged();
            }
        }
        private global::System.String _Song1_ID;
        partial void OnSong1_IDChanging(global::System.String value);
        partial void OnSong1_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Song1_Title
        {
            get
            {
                return _Song1_Title;
            }
            set
            {
                OnSong1_TitleChanging(value);
                ReportPropertyChanging("Song1_Title");
                _Song1_Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Song1_Title");
                OnSong1_TitleChanged();
            }
        }
        private global::System.String _Song1_Title;
        partial void OnSong1_TitleChanging(global::System.String value);
        partial void OnSong1_TitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Song2_ID
        {
            get
            {
                return _Song2_ID;
            }
            set
            {
                OnSong2_IDChanging(value);
                ReportPropertyChanging("Song2_ID");
                _Song2_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Song2_ID");
                OnSong2_IDChanged();
            }
        }
        private global::System.String _Song2_ID;
        partial void OnSong2_IDChanging(global::System.String value);
        partial void OnSong2_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Song2_Title
        {
            get
            {
                return _Song2_Title;
            }
            set
            {
                OnSong2_TitleChanging(value);
                ReportPropertyChanging("Song2_Title");
                _Song2_Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Song2_Title");
                OnSong2_TitleChanged();
            }
        }
        private global::System.String _Song2_Title;
        partial void OnSong2_TitleChanging(global::System.String value);
        partial void OnSong2_TitleChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="FeaturedPlaylist_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FeaturedPlaylist_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedPlaylist_Result object.
        /// </summary>
        /// <param name="featuredPlaylist_ID">Initial value of the FeaturedPlaylist_ID property.</param>
        public static FeaturedPlaylist_Result CreateFeaturedPlaylist_Result(global::System.Int32 featuredPlaylist_ID)
        {
            FeaturedPlaylist_Result featuredPlaylist_Result = new FeaturedPlaylist_Result();
            featuredPlaylist_Result.FeaturedPlaylist_ID = featuredPlaylist_ID;
            return featuredPlaylist_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeaturedPlaylist_ID
        {
            get
            {
                return _FeaturedPlaylist_ID;
            }
            set
            {
                OnFeaturedPlaylist_IDChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_ID");
                _FeaturedPlaylist_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedPlaylist_ID");
                OnFeaturedPlaylist_IDChanged();
            }
        }
        private global::System.Int32 _FeaturedPlaylist_ID;
        partial void OnFeaturedPlaylist_IDChanging(global::System.Int32 value);
        partial void OnFeaturedPlaylist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeaturedPlaylist_PlaylistID
        {
            get
            {
                return _FeaturedPlaylist_PlaylistID;
            }
            set
            {
                OnFeaturedPlaylist_PlaylistIDChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_PlaylistID");
                _FeaturedPlaylist_PlaylistID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedPlaylist_PlaylistID");
                OnFeaturedPlaylist_PlaylistIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FeaturedPlaylist_PlaylistID;
        partial void OnFeaturedPlaylist_PlaylistIDChanging(Nullable<global::System.Int32> value);
        partial void OnFeaturedPlaylist_PlaylistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeaturedPlaylist_UserID
        {
            get
            {
                return _FeaturedPlaylist_UserID;
            }
            set
            {
                OnFeaturedPlaylist_UserIDChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_UserID");
                _FeaturedPlaylist_UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedPlaylist_UserID");
                OnFeaturedPlaylist_UserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FeaturedPlaylist_UserID;
        partial void OnFeaturedPlaylist_UserIDChanging(Nullable<global::System.Int32> value);
        partial void OnFeaturedPlaylist_UserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeaturedPlaylist_PlaylistName
        {
            get
            {
                return _FeaturedPlaylist_PlaylistName;
            }
            set
            {
                OnFeaturedPlaylist_PlaylistNameChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_PlaylistName");
                _FeaturedPlaylist_PlaylistName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FeaturedPlaylist_PlaylistName");
                OnFeaturedPlaylist_PlaylistNameChanged();
            }
        }
        private global::System.String _FeaturedPlaylist_PlaylistName;
        partial void OnFeaturedPlaylist_PlaylistNameChanging(global::System.String value);
        partial void OnFeaturedPlaylist_PlaylistNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FeaturedPlaylist_CreateDate
        {
            get
            {
                return _FeaturedPlaylist_CreateDate;
            }
            set
            {
                OnFeaturedPlaylist_CreateDateChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_CreateDate");
                _FeaturedPlaylist_CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeaturedPlaylist_CreateDate");
                OnFeaturedPlaylist_CreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FeaturedPlaylist_CreateDate;
        partial void OnFeaturedPlaylist_CreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFeaturedPlaylist_CreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeaturedPlaylist_Guid
        {
            get
            {
                return _FeaturedPlaylist_Guid;
            }
            set
            {
                OnFeaturedPlaylist_GuidChanging(value);
                ReportPropertyChanging("FeaturedPlaylist_Guid");
                _FeaturedPlaylist_Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FeaturedPlaylist_Guid");
                OnFeaturedPlaylist_GuidChanged();
            }
        }
        private global::System.String _FeaturedPlaylist_Guid;
        partial void OnFeaturedPlaylist_GuidChanging(global::System.String value);
        partial void OnFeaturedPlaylist_GuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Likes
        {
            get
            {
                return _Likes;
            }
            set
            {
                OnLikesChanging(value);
                ReportPropertyChanging("Likes");
                _Likes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Likes");
                OnLikesChanged();
            }
        }
        private Nullable<global::System.Int32> _Likes;
        partial void OnLikesChanging(Nullable<global::System.Int32> value);
        partial void OnLikesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ViewsNum
        {
            get
            {
                return _ViewsNum;
            }
            set
            {
                OnViewsNumChanging(value);
                ReportPropertyChanging("ViewsNum");
                _ViewsNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewsNum");
                OnViewsNumChanged();
            }
        }
        private Nullable<global::System.Int32> _ViewsNum;
        partial void OnViewsNumChanging(Nullable<global::System.Int32> value);
        partial void OnViewsNumChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="Members_DeactivateCheck_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Members_DeactivateCheck_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Members_DeactivateCheck_Result object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isDeActivated">Initial value of the IsDeActivated property.</param>
        public static Members_DeactivateCheck_Result CreateMembers_DeactivateCheck_Result(global::System.Int32 userId, global::System.Int32 isDeActivated)
        {
            Members_DeactivateCheck_Result members_DeactivateCheck_Result = new Members_DeactivateCheck_Result();
            members_DeactivateCheck_Result.UserId = userId;
            members_DeactivateCheck_Result.IsDeActivated = isDeActivated;
            return members_DeactivateCheck_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IsDeActivated
        {
            get
            {
                return _IsDeActivated;
            }
            set
            {
                OnIsDeActivatedChanging(value);
                ReportPropertyChanging("IsDeActivated");
                _IsDeActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeActivated");
                OnIsDeActivatedChanged();
            }
        }
        private global::System.Int32 _IsDeActivated;
        partial void OnIsDeActivatedChanging(global::System.Int32 value);
        partial void OnIsDeActivatedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="Mix_GetGenresAndCovers")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Mix_GetGenresAndCovers : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Mix_GetGenresAndCovers object.
        /// </summary>
        /// <param name="genre_ID">Initial value of the Genre_ID property.</param>
        public static Mix_GetGenresAndCovers CreateMix_GetGenresAndCovers(global::System.Int32 genre_ID)
        {
            Mix_GetGenresAndCovers mix_GetGenresAndCovers = new Mix_GetGenresAndCovers();
            mix_GetGenresAndCovers.Genre_ID = genre_ID;
            return mix_GetGenresAndCovers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Genre_ID
        {
            get
            {
                return _Genre_ID;
            }
            set
            {
                OnGenre_IDChanging(value);
                ReportPropertyChanging("Genre_ID");
                _Genre_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Genre_ID");
                OnGenre_IDChanged();
            }
        }
        private global::System.Int32 _Genre_ID;
        partial void OnGenre_IDChanging(global::System.Int32 value);
        partial void OnGenre_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GenreName
        {
            get
            {
                return _GenreName;
            }
            set
            {
                OnGenreNameChanging(value);
                ReportPropertyChanging("GenreName");
                _GenreName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GenreName");
                OnGenreNameChanged();
            }
        }
        private global::System.String _GenreName;
        partial void OnGenreNameChanging(global::System.String value);
        partial void OnGenreNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mix_Cover
        {
            get
            {
                return _Mix_Cover;
            }
            set
            {
                OnMix_CoverChanging(value);
                ReportPropertyChanging("Mix_Cover");
                _Mix_Cover = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mix_Cover");
                OnMix_CoverChanged();
            }
        }
        private global::System.String _Mix_Cover;
        partial void OnMix_CoverChanging(global::System.String value);
        partial void OnMix_CoverChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="MostPopularHypsterSongs_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MostPopularHypsterSongs_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MostPopularHypsterSongs_Result object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static MostPopularHypsterSongs_Result CreateMostPopularHypsterSongs_Result(global::System.Int32 id, global::System.String title)
        {
            MostPopularHypsterSongs_Result mostPopularHypsterSongs_Result = new MostPopularHypsterSongs_Result();
            mostPopularHypsterSongs_Result.id = id;
            mostPopularHypsterSongs_Result.Title = title;
            return mostPopularHypsterSongs_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YoutubeId
        {
            get
            {
                return _YoutubeId;
            }
            set
            {
                OnYoutubeIdChanging(value);
                ReportPropertyChanging("YoutubeId");
                _YoutubeId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YoutubeId");
                OnYoutubeIdChanged();
            }
        }
        private global::System.String _YoutubeId;
        partial void OnYoutubeIdChanging(global::System.String value);
        partial void OnYoutubeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SongsNum
        {
            get
            {
                return _SongsNum;
            }
            set
            {
                OnSongsNumChanging(value);
                ReportPropertyChanging("SongsNum");
                _SongsNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SongsNum");
                OnSongsNumChanged();
            }
        }
        private Nullable<global::System.Int32> _SongsNum;
        partial void OnSongsNumChanging(Nullable<global::System.Int32> value);
        partial void OnSongsNumChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="PlaylistData_Song")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PlaylistData_Song : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlaylistData_Song object.
        /// </summary>
        /// <param name="playlist_track_id">Initial value of the playlist_track_id property.</param>
        /// <param name="sortid">Initial value of the sortid property.</param>
        public static PlaylistData_Song CreatePlaylistData_Song(global::System.Int32 playlist_track_id, global::System.Int16 sortid)
        {
            PlaylistData_Song playlistData_Song = new PlaylistData_Song();
            playlistData_Song.playlist_track_id = playlist_track_id;
            playlistData_Song.sortid = sortid;
            return playlistData_Song;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 playlist_track_id
        {
            get
            {
                return _playlist_track_id;
            }
            set
            {
                Onplaylist_track_idChanging(value);
                ReportPropertyChanging("playlist_track_id");
                _playlist_track_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlist_track_id");
                Onplaylist_track_idChanged();
            }
        }
        private global::System.Int32 _playlist_track_id;
        partial void Onplaylist_track_idChanging(global::System.Int32 value);
        partial void Onplaylist_track_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private Nullable<global::System.Int32> _id;
        partial void OnidChanging(Nullable<global::System.Int32> value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String songurl
        {
            get
            {
                return _songurl;
            }
            set
            {
                OnsongurlChanging(value);
                ReportPropertyChanging("songurl");
                _songurl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("songurl");
                OnsongurlChanged();
            }
        }
        private global::System.String _songurl;
        partial void OnsongurlChanging(global::System.String value);
        partial void OnsongurlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> trackcount
        {
            get
            {
                return _trackcount;
            }
            set
            {
                OntrackcountChanging(value);
                ReportPropertyChanging("trackcount");
                _trackcount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("trackcount");
                OntrackcountChanged();
            }
        }
        private Nullable<global::System.Int32> _trackcount;
        partial void OntrackcountChanging(Nullable<global::System.Int32> value);
        partial void OntrackcountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> adddate
        {
            get
            {
                return _adddate;
            }
            set
            {
                OnadddateChanging(value);
                ReportPropertyChanging("adddate");
                _adddate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("adddate");
                OnadddateChanged();
            }
        }
        private Nullable<global::System.DateTime> _adddate;
        partial void OnadddateChanging(Nullable<global::System.DateTime> value);
        partial void OnadddateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fileid
        {
            get
            {
                return _fileid;
            }
            set
            {
                OnfileidChanging(value);
                ReportPropertyChanging("fileid");
                _fileid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fileid");
                OnfileidChanged();
            }
        }
        private Nullable<global::System.Int32> _fileid;
        partial void OnfileidChanging(Nullable<global::System.Int32> value);
        partial void OnfileidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> artist_track_id
        {
            get
            {
                return _artist_track_id;
            }
            set
            {
                Onartist_track_idChanging(value);
                ReportPropertyChanging("artist_track_id");
                _artist_track_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("artist_track_id");
                Onartist_track_idChanged();
            }
        }
        private Nullable<global::System.Int32> _artist_track_id;
        partial void Onartist_track_idChanging(Nullable<global::System.Int32> value);
        partial void Onartist_track_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> copyright
        {
            get
            {
                return _copyright;
            }
            set
            {
                OncopyrightChanging(value);
                ReportPropertyChanging("copyright");
                _copyright = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("copyright");
                OncopyrightChanged();
            }
        }
        private Nullable<global::System.Byte> _copyright;
        partial void OncopyrightChanging(Nullable<global::System.Byte> value);
        partial void OncopyrightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullTitle
        {
            get
            {
                return _FullTitle;
            }
            set
            {
                OnFullTitleChanging(value);
                ReportPropertyChanging("FullTitle");
                _FullTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullTitle");
                OnFullTitleChanged();
            }
        }
        private global::System.String _FullTitle;
        partial void OnFullTitleChanging(global::System.String value);
        partial void OnFullTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StrippedTitle
        {
            get
            {
                return _StrippedTitle;
            }
            set
            {
                OnStrippedTitleChanging(value);
                ReportPropertyChanging("StrippedTitle");
                _StrippedTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StrippedTitle");
                OnStrippedTitleChanged();
            }
        }
        private global::System.String _StrippedTitle;
        partial void OnStrippedTitleChanging(global::System.String value);
        partial void OnStrippedTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YoutubeId
        {
            get
            {
                return _YoutubeId;
            }
            set
            {
                OnYoutubeIdChanging(value);
                ReportPropertyChanging("YoutubeId");
                _YoutubeId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YoutubeId");
                OnYoutubeIdChanged();
            }
        }
        private global::System.String _YoutubeId;
        partial void OnYoutubeIdChanging(global::System.String value);
        partial void OnYoutubeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> YoutubeProcessed
        {
            get
            {
                return _YoutubeProcessed;
            }
            set
            {
                OnYoutubeProcessedChanging(value);
                ReportPropertyChanging("YoutubeProcessed");
                _YoutubeProcessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YoutubeProcessed");
                OnYoutubeProcessedChanged();
            }
        }
        private Nullable<global::System.Boolean> _YoutubeProcessed;
        partial void OnYoutubeProcessedChanging(Nullable<global::System.Boolean> value);
        partial void OnYoutubeProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> like_count
        {
            get
            {
                return _like_count;
            }
            set
            {
                Onlike_countChanging(value);
                ReportPropertyChanging("like_count");
                _like_count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("like_count");
                Onlike_countChanged();
            }
        }
        private Nullable<global::System.Int32> _like_count;
        partial void Onlike_countChanging(Nullable<global::System.Int32> value);
        partial void Onlike_countChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UploaderId
        {
            get
            {
                return _UploaderId;
            }
            set
            {
                OnUploaderIdChanging(value);
                ReportPropertyChanging("UploaderId");
                _UploaderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploaderId");
                OnUploaderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UploaderId;
        partial void OnUploaderIdChanging(Nullable<global::System.Int32> value);
        partial void OnUploaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 sortid
        {
            get
            {
                return _sortid;
            }
            set
            {
                OnsortidChanging(value);
                ReportPropertyChanging("sortid");
                _sortid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sortid");
                OnsortidChanged();
            }
        }
        private global::System.Int16 _sortid;
        partial void OnsortidChanging(global::System.Int16 value);
        partial void OnsortidChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="sp_Compatibility_CompCheck_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_Compatibility_CompCheck_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_Compatibility_CompCheck_Result object.
        /// </summary>
        /// <param name="userid">Initial value of the userid property.</param>
        public static sp_Compatibility_CompCheck_Result Createsp_Compatibility_CompCheck_Result(global::System.Int32 userid)
        {
            sp_Compatibility_CompCheck_Result sp_Compatibility_CompCheck_Result = new sp_Compatibility_CompCheck_Result();
            sp_Compatibility_CompCheck_Result.userid = userid;
            return sp_Compatibility_CompCheck_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> playlist_id
        {
            get
            {
                return _playlist_id;
            }
            set
            {
                Onplaylist_idChanging(value);
                ReportPropertyChanging("playlist_id");
                _playlist_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlist_id");
                Onplaylist_idChanged();
            }
        }
        private Nullable<global::System.Int32> _playlist_id;
        partial void Onplaylist_idChanging(Nullable<global::System.Int32> value);
        partial void Onplaylist_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SongsMatching
        {
            get
            {
                return _SongsMatching;
            }
            set
            {
                OnSongsMatchingChanging(value);
                ReportPropertyChanging("SongsMatching");
                _SongsMatching = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SongsMatching");
                OnSongsMatchingChanged();
            }
        }
        private Nullable<global::System.Int32> _SongsMatching;
        partial void OnSongsMatchingChanging(Nullable<global::System.Int32> value);
        partial void OnSongsMatchingChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="sp_Compatibility_CompCheck_Result_Ex")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_Compatibility_CompCheck_Result_Ex : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_Compatibility_CompCheck_Result_Ex object.
        /// </summary>
        /// <param name="userid">Initial value of the userid property.</param>
        public static sp_Compatibility_CompCheck_Result_Ex Createsp_Compatibility_CompCheck_Result_Ex(global::System.Int32 userid)
        {
            sp_Compatibility_CompCheck_Result_Ex sp_Compatibility_CompCheck_Result_Ex = new sp_Compatibility_CompCheck_Result_Ex();
            sp_Compatibility_CompCheck_Result_Ex.userid = userid;
            return sp_Compatibility_CompCheck_Result_Ex;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> playlist_id
        {
            get
            {
                return _playlist_id;
            }
            set
            {
                Onplaylist_idChanging(value);
                ReportPropertyChanging("playlist_id");
                _playlist_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlist_id");
                Onplaylist_idChanged();
            }
        }
        private Nullable<global::System.Int32> _playlist_id;
        partial void Onplaylist_idChanging(Nullable<global::System.Int32> value);
        partial void Onplaylist_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SongsMatching
        {
            get
            {
                return _SongsMatching;
            }
            set
            {
                OnSongsMatchingChanging(value);
                ReportPropertyChanging("SongsMatching");
                _SongsMatching = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SongsMatching");
                OnSongsMatchingChanged();
            }
        }
        private Nullable<global::System.Int32> _SongsMatching;
        partial void OnSongsMatchingChanging(Nullable<global::System.Int32> value);
        partial void OnSongsMatchingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ViewsNum
        {
            get
            {
                return _ViewsNum;
            }
            set
            {
                OnViewsNumChanging(value);
                ReportPropertyChanging("ViewsNum");
                _ViewsNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewsNum");
                OnViewsNumChanged();
            }
        }
        private Nullable<global::System.Int32> _ViewsNum;
        partial void OnViewsNumChanging(Nullable<global::System.Int32> value);
        partial void OnViewsNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Likes
        {
            get
            {
                return _Likes;
            }
            set
            {
                OnLikesChanging(value);
                ReportPropertyChanging("Likes");
                _Likes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Likes");
                OnLikesChanged();
            }
        }
        private Nullable<global::System.Int32> _Likes;
        partial void OnLikesChanging(Nullable<global::System.Int32> value);
        partial void OnLikesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="sp_Members_GetMembersPublicPagesRandomEx_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_Members_GetMembersPublicPagesRandomEx_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_Members_GetMembersPublicPagesRandomEx_Result object.
        /// </summary>
        /// <param name="publicPage_ID">Initial value of the PublicPage_ID property.</param>
        public static sp_Members_GetMembersPublicPagesRandomEx_Result Createsp_Members_GetMembersPublicPagesRandomEx_Result(global::System.Int32 publicPage_ID)
        {
            sp_Members_GetMembersPublicPagesRandomEx_Result sp_Members_GetMembersPublicPagesRandomEx_Result = new sp_Members_GetMembersPublicPagesRandomEx_Result();
            sp_Members_GetMembersPublicPagesRandomEx_Result.PublicPage_ID = publicPage_ID;
            return sp_Members_GetMembersPublicPagesRandomEx_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PublicPage_ID
        {
            get
            {
                return _PublicPage_ID;
            }
            set
            {
                OnPublicPage_IDChanging(value);
                ReportPropertyChanging("PublicPage_ID");
                _PublicPage_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublicPage_ID");
                OnPublicPage_IDChanged();
            }
        }
        private global::System.Int32 _PublicPage_ID;
        partial void OnPublicPage_IDChanging(global::System.Int32 value);
        partial void OnPublicPage_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Member_ID
        {
            get
            {
                return _Member_ID;
            }
            set
            {
                OnMember_IDChanging(value);
                ReportPropertyChanging("Member_ID");
                _Member_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Member_ID");
                OnMember_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Member_ID;
        partial void OnMember_IDChanging(Nullable<global::System.Int32> value);
        partial void OnMember_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> showHeader
        {
            get
            {
                return _showHeader;
            }
            set
            {
                OnshowHeaderChanging(value);
                ReportPropertyChanging("showHeader");
                _showHeader = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showHeader");
                OnshowHeaderChanged();
            }
        }
        private Nullable<global::System.Boolean> _showHeader;
        partial void OnshowHeaderChanging(Nullable<global::System.Boolean> value);
        partial void OnshowHeaderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> showDescription
        {
            get
            {
                return _showDescription;
            }
            set
            {
                OnshowDescriptionChanging(value);
                ReportPropertyChanging("showDescription");
                _showDescription = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showDescription");
                OnshowDescriptionChanged();
            }
        }
        private Nullable<global::System.Boolean> _showDescription;
        partial void OnshowDescriptionChanging(Nullable<global::System.Boolean> value);
        partial void OnshowDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> autoplay
        {
            get
            {
                return _autoplay;
            }
            set
            {
                OnautoplayChanging(value);
                ReportPropertyChanging("autoplay");
                _autoplay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("autoplay");
                OnautoplayChanged();
            }
        }
        private Nullable<global::System.Boolean> _autoplay;
        partial void OnautoplayChanging(Nullable<global::System.Boolean> value);
        partial void OnautoplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> showLikeButtton
        {
            get
            {
                return _showLikeButtton;
            }
            set
            {
                OnshowLikeButttonChanging(value);
                ReportPropertyChanging("showLikeButtton");
                _showLikeButtton = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showLikeButtton");
                OnshowLikeButttonChanged();
            }
        }
        private Nullable<global::System.Boolean> _showLikeButtton;
        partial void OnshowLikeButttonChanging(Nullable<global::System.Boolean> value);
        partial void OnshowLikeButttonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> showInfoButton
        {
            get
            {
                return _showInfoButton;
            }
            set
            {
                OnshowInfoButtonChanging(value);
                ReportPropertyChanging("showInfoButton");
                _showInfoButton = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showInfoButton");
                OnshowInfoButtonChanged();
            }
        }
        private Nullable<global::System.Boolean> _showInfoButton;
        partial void OnshowInfoButtonChanging(Nullable<global::System.Boolean> value);
        partial void OnshowInfoButtonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> showPhotosButton
        {
            get
            {
                return _showPhotosButton;
            }
            set
            {
                OnshowPhotosButtonChanging(value);
                ReportPropertyChanging("showPhotosButton");
                _showPhotosButton = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showPhotosButton");
                OnshowPhotosButtonChanged();
            }
        }
        private Nullable<global::System.Boolean> _showPhotosButton;
        partial void OnshowPhotosButtonChanging(Nullable<global::System.Boolean> value);
        partial void OnshowPhotosButtonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String header
        {
            get
            {
                return _header;
            }
            set
            {
                OnheaderChanging(value);
                ReportPropertyChanging("header");
                _header = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("header");
                OnheaderChanged();
            }
        }
        private global::System.String _header;
        partial void OnheaderChanging(global::System.String value);
        partial void OnheaderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HaFBackgroundColor
        {
            get
            {
                return _HaFBackgroundColor;
            }
            set
            {
                OnHaFBackgroundColorChanging(value);
                ReportPropertyChanging("HaFBackgroundColor");
                _HaFBackgroundColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HaFBackgroundColor");
                OnHaFBackgroundColorChanged();
            }
        }
        private global::System.String _HaFBackgroundColor;
        partial void OnHaFBackgroundColorChanging(global::System.String value);
        partial void OnHaFBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackgroundColor
        {
            get
            {
                return _BackgroundColor;
            }
            set
            {
                OnBackgroundColorChanging(value);
                ReportPropertyChanging("BackgroundColor");
                _BackgroundColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackgroundColor");
                OnBackgroundColorChanged();
            }
        }
        private global::System.String _BackgroundColor;
        partial void OnBackgroundColorChanging(global::System.String value);
        partial void OnBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeftSectionColor
        {
            get
            {
                return _LeftSectionColor;
            }
            set
            {
                OnLeftSectionColorChanging(value);
                ReportPropertyChanging("LeftSectionColor");
                _LeftSectionColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LeftSectionColor");
                OnLeftSectionColorChanged();
            }
        }
        private global::System.String _LeftSectionColor;
        partial void OnLeftSectionColorChanging(global::System.String value);
        partial void OnLeftSectionColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RightSectionColor
        {
            get
            {
                return _RightSectionColor;
            }
            set
            {
                OnRightSectionColorChanging(value);
                ReportPropertyChanging("RightSectionColor");
                _RightSectionColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RightSectionColor");
                OnRightSectionColorChanged();
            }
        }
        private global::System.String _RightSectionColor;
        partial void OnRightSectionColorChanging(global::System.String value);
        partial void OnRightSectionColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ButtonsBackgroundColor
        {
            get
            {
                return _ButtonsBackgroundColor;
            }
            set
            {
                OnButtonsBackgroundColorChanging(value);
                ReportPropertyChanging("ButtonsBackgroundColor");
                _ButtonsBackgroundColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ButtonsBackgroundColor");
                OnButtonsBackgroundColorChanged();
            }
        }
        private global::System.String _ButtonsBackgroundColor;
        partial void OnButtonsBackgroundColorChanging(global::System.String value);
        partial void OnButtonsBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SongBackgroundColor
        {
            get
            {
                return _SongBackgroundColor;
            }
            set
            {
                OnSongBackgroundColorChanging(value);
                ReportPropertyChanging("SongBackgroundColor");
                _SongBackgroundColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SongBackgroundColor");
                OnSongBackgroundColorChanged();
            }
        }
        private global::System.String _SongBackgroundColor;
        partial void OnSongBackgroundColorChanging(global::System.String value);
        partial void OnSongBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TextColor
        {
            get
            {
                return _TextColor;
            }
            set
            {
                OnTextColorChanging(value);
                ReportPropertyChanging("TextColor");
                _TextColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TextColor");
                OnTextColorChanged();
            }
        }
        private global::System.String _TextColor;
        partial void OnTextColorChanging(global::System.String value);
        partial void OnTextColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ButtonsColor
        {
            get
            {
                return _ButtonsColor;
            }
            set
            {
                OnButtonsColorChanging(value);
                ReportPropertyChanging("ButtonsColor");
                _ButtonsColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ButtonsColor");
                OnButtonsColorChanged();
            }
        }
        private global::System.String _ButtonsColor;
        partial void OnButtonsColorChanging(global::System.String value);
        partial void OnButtonsColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Playlist_ID
        {
            get
            {
                return _Playlist_ID;
            }
            set
            {
                OnPlaylist_IDChanging(value);
                ReportPropertyChanging("Playlist_ID");
                _Playlist_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Playlist_ID");
                OnPlaylist_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Playlist_ID;
        partial void OnPlaylist_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPlaylist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Playlist_Layout
        {
            get
            {
                return _Playlist_Layout;
            }
            set
            {
                OnPlaylist_LayoutChanging(value);
                ReportPropertyChanging("Playlist_Layout");
                _Playlist_Layout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Playlist_Layout");
                OnPlaylist_LayoutChanged();
            }
        }
        private Nullable<global::System.Int32> _Playlist_Layout;
        partial void OnPlaylist_LayoutChanging(Nullable<global::System.Int32> value);
        partial void OnPlaylist_LayoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="sp_Playlist_GetPlaylistById_Admin_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_Playlist_GetPlaylistById_Admin_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_Playlist_GetPlaylistById_Admin_Result object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="userid">Initial value of the userid property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="create_time">Initial value of the create_time property.</param>
        /// <param name="update_time">Initial value of the update_time property.</param>
        /// <param name="is_artist_playlist">Initial value of the is_artist_playlist property.</param>
        public static sp_Playlist_GetPlaylistById_Admin_Result Createsp_Playlist_GetPlaylistById_Admin_Result(global::System.Int32 id, global::System.Int32 userid, global::System.String name, global::System.Int32 create_time, global::System.Int32 update_time, global::System.Boolean is_artist_playlist)
        {
            sp_Playlist_GetPlaylistById_Admin_Result sp_Playlist_GetPlaylistById_Admin_Result = new sp_Playlist_GetPlaylistById_Admin_Result();
            sp_Playlist_GetPlaylistById_Admin_Result.id = id;
            sp_Playlist_GetPlaylistById_Admin_Result.userid = userid;
            sp_Playlist_GetPlaylistById_Admin_Result.name = name;
            sp_Playlist_GetPlaylistById_Admin_Result.create_time = create_time;
            sp_Playlist_GetPlaylistById_Admin_Result.update_time = update_time;
            sp_Playlist_GetPlaylistById_Admin_Result.is_artist_playlist = is_artist_playlist;
            return sp_Playlist_GetPlaylistById_Admin_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 create_time
        {
            get
            {
                return _create_time;
            }
            set
            {
                Oncreate_timeChanging(value);
                ReportPropertyChanging("create_time");
                _create_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("create_time");
                Oncreate_timeChanged();
            }
        }
        private global::System.Int32 _create_time;
        partial void Oncreate_timeChanging(global::System.Int32 value);
        partial void Oncreate_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 update_time
        {
            get
            {
                return _update_time;
            }
            set
            {
                Onupdate_timeChanging(value);
                ReportPropertyChanging("update_time");
                _update_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("update_time");
                Onupdate_timeChanged();
            }
        }
        private global::System.Int32 _update_time;
        partial void Onupdate_timeChanging(global::System.Int32 value);
        partial void Onupdate_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean is_artist_playlist
        {
            get
            {
                return _is_artist_playlist;
            }
            set
            {
                Onis_artist_playlistChanging(value);
                ReportPropertyChanging("is_artist_playlist");
                _is_artist_playlist = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_artist_playlist");
                Onis_artist_playlistChanged();
            }
        }
        private global::System.Boolean _is_artist_playlist;
        partial void Onis_artist_playlistChanging(global::System.Boolean value);
        partial void Onis_artist_playlistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ViewsNum
        {
            get
            {
                return _ViewsNum;
            }
            set
            {
                OnViewsNumChanging(value);
                ReportPropertyChanging("ViewsNum");
                _ViewsNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewsNum");
                OnViewsNumChanged();
            }
        }
        private Nullable<global::System.Int32> _ViewsNum;
        partial void OnViewsNumChanging(Nullable<global::System.Int32> value);
        partial void OnViewsNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Likes
        {
            get
            {
                return _Likes;
            }
            set
            {
                OnLikesChanging(value);
                ReportPropertyChanging("Likes");
                _Likes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Likes");
                OnLikesChanged();
            }
        }
        private Nullable<global::System.Int32> _Likes;
        partial void OnLikesChanging(Nullable<global::System.Int32> value);
        partial void OnLikesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Shares
        {
            get
            {
                return _Shares;
            }
            set
            {
                OnSharesChanging(value);
                ReportPropertyChanging("Shares");
                _Shares = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shares");
                OnSharesChanged();
            }
        }
        private Nullable<global::System.Int32> _Shares;
        partial void OnSharesChanging(Nullable<global::System.Int32> value);
        partial void OnSharesChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="sp_Playlist_GetSongsDeadLinks_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_Playlist_GetSongsDeadLinks_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_Playlist_GetSongsDeadLinks_Result object.
        /// </summary>
        /// <param name="playlist_track_id">Initial value of the playlist_track_id property.</param>
        /// <param name="sortid">Initial value of the sortid property.</param>
        public static sp_Playlist_GetSongsDeadLinks_Result Createsp_Playlist_GetSongsDeadLinks_Result(global::System.Int32 playlist_track_id, global::System.Int16 sortid)
        {
            sp_Playlist_GetSongsDeadLinks_Result sp_Playlist_GetSongsDeadLinks_Result = new sp_Playlist_GetSongsDeadLinks_Result();
            sp_Playlist_GetSongsDeadLinks_Result.playlist_track_id = playlist_track_id;
            sp_Playlist_GetSongsDeadLinks_Result.sortid = sortid;
            return sp_Playlist_GetSongsDeadLinks_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 playlist_track_id
        {
            get
            {
                return _playlist_track_id;
            }
            set
            {
                Onplaylist_track_idChanging(value);
                ReportPropertyChanging("playlist_track_id");
                _playlist_track_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("playlist_track_id");
                Onplaylist_track_idChanged();
            }
        }
        private global::System.Int32 _playlist_track_id;
        partial void Onplaylist_track_idChanging(global::System.Int32 value);
        partial void Onplaylist_track_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 sortid
        {
            get
            {
                return _sortid;
            }
            set
            {
                OnsortidChanging(value);
                ReportPropertyChanging("sortid");
                _sortid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sortid");
                OnsortidChanged();
            }
        }
        private global::System.Int16 _sortid;
        partial void OnsortidChanging(global::System.Int16 value);
        partial void OnsortidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private Nullable<global::System.Int32> _id;
        partial void OnidChanging(Nullable<global::System.Int32> value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String songurl
        {
            get
            {
                return _songurl;
            }
            set
            {
                OnsongurlChanging(value);
                ReportPropertyChanging("songurl");
                _songurl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("songurl");
                OnsongurlChanged();
            }
        }
        private global::System.String _songurl;
        partial void OnsongurlChanging(global::System.String value);
        partial void OnsongurlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> trackcount
        {
            get
            {
                return _trackcount;
            }
            set
            {
                OntrackcountChanging(value);
                ReportPropertyChanging("trackcount");
                _trackcount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("trackcount");
                OntrackcountChanged();
            }
        }
        private Nullable<global::System.Int32> _trackcount;
        partial void OntrackcountChanging(Nullable<global::System.Int32> value);
        partial void OntrackcountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> adddate
        {
            get
            {
                return _adddate;
            }
            set
            {
                OnadddateChanging(value);
                ReportPropertyChanging("adddate");
                _adddate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("adddate");
                OnadddateChanged();
            }
        }
        private Nullable<global::System.DateTime> _adddate;
        partial void OnadddateChanging(Nullable<global::System.DateTime> value);
        partial void OnadddateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fileid
        {
            get
            {
                return _fileid;
            }
            set
            {
                OnfileidChanging(value);
                ReportPropertyChanging("fileid");
                _fileid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fileid");
                OnfileidChanged();
            }
        }
        private Nullable<global::System.Int32> _fileid;
        partial void OnfileidChanging(Nullable<global::System.Int32> value);
        partial void OnfileidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> artist_track_id
        {
            get
            {
                return _artist_track_id;
            }
            set
            {
                Onartist_track_idChanging(value);
                ReportPropertyChanging("artist_track_id");
                _artist_track_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("artist_track_id");
                Onartist_track_idChanged();
            }
        }
        private Nullable<global::System.Int32> _artist_track_id;
        partial void Onartist_track_idChanging(Nullable<global::System.Int32> value);
        partial void Onartist_track_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> copyright
        {
            get
            {
                return _copyright;
            }
            set
            {
                OncopyrightChanging(value);
                ReportPropertyChanging("copyright");
                _copyright = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("copyright");
                OncopyrightChanged();
            }
        }
        private Nullable<global::System.Byte> _copyright;
        partial void OncopyrightChanging(Nullable<global::System.Byte> value);
        partial void OncopyrightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullTitle
        {
            get
            {
                return _FullTitle;
            }
            set
            {
                OnFullTitleChanging(value);
                ReportPropertyChanging("FullTitle");
                _FullTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullTitle");
                OnFullTitleChanged();
            }
        }
        private global::System.String _FullTitle;
        partial void OnFullTitleChanging(global::System.String value);
        partial void OnFullTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StrippedTitle
        {
            get
            {
                return _StrippedTitle;
            }
            set
            {
                OnStrippedTitleChanging(value);
                ReportPropertyChanging("StrippedTitle");
                _StrippedTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StrippedTitle");
                OnStrippedTitleChanged();
            }
        }
        private global::System.String _StrippedTitle;
        partial void OnStrippedTitleChanging(global::System.String value);
        partial void OnStrippedTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YoutubeId
        {
            get
            {
                return _YoutubeId;
            }
            set
            {
                OnYoutubeIdChanging(value);
                ReportPropertyChanging("YoutubeId");
                _YoutubeId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YoutubeId");
                OnYoutubeIdChanged();
            }
        }
        private global::System.String _YoutubeId;
        partial void OnYoutubeIdChanging(global::System.String value);
        partial void OnYoutubeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> YoutubeProcessed
        {
            get
            {
                return _YoutubeProcessed;
            }
            set
            {
                OnYoutubeProcessedChanging(value);
                ReportPropertyChanging("YoutubeProcessed");
                _YoutubeProcessed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YoutubeProcessed");
                OnYoutubeProcessedChanged();
            }
        }
        private Nullable<global::System.Boolean> _YoutubeProcessed;
        partial void OnYoutubeProcessedChanging(Nullable<global::System.Boolean> value);
        partial void OnYoutubeProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> like_count
        {
            get
            {
                return _like_count;
            }
            set
            {
                Onlike_countChanging(value);
                ReportPropertyChanging("like_count");
                _like_count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("like_count");
                Onlike_countChanged();
            }
        }
        private Nullable<global::System.Int32> _like_count;
        partial void Onlike_countChanging(Nullable<global::System.Int32> value);
        partial void Onlike_countChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UploaderId
        {
            get
            {
                return _UploaderId;
            }
            set
            {
                OnUploaderIdChanging(value);
                ReportPropertyChanging("UploaderId");
                _UploaderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploaderId");
                OnUploaderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UploaderId;
        partial void OnUploaderIdChanging(Nullable<global::System.Int32> value);
        partial void OnUploaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Double> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Double> value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Syndication
        {
            get
            {
                return _Syndication;
            }
            set
            {
                OnSyndicationChanging(value);
                ReportPropertyChanging("Syndication");
                _Syndication = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Syndication");
                OnSyndicationChanged();
            }
        }
        private Nullable<global::System.Byte> _Syndication;
        partial void OnSyndicationChanging(Nullable<global::System.Byte> value);
        partial void OnSyndicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Dead_Link_ID
        {
            get
            {
                return _Dead_Link_ID;
            }
            set
            {
                OnDead_Link_IDChanging(value);
                ReportPropertyChanging("Dead_Link_ID");
                _Dead_Link_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dead_Link_ID");
                OnDead_Link_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Dead_Link_ID;
        partial void OnDead_Link_IDChanging(Nullable<global::System.Int32> value);
        partial void OnDead_Link_IDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="sp_ScheduledPost_GetScheduleByID_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_ScheduledPost_GetScheduleByID_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_ScheduledPost_GetScheduleByID_Result object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static sp_ScheduledPost_GetScheduleByID_Result Createsp_ScheduledPost_GetScheduleByID_Result(global::System.Int32 id)
        {
            sp_ScheduledPost_GetScheduleByID_Result sp_ScheduledPost_GetScheduleByID_Result = new sp_ScheduledPost_GetScheduleByID_Result();
            sp_ScheduledPost_GetScheduleByID_Result.id = id;
            return sp_ScheduledPost_GetScheduleByID_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> scheduled_date
        {
            get
            {
                return _scheduled_date;
            }
            set
            {
                Onscheduled_dateChanging(value);
                ReportPropertyChanging("scheduled_date");
                _scheduled_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("scheduled_date");
                Onscheduled_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _scheduled_date;
        partial void Onscheduled_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onscheduled_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> post_id
        {
            get
            {
                return _post_id;
            }
            set
            {
                Onpost_idChanging(value);
                ReportPropertyChanging("post_id");
                _post_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("post_id");
                Onpost_idChanged();
            }
        }
        private Nullable<global::System.Int32> _post_id;
        partial void Onpost_idChanging(Nullable<global::System.Int32> value);
        partial void Onpost_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> activated
        {
            get
            {
                return _activated;
            }
            set
            {
                OnactivatedChanging(value);
                ReportPropertyChanging("activated");
                _activated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("activated");
                OnactivatedChanged();
            }
        }
        private Nullable<global::System.Int32> _activated;
        partial void OnactivatedChanging(Nullable<global::System.Int32> value);
        partial void OnactivatedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="sp_Tag_GetNewsTags_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_Tag_GetNewsTags_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_Tag_GetNewsTags_Result object.
        /// </summary>
        /// <param name="tag_News_ID">Initial value of the Tag_News_ID property.</param>
        public static sp_Tag_GetNewsTags_Result Createsp_Tag_GetNewsTags_Result(global::System.Int32 tag_News_ID)
        {
            sp_Tag_GetNewsTags_Result sp_Tag_GetNewsTags_Result = new sp_Tag_GetNewsTags_Result();
            sp_Tag_GetNewsTags_Result.Tag_News_ID = tag_News_ID;
            return sp_Tag_GetNewsTags_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Tag_News_ID
        {
            get
            {
                return _Tag_News_ID;
            }
            set
            {
                OnTag_News_IDChanging(value);
                ReportPropertyChanging("Tag_News_ID");
                _Tag_News_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_News_ID");
                OnTag_News_IDChanged();
            }
        }
        private global::System.Int32 _Tag_News_ID;
        partial void OnTag_News_IDChanging(global::System.Int32 value);
        partial void OnTag_News_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_ID
        {
            get
            {
                return _Tag_ID;
            }
            set
            {
                OnTag_IDChanging(value);
                ReportPropertyChanging("Tag_ID");
                _Tag_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_ID");
                OnTag_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_ID;
        partial void OnTag_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTag_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Article_ID
        {
            get
            {
                return _Article_ID;
            }
            set
            {
                OnArticle_IDChanging(value);
                ReportPropertyChanging("Article_ID");
                _Article_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Article_ID");
                OnArticle_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Article_ID;
        partial void OnArticle_IDChanging(Nullable<global::System.Int32> value);
        partial void OnArticle_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_Click_Num
        {
            get
            {
                return _Tag_Click_Num;
            }
            set
            {
                OnTag_Click_NumChanging(value);
                ReportPropertyChanging("Tag_Click_Num");
                _Tag_Click_Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_Click_Num");
                OnTag_Click_NumChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_Click_Num;
        partial void OnTag_Click_NumChanging(Nullable<global::System.Int32> value);
        partial void OnTag_Click_NumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag_Name
        {
            get
            {
                return _Tag_Name;
            }
            set
            {
                OnTag_NameChanging(value);
                ReportPropertyChanging("Tag_Name");
                _Tag_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tag_Name");
                OnTag_NameChanged();
            }
        }
        private global::System.String _Tag_Name;
        partial void OnTag_NameChanging(global::System.String value);
        partial void OnTag_NameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="sp_Tag_GetPlaylistTags_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_Tag_GetPlaylistTags_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_Tag_GetPlaylistTags_Result object.
        /// </summary>
        /// <param name="tag_Playlist_ID">Initial value of the Tag_Playlist_ID property.</param>
        public static sp_Tag_GetPlaylistTags_Result Createsp_Tag_GetPlaylistTags_Result(global::System.Int32 tag_Playlist_ID)
        {
            sp_Tag_GetPlaylistTags_Result sp_Tag_GetPlaylistTags_Result = new sp_Tag_GetPlaylistTags_Result();
            sp_Tag_GetPlaylistTags_Result.Tag_Playlist_ID = tag_Playlist_ID;
            return sp_Tag_GetPlaylistTags_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Tag_Playlist_ID
        {
            get
            {
                return _Tag_Playlist_ID;
            }
            set
            {
                OnTag_Playlist_IDChanging(value);
                ReportPropertyChanging("Tag_Playlist_ID");
                _Tag_Playlist_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_Playlist_ID");
                OnTag_Playlist_IDChanged();
            }
        }
        private global::System.Int32 _Tag_Playlist_ID;
        partial void OnTag_Playlist_IDChanging(global::System.Int32 value);
        partial void OnTag_Playlist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_ID
        {
            get
            {
                return _Tag_ID;
            }
            set
            {
                OnTag_IDChanging(value);
                ReportPropertyChanging("Tag_ID");
                _Tag_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_ID");
                OnTag_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_ID;
        partial void OnTag_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTag_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Playlist_ID
        {
            get
            {
                return _Playlist_ID;
            }
            set
            {
                OnPlaylist_IDChanging(value);
                ReportPropertyChanging("Playlist_ID");
                _Playlist_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Playlist_ID");
                OnPlaylist_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Playlist_ID;
        partial void OnPlaylist_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPlaylist_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_Click_Num
        {
            get
            {
                return _Tag_Click_Num;
            }
            set
            {
                OnTag_Click_NumChanging(value);
                ReportPropertyChanging("Tag_Click_Num");
                _Tag_Click_Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_Click_Num");
                OnTag_Click_NumChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_Click_Num;
        partial void OnTag_Click_NumChanging(Nullable<global::System.Int32> value);
        partial void OnTag_Click_NumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag_Name
        {
            get
            {
                return _Tag_Name;
            }
            set
            {
                OnTag_NameChanging(value);
                ReportPropertyChanging("Tag_Name");
                _Tag_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tag_Name");
                OnTag_NameChanged();
            }
        }
        private global::System.String _Tag_Name;
        partial void OnTag_NameChanging(global::System.String value);
        partial void OnTag_NameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="sp_Tag_GetPopularNewsTags_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_Tag_GetPopularNewsTags_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tag_ID
        {
            get
            {
                return _Tag_ID;
            }
            set
            {
                OnTag_IDChanging(value);
                ReportPropertyChanging("Tag_ID");
                _Tag_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tag_ID");
                OnTag_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Tag_ID;
        partial void OnTag_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTag_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tags_Num
        {
            get
            {
                return _Tags_Num;
            }
            set
            {
                OnTags_NumChanging(value);
                ReportPropertyChanging("Tags_Num");
                _Tags_Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tags_Num");
                OnTags_NumChanged();
            }
        }
        private Nullable<global::System.Int32> _Tags_Num;
        partial void OnTags_NumChanging(Nullable<global::System.Int32> value);
        partial void OnTags_NumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TagTBL
        {
            get
            {
                return _TagTBL;
            }
            set
            {
                OnTagTBLChanging(value);
                ReportPropertyChanging("TagTBL");
                _TagTBL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TagTBL");
                OnTagTBLChanged();
            }
        }
        private global::System.String _TagTBL;
        partial void OnTagTBLChanging(global::System.String value);
        partial void OnTagTBLChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="hypster_tv_Model", Name="videoFeaturedSlideshow")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class videoFeaturedSlideshow : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new videoFeaturedSlideshow object.
        /// </summary>
        /// <param name="videoFeatured_ID">Initial value of the videoFeatured_ID property.</param>
        public static videoFeaturedSlideshow CreatevideoFeaturedSlideshow(global::System.Int32 videoFeatured_ID)
        {
            videoFeaturedSlideshow videoFeaturedSlideshow = new videoFeaturedSlideshow();
            videoFeaturedSlideshow.videoFeatured_ID = videoFeatured_ID;
            return videoFeaturedSlideshow;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 videoFeatured_ID
        {
            get
            {
                return _videoFeatured_ID;
            }
            set
            {
                OnvideoFeatured_IDChanging(value);
                ReportPropertyChanging("videoFeatured_ID");
                _videoFeatured_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("videoFeatured_ID");
                OnvideoFeatured_IDChanged();
            }
        }
        private global::System.Int32 _videoFeatured_ID;
        partial void OnvideoFeatured_IDChanging(global::System.Int32 value);
        partial void OnvideoFeatured_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> videoClip_ID
        {
            get
            {
                return _videoClip_ID;
            }
            set
            {
                OnvideoClip_IDChanging(value);
                ReportPropertyChanging("videoClip_ID");
                _videoClip_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("videoClip_ID");
                OnvideoClip_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _videoClip_ID;
        partial void OnvideoClip_IDChanging(Nullable<global::System.Int32> value);
        partial void OnvideoClip_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageSrc
        {
            get
            {
                return _ImageSrc;
            }
            set
            {
                OnImageSrcChanging(value);
                ReportPropertyChanging("ImageSrc");
                _ImageSrc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageSrc");
                OnImageSrcChanged();
            }
        }
        private global::System.String _ImageSrc;
        partial void OnImageSrcChanging(global::System.String value);
        partial void OnImageSrcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();

        #endregion

    }

    #endregion

    
}
